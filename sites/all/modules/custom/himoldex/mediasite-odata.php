
<?php
  /*
    Copyright 2010 Persistent Systems Limited

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
   */

    /**
    * This code was generated by the tool 'PHPDataSvcUtil.php'.
    * Runtime Version:1.0
    *
    * Changes to this file may cause incorrect behavior and will be lost if
    * the code is regenerated.
    */

    require_once 'Context/ObjectContext.php';
    /**
    * Defines default OData Service URL for this proxy class
    */
    define("DEFAULT_ODATA_SERVICE_URL", "https://mediasite.himolde.no/mediasite/api/v1");
    
   /**
    * @class:FolderRepresentation
    * @type:EntityType
    * @key:Id
    */
    class FolderRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Recycled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Type;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsShared;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsCopyDestination;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsReviewEditApproveEnabled;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_FolderRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PresentationsPartner
        * @FromRole:PresentationsPartner
        * @ToRole:Presentations
        */
        public $Presentations;
    

       /**
        * Function to create an instance of FolderRepresentation
        * @param Edm.String $Id
        * @param Edm.DateTime $CreationDate
        * @param Edm.DateTime $LastModified
        * @param Edm.Boolean $Recycled
        */
        public static function CreateFolderRepresentation(
            $Id, 
            $CreationDate, 
            $LastModified, 
            $Recycled)
        {   
            $FolderRepresentation = new FolderRepresentation();
            $FolderRepresentation->Id = $Id;
            $FolderRepresentation->CreationDate = $CreationDate;
            $FolderRepresentation->LastModified = $LastModified;
            $FolderRepresentation->Recycled = $Recycled;
            return $FolderRepresentation;
        }

       /**
        * Constructor for FolderRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Presentations'] = 'Presentations';
            $this->_entityKey[] = 'Id';
            $this->Presentations = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:JobRepresentation
    * @type:EntityType
    * @key:Id
    */
    class JobRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StatusMessage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobType;
    

       /**
        * Function to create an instance of JobRepresentation
        * @param Edm.String $Id
        * @param Edm.String $Status
        */
        public static function CreateJobRepresentation(
            $Id, 
            $Status)
        {   
            $JobRepresentation = new JobRepresentation();
            $JobRepresentation->Id = $Id;
            $JobRepresentation->Status = $Status;
            return $JobRepresentation;
        }

       /**
        * Constructor for JobRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:TemplateRepresentation
    * @type:EntityType
    * @key:Id
    */
    class TemplateRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $PollsEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ForumsEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsLive;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsUploadAutomatic;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsOnDemand;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TimeZoneRegistryKey;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ReviewEditApproveEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ReplaceAclWithPolicy;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue)
        */
        public $CustomFieldValues;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Player_SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_PlayerPartner
        * @FromRole:PlayerPartner
        * @ToRole:Player
        */
        public $Player;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Presenters_SonicFoundry_Mediasite_WebApi_Model_PresenterRepresentation_PresentersPartner
        * @FromRole:PresentersPartner
        * @ToRole:Presenters
        */
        public $Presenters;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Tags_SonicFoundry_Mediasite_WebApi_Model_TagRepresentation_TagsPartner
        * @FromRole:TagsPartner
        * @ToRole:Tags
        */
        public $Tags;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_SlideContent_SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_SlideContentPartner
        * @FromRole:SlideContentPartner
        * @ToRole:SlideContent
        */
        public $SlideContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_OnDemandContent_SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_OnDemandContentPartner
        * @FromRole:OnDemandContentPartner
        * @ToRole:OnDemandContent
        */
        public $OnDemandContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_BroadcastContent_SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_BroadcastContentPartner
        * @FromRole:BroadcastContentPartner
        * @ToRole:BroadcastContent
        */
        public $BroadcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_PodcastContent_SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_PodcastContentPartner
        * @FromRole:PodcastContentPartner
        * @ToRole:PodcastContent
        */
        public $PodcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_OcrContent_SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_OcrContentPartner
        * @FromRole:OcrContentPartner
        * @ToRole:OcrContent
        */
        public $OcrContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_CaptionContent_SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_CaptionContentPartner
        * @FromRole:CaptionContentPartner
        * @ToRole:CaptionContent
        */
        public $CaptionContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_VideoPodcastContent_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastContentPartner
        * @FromRole:VideoPodcastContentPartner
        * @ToRole:VideoPodcastContent
        */
        public $VideoPodcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_ExternalPublishingContent_SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingContentPartner
        * @FromRole:ExternalPublishingContentPartner
        * @ToRole:ExternalPublishingContent
        */
        public $ExternalPublishingContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner
        * @FromRole:ModulesPartner
        * @ToRole:Modules
        */
        public $Modules;
    

       /**
        * Function to create an instance of TemplateRepresentation
        * @param Edm.String $Id
        * @param Edm.Boolean $PollsEnabled
        * @param Edm.Boolean $ForumsEnabled
        * @param Edm.Boolean $IsLive
        * @param Edm.Boolean $IsUploadAutomatic
        * @param Edm.Boolean $IsOnDemand
        * @param Edm.Int32 $TimeZoneId
        * @param Edm.Boolean $ReviewEditApproveEnabled
        * @param Edm.Boolean $ReplaceAclWithPolicy
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue) $CustomFieldValues
        */
        public static function CreateTemplateRepresentation(
            $Id, 
            $PollsEnabled, 
            $ForumsEnabled, 
            $IsLive, 
            $IsUploadAutomatic, 
            $IsOnDemand, 
            $TimeZoneId, 
            $ReviewEditApproveEnabled, 
            $ReplaceAclWithPolicy, 
            $CustomFieldValues)
        {   
            $TemplateRepresentation = new TemplateRepresentation();
            $TemplateRepresentation->Id = $Id;
            $TemplateRepresentation->PollsEnabled = $PollsEnabled;
            $TemplateRepresentation->ForumsEnabled = $ForumsEnabled;
            $TemplateRepresentation->IsLive = $IsLive;
            $TemplateRepresentation->IsUploadAutomatic = $IsUploadAutomatic;
            $TemplateRepresentation->IsOnDemand = $IsOnDemand;
            $TemplateRepresentation->TimeZoneId = $TimeZoneId;
            $TemplateRepresentation->ReviewEditApproveEnabled = $ReviewEditApproveEnabled;
            $TemplateRepresentation->ReplaceAclWithPolicy = $ReplaceAclWithPolicy;
            $TemplateRepresentation->CustomFieldValues = $CustomFieldValues;
            return $TemplateRepresentation;
        }

       /**
        * Constructor for TemplateRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Player'] = 'Player';
            $this->_entityMap['Presenters'] = 'Presenters';
            $this->_entityMap['Tags'] = 'Tags';
            $this->_entityMap['SlideContent'] = 'SlideContent';
            $this->_entityMap['OnDemandContent'] = 'OnDemandContent';
            $this->_entityMap['BroadcastContent'] = 'BroadcastContent';
            $this->_entityMap['PodcastContent'] = 'PodcastContent';
            $this->_entityMap['OcrContent'] = 'OcrContent';
            $this->_entityMap['CaptionContent'] = 'CaptionContent';
            $this->_entityMap['VideoPodcastContent'] = 'VideoPodcastContent';
            $this->_entityMap['ExternalPublishingContent'] = 'ExternalPublishingContent';
            $this->_entityMap['Modules'] = 'Modules';
            $this->_entityKey[] = 'Id';
            $this->Player = array();
            $this->Presenters = array();
            $this->Tags = array();
            $this->SlideContent = array();
            $this->OnDemandContent = array();
            $this->BroadcastContent = array();
            $this->PodcastContent = array();
            $this->OcrContent = array();
            $this->CaptionContent = array();
            $this->VideoPodcastContent = array();
            $this->ExternalPublishingContent = array();
            $this->Modules = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationDefaultRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PresentationDefaultRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Title;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_RelatedPresentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_RelatedPresentationsPartner
        * @FromRole:RelatedPresentationsPartner
        * @ToRole:RelatedPresentations
        */
        public $RelatedPresentations;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Tags_SonicFoundry_Mediasite_WebApi_Model_TagRepresentation_TagsPartner
        * @FromRole:TagsPartner
        * @ToRole:Tags
        */
        public $Tags;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_TimedEvents_SonicFoundry_Mediasite_WebApi_Model_TimedEventRepresentation_TimedEventsPartner
        * @FromRole:TimedEventsPartner
        * @ToRole:TimedEvents
        */
        public $TimedEvents;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Presenters_SonicFoundry_Mediasite_WebApi_Model_PresenterRepresentation_PresentersPartner
        * @FromRole:PresentersPartner
        * @ToRole:Presenters
        */
        public $Presenters;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Questions_SonicFoundry_Mediasite_WebApi_Model_PresentationQuestionRepresentation_QuestionsPartner
        * @FromRole:QuestionsPartner
        * @ToRole:Questions
        */
        public $Questions;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_ThumbnailContent_SonicFoundry_Mediasite_WebApi_Model_PresentationThumbnailRepresentation_ThumbnailContentPartner
        * @FromRole:ThumbnailContentPartner
        * @ToRole:ThumbnailContent
        */
        public $ThumbnailContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_SlideContent_SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_SlideContentPartner
        * @FromRole:SlideContentPartner
        * @ToRole:SlideContent
        */
        public $SlideContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_OnDemandContent_SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_OnDemandContentPartner
        * @FromRole:OnDemandContentPartner
        * @ToRole:OnDemandContent
        */
        public $OnDemandContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_BroadcastContent_SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_BroadcastContentPartner
        * @FromRole:BroadcastContentPartner
        * @ToRole:BroadcastContent
        */
        public $BroadcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PodcastContent_SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_PodcastContentPartner
        * @FromRole:PodcastContentPartner
        * @ToRole:PodcastContent
        */
        public $PodcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_OcrContent_SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_OcrContentPartner
        * @FromRole:OcrContentPartner
        * @ToRole:OcrContent
        */
        public $OcrContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_CaptionContent_SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_CaptionContentPartner
        * @FromRole:CaptionContentPartner
        * @ToRole:CaptionContent
        */
        public $CaptionContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_AudioPeaksContent_SonicFoundry_Mediasite_WebApi_Model_AudioPeaksRepresentation_AudioPeaksContentPartner
        * @FromRole:AudioPeaksContentPartner
        * @ToRole:AudioPeaksContent
        */
        public $AudioPeaksContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_LayoutOptions_SonicFoundry_Mediasite_WebApi_Model_PlayerLayoutOptionsRepresentation_LayoutOptionsPartner
        * @FromRole:LayoutOptionsPartner
        * @ToRole:LayoutOptions
        */
        public $LayoutOptions;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_EmailInvitation_SonicFoundry_Mediasite_WebApi_Model_EmailInvitationRepresentation_EmailInvitationPartner
        * @FromRole:EmailInvitationPartner
        * @ToRole:EmailInvitation
        */
        public $EmailInvitation;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_ShowcaseChannels_SonicFoundry_Mediasite_WebApi_Model_ShowcaseChannelRepresentation_ShowcaseChannelsPartner
        * @FromRole:ShowcaseChannelsPartner
        * @ToRole:ShowcaseChannels
        */
        public $ShowcaseChannels;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_VideoPodcastContent_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastContentPartner
        * @FromRole:VideoPodcastContentPartner
        * @ToRole:VideoPodcastContent
        */
        public $VideoPodcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner
        * @FromRole:ModulesPartner
        * @ToRole:Modules
        */
        public $Modules;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Categories_SonicFoundry_Mediasite_WebApi_Model_CategoryRepresentation_CategoriesPartner
        * @FromRole:CategoriesPartner
        * @ToRole:Categories
        */
        public $Categories;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_ExternalPublishingContent_SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingContentPartner
        * @FromRole:ExternalPublishingContentPartner
        * @ToRole:ExternalPublishingContent
        */
        public $ExternalPublishingContent;
    

       /**
        * Function to create an instance of PresentationDefaultRepresentation
        * @param Edm.String $Id
        */
        public static function CreatePresentationDefaultRepresentation(
            $Id)
        {   
            $PresentationDefaultRepresentation = new PresentationDefaultRepresentation();
            $PresentationDefaultRepresentation->Id = $Id;
            return $PresentationDefaultRepresentation;
        }

       /**
        * Constructor for PresentationDefaultRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['RelatedPresentations'] = 'RelatedPresentations';
            $this->_entityMap['Tags'] = 'Tags';
            $this->_entityMap['TimedEvents'] = 'TimedEvents';
            $this->_entityMap['Presenters'] = 'Presenters';
            $this->_entityMap['Questions'] = 'Questions';
            $this->_entityMap['ThumbnailContent'] = 'ThumbnailContent';
            $this->_entityMap['SlideContent'] = 'SlideContent';
            $this->_entityMap['OnDemandContent'] = 'OnDemandContent';
            $this->_entityMap['BroadcastContent'] = 'BroadcastContent';
            $this->_entityMap['PodcastContent'] = 'PodcastContent';
            $this->_entityMap['OcrContent'] = 'OcrContent';
            $this->_entityMap['CaptionContent'] = 'CaptionContent';
            $this->_entityMap['AudioPeaksContent'] = 'AudioPeaksContent';
            $this->_entityMap['LayoutOptions'] = 'LayoutOptions';
            $this->_entityMap['EmailInvitation'] = 'EmailInvitation';
            $this->_entityMap['ShowcaseChannels'] = 'ShowcaseChannels';
            $this->_entityMap['VideoPodcastContent'] = 'VideoPodcastContent';
            $this->_entityMap['Modules'] = 'Modules';
            $this->_entityMap['Categories'] = 'Categories';
            $this->_entityMap['ExternalPublishingContent'] = 'ExternalPublishingContent';
            $this->_entityKey[] = 'Id';
            $this->RelatedPresentations = array();
            $this->Tags = array();
            $this->TimedEvents = array();
            $this->Presenters = array();
            $this->Questions = array();
            $this->ThumbnailContent = array();
            $this->SlideContent = array();
            $this->OnDemandContent = array();
            $this->BroadcastContent = array();
            $this->PodcastContent = array();
            $this->OcrContent = array();
            $this->CaptionContent = array();
            $this->AudioPeaksContent = array();
            $this->LayoutOptions = array();
            $this->EmailInvitation = array();
            $this->ShowcaseChannels = array();
            $this->VideoPodcastContent = array();
            $this->Modules = array();
            $this->Categories = array();
            $this->ExternalPublishingContent = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CatalogRepresentation
    * @type:EntityType
    * @key:Id
    */
    class CatalogRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LinkedFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FriendlyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $CatalogUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Recycled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchTerm;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsListedInShowcase;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsMyMediasiteChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsSearchBased;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsSpotlightChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $LimitSearchToCatalog;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeSubFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $UseShowcaseRegistration;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsPublishingTabCatalog;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowInPublishingTab;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TermsAndConditionsId;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_CatalogRepresentation_Settings_SonicFoundry_Mediasite_WebApi_Model_CatalogSettingsRepresentation_SettingsPartner
        * @FromRole:SettingsPartner
        * @ToRole:Settings
        */
        public $Settings;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_CatalogRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner
        * @FromRole:ModulesPartner
        * @ToRole:Modules
        */
        public $Modules;
    

       /**
        * Function to create an instance of CatalogRepresentation
        * @param Edm.String $Id
        */
        public static function CreateCatalogRepresentation(
            $Id)
        {   
            $CatalogRepresentation = new CatalogRepresentation();
            $CatalogRepresentation->Id = $Id;
            return $CatalogRepresentation;
        }

       /**
        * Constructor for CatalogRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Settings'] = 'Settings';
            $this->_entityMap['Modules'] = 'Modules';
            $this->_entityKey[] = 'Id';
            $this->Settings = array();
            $this->Modules = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CatalogSettingsRepresentation
    * @type:EntityType
    * @key:CatalogId
    */
    class CatalogSettingsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $CatalogId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Theme;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $AllowCatalogLinks;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $AllowLoginControls;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowTopBanner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowNavigationFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $AllowEmailInvitation;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $UseEmailValidationImage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $AllowPresentationDownload;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DisplayPresentationViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $AllowRssFeed;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchTerm;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchFields;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TopBannerLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TopBannerBackgroundColor;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TopBannerPosition;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $DefaultSortBy;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $DefaultSortDirection;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationDisplayType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $PresentationsPerPage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $ColumnsPerPage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresentationDescription;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresentationLinks;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresenterImage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresenterNames;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresentationStatus;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresentationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresentationTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowCardPresentationDuration;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowTablePresenterNames;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowTablePresentationStatus;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowTablePresentationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowTablePresentationTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowTablePresentationDuration;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $RssItemCount;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $RssDateLimitBack;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $RssDateLimitForward;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PreviewPlayerId;
    

       /**
        * Function to create an instance of CatalogSettingsRepresentation
        * @param Edm.String $CatalogId
        */
        public static function CreateCatalogSettingsRepresentation(
            $CatalogId)
        {   
            $CatalogSettingsRepresentation = new CatalogSettingsRepresentation();
            $CatalogSettingsRepresentation->CatalogId = $CatalogId;
            return $CatalogSettingsRepresentation;
        }

       /**
        * Constructor for CatalogSettingsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'CatalogId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ScheduleRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ScheduleRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TitleType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ScheduleTemplateId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsLive;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsUploadAutomatic;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderWebServiceUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderEncryptionKey;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderUsername;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderPassword;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $AdvanceCreationTime;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $AdvanceLoadTimeInSeconds;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ReceipientsEmailAddresses;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $CreatePresentation;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $LoadPresentation;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AutoStart;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AutoStop;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SendersEmail;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $CDNPublishingPoint;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $NextNumberInSchedule;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $NotifyPresenter;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TimeZoneRegistryKey;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $DeleteInactive;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsForumEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsOnDemand;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsPollsEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ReviewEditApproveEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ReplaceAclWithPolicy;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlayerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.AccessControlEntry)
        */
        public $Policy;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue)
        */
        public $CustomFieldValues;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Presenters_SonicFoundry_Mediasite_WebApi_Model_PresenterRepresentation_PresentersPartner
        * @FromRole:PresentersPartner
        * @ToRole:Presenters
        */
        public $Presenters;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Recurrences_SonicFoundry_Mediasite_WebApi_Model_ScheduleRecurrenceRepresentation_RecurrencesPartner
        * @FromRole:RecurrencesPartner
        * @ToRole:Recurrences
        */
        public $Recurrences;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Tags_SonicFoundry_Mediasite_WebApi_Model_TagRepresentation_TagsPartner
        * @FromRole:TagsPartner
        * @ToRole:Tags
        */
        public $Tags;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Recorder_SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_RecorderPartner
        * @FromRole:RecorderPartner
        * @ToRole:Recorder
        */
        public $Recorder;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Player_SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_PlayerPartner
        * @FromRole:PlayerPartner
        * @ToRole:Player
        */
        public $Player;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Folder_SonicFoundry_Mediasite_WebApi_Model_FolderRepresentation_FolderPartner
        * @FromRole:FolderPartner
        * @ToRole:Folder
        */
        public $Folder;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_SlideContent_SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_SlideContentPartner
        * @FromRole:SlideContentPartner
        * @ToRole:SlideContent
        */
        public $SlideContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_OnDemandContent_SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_OnDemandContentPartner
        * @FromRole:OnDemandContentPartner
        * @ToRole:OnDemandContent
        */
        public $OnDemandContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_BroadcastContent_SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_BroadcastContentPartner
        * @FromRole:BroadcastContentPartner
        * @ToRole:BroadcastContent
        */
        public $BroadcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_PodcastContent_SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_PodcastContentPartner
        * @FromRole:PodcastContentPartner
        * @ToRole:PodcastContent
        */
        public $PodcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_OcrContent_SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_OcrContentPartner
        * @FromRole:OcrContentPartner
        * @ToRole:OcrContent
        */
        public $OcrContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_CaptionContent_SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_CaptionContentPartner
        * @FromRole:CaptionContentPartner
        * @ToRole:CaptionContent
        */
        public $CaptionContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_VideoPodcastContent_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastContentPartner
        * @FromRole:VideoPodcastContentPartner
        * @ToRole:VideoPodcastContent
        */
        public $VideoPodcastContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_ExternalPublishingContent_SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingContentPartner
        * @FromRole:ExternalPublishingContentPartner
        * @ToRole:ExternalPublishingContent
        */
        public $ExternalPublishingContent;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner
        * @FromRole:ModulesPartner
        * @ToRole:Modules
        */
        public $Modules;
    

       /**
        * Function to create an instance of ScheduleRepresentation
        * @param Edm.String $Id
        * @param Edm.Boolean $IsLive
        * @param Edm.Boolean $IsUploadAutomatic
        * @param Edm.Int32 $AdvanceCreationTime
        * @param Edm.Int32 $AdvanceLoadTimeInSeconds
        * @param Edm.Boolean $CreatePresentation
        * @param Edm.Boolean $LoadPresentation
        * @param Edm.Boolean $AutoStart
        * @param Edm.Boolean $AutoStop
        * @param Edm.Int32 $NextNumberInSchedule
        * @param Edm.Boolean $NotifyPresenter
        * @param Edm.DateTime $LastModified
        * @param Edm.Boolean $DeleteInactive
        * @param Edm.Boolean $IsForumEnabled
        * @param Edm.Boolean $IsOnDemand
        * @param Edm.Boolean $IsPollsEnabled
        * @param Edm.Boolean $ReviewEditApproveEnabled
        * @param Edm.Boolean $ReplaceAclWithPolicy
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.AccessControlEntry) $Policy
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue) $CustomFieldValues
        */
        public static function CreateScheduleRepresentation(
            $Id, 
            $IsLive, 
            $IsUploadAutomatic, 
            $AdvanceCreationTime, 
            $AdvanceLoadTimeInSeconds, 
            $CreatePresentation, 
            $LoadPresentation, 
            $AutoStart, 
            $AutoStop, 
            $NextNumberInSchedule, 
            $NotifyPresenter, 
            $LastModified, 
            $DeleteInactive, 
            $IsForumEnabled, 
            $IsOnDemand, 
            $IsPollsEnabled, 
            $ReviewEditApproveEnabled, 
            $ReplaceAclWithPolicy, 
            $Policy, 
            $CustomFieldValues)
        {   
            $ScheduleRepresentation = new ScheduleRepresentation();
            $ScheduleRepresentation->Id = $Id;
            $ScheduleRepresentation->IsLive = $IsLive;
            $ScheduleRepresentation->IsUploadAutomatic = $IsUploadAutomatic;
            $ScheduleRepresentation->AdvanceCreationTime = $AdvanceCreationTime;
            $ScheduleRepresentation->AdvanceLoadTimeInSeconds = $AdvanceLoadTimeInSeconds;
            $ScheduleRepresentation->CreatePresentation = $CreatePresentation;
            $ScheduleRepresentation->LoadPresentation = $LoadPresentation;
            $ScheduleRepresentation->AutoStart = $AutoStart;
            $ScheduleRepresentation->AutoStop = $AutoStop;
            $ScheduleRepresentation->NextNumberInSchedule = $NextNumberInSchedule;
            $ScheduleRepresentation->NotifyPresenter = $NotifyPresenter;
            $ScheduleRepresentation->LastModified = $LastModified;
            $ScheduleRepresentation->DeleteInactive = $DeleteInactive;
            $ScheduleRepresentation->IsForumEnabled = $IsForumEnabled;
            $ScheduleRepresentation->IsOnDemand = $IsOnDemand;
            $ScheduleRepresentation->IsPollsEnabled = $IsPollsEnabled;
            $ScheduleRepresentation->ReviewEditApproveEnabled = $ReviewEditApproveEnabled;
            $ScheduleRepresentation->ReplaceAclWithPolicy = $ReplaceAclWithPolicy;
            $ScheduleRepresentation->Policy = $Policy;
            $ScheduleRepresentation->CustomFieldValues = $CustomFieldValues;
            return $ScheduleRepresentation;
        }

       /**
        * Constructor for ScheduleRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Presenters'] = 'Presenters';
            $this->_entityMap['Recurrences'] = 'Recurrences';
            $this->_entityMap['Tags'] = 'Tags';
            $this->_entityMap['Recorder'] = 'Recorder';
            $this->_entityMap['Player'] = 'Player';
            $this->_entityMap['Folder'] = 'Folder';
            $this->_entityMap['SlideContent'] = 'SlideContent';
            $this->_entityMap['OnDemandContent'] = 'OnDemandContent';
            $this->_entityMap['BroadcastContent'] = 'BroadcastContent';
            $this->_entityMap['PodcastContent'] = 'PodcastContent';
            $this->_entityMap['OcrContent'] = 'OcrContent';
            $this->_entityMap['CaptionContent'] = 'CaptionContent';
            $this->_entityMap['VideoPodcastContent'] = 'VideoPodcastContent';
            $this->_entityMap['ExternalPublishingContent'] = 'ExternalPublishingContent';
            $this->_entityMap['Modules'] = 'Modules';
            $this->_entityKey[] = 'Id';
            $this->Presenters = array();
            $this->Recurrences = array();
            $this->Tags = array();
            $this->Recorder = array();
            $this->Player = array();
            $this->Folder = array();
            $this->SlideContent = array();
            $this->OnDemandContent = array();
            $this->BroadcastContent = array();
            $this->PodcastContent = array();
            $this->OcrContent = array();
            $this->CaptionContent = array();
            $this->VideoPodcastContent = array();
            $this->ExternalPublishingContent = array();
            $this->Modules = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:RecorderRepresentation
    * @type:EntityType
    * @key:Id
    */
    class RecorderRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SerialNumber;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Version;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $WebServiceUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EncryptionKey;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Username;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Password;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastVersionUpdateDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PhysicalAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ImageVersion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $MaxNumberOfVideoStreams;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HardwareRevision;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_LicenseStatus_SonicFoundry_Mediasite_WebApi_Model_RecorderLicenseStatusRepresentation_LicenseStatusPartner
        * @FromRole:LicenseStatusPartner
        * @ToRole:LicenseStatus
        */
        public $LicenseStatus;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_Status_SonicFoundry_Mediasite_WebApi_Model_RecorderStatusRepresentation_StatusPartner
        * @FromRole:StatusPartner
        * @ToRole:Status
        */
        public $Status;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_ScheduledRecordingTimes_SonicFoundry_Mediasite_WebApi_Model_ScheduledRecordingTime_ScheduledRecordingTimesPartner
        * @FromRole:ScheduledRecordingTimesPartner
        * @ToRole:ScheduledRecordingTimes
        */
        public $ScheduledRecordingTimes;
    

       /**
        * Function to create an instance of RecorderRepresentation
        * @param Edm.String $Id
        */
        public static function CreateRecorderRepresentation(
            $Id)
        {   
            $RecorderRepresentation = new RecorderRepresentation();
            $RecorderRepresentation->Id = $Id;
            return $RecorderRepresentation;
        }

       /**
        * Constructor for RecorderRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['LicenseStatus'] = 'LicenseStatus';
            $this->_entityMap['Status'] = 'Status';
            $this->_entityMap['ScheduledRecordingTimes'] = 'ScheduledRecordingTimes';
            $this->_entityKey[] = 'Id';
            $this->LicenseStatus = array();
            $this->Status = array();
            $this->ScheduledRecordingTimes = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:RecorderStatusRepresentation
    * @type:EntityType
    * @key:RecorderId
    */
    class RecorderStatusRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderState;
    

       /**
        * Function to create an instance of RecorderStatusRepresentation
        * @param Edm.String $RecorderId
        */
        public static function CreateRecorderStatusRepresentation(
            $RecorderId)
        {   
            $RecorderStatusRepresentation = new RecorderStatusRepresentation();
            $RecorderStatusRepresentation->RecorderId = $RecorderId;
            return $RecorderStatusRepresentation;
        }

       /**
        * Constructor for RecorderStatusRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'RecorderId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:RecorderLicenseStatusRepresentation
    * @type:EntityType
    * @key:RecorderId
    */
    class RecorderLicenseStatusRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsLicensed;
    

       /**
        * Function to create an instance of RecorderLicenseStatusRepresentation
        * @param Edm.String $RecorderId
        * @param Edm.Boolean $IsLicensed
        */
        public static function CreateRecorderLicenseStatusRepresentation(
            $RecorderId, 
            $IsLicensed)
        {   
            $RecorderLicenseStatusRepresentation = new RecorderLicenseStatusRepresentation();
            $RecorderLicenseStatusRepresentation->RecorderId = $RecorderId;
            $RecorderLicenseStatusRepresentation->IsLicensed = $IsLicensed;
            return $RecorderLicenseStatusRepresentation;
        }

       /**
        * Constructor for RecorderLicenseStatusRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'RecorderId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ScheduledRecordingTime
    * @type:EntityType
    * @key:RecorderId
    */
    class ScheduledRecordingTime extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecorderId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $StartTime;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $EndTime;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $DurationInMinutes;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ScheduleId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ScheduleTimeZoneId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $RecurrenceId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsExcluded;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ScheduleLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecurrenceLink;
    

       /**
        * Function to create an instance of ScheduledRecordingTime
        * @param Edm.String $RecorderId
        * @param Edm.DateTime $StartTime
        * @param Edm.DateTime $EndTime
        * @param Edm.Int64 $DurationInMinutes
        * @param Edm.Int32 $ScheduleTimeZoneId
        * @param Edm.Int32 $RecurrenceId
        * @param Edm.Boolean $IsExcluded
        */
        public static function CreateScheduledRecordingTime(
            $RecorderId, 
            $StartTime, 
            $EndTime, 
            $DurationInMinutes, 
            $ScheduleTimeZoneId, 
            $RecurrenceId, 
            $IsExcluded)
        {   
            $ScheduledRecordingTime = new ScheduledRecordingTime();
            $ScheduledRecordingTime->RecorderId = $RecorderId;
            $ScheduledRecordingTime->StartTime = $StartTime;
            $ScheduledRecordingTime->EndTime = $EndTime;
            $ScheduledRecordingTime->DurationInMinutes = $DurationInMinutes;
            $ScheduledRecordingTime->ScheduleTimeZoneId = $ScheduleTimeZoneId;
            $ScheduledRecordingTime->RecurrenceId = $RecurrenceId;
            $ScheduledRecordingTime->IsExcluded = $IsExcluded;
            return $ScheduledRecordingTime;
        }

       /**
        * Constructor for ScheduledRecordingTime
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'RecorderId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PresentationReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DateRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomStartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomEndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeItemsWithZeroViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeManagementPortalViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeMyMediasiteViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeSubFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresentationIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $FolderIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $CatalogIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresenterList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $UserList;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.IPAddressRangeForReport)
        */
        public $IPAddressRangeList;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner
        * @FromRole:ReportRecurrencePartner
        * @ToRole:ReportRecurrence
        */
        public $ReportRecurrence;
    

       /**
        * Function to create an instance of PresentationReportRepresentation
        * @param Edm.String $Id
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.IPAddressRangeForReport) $IPAddressRangeList
        */
        public static function CreatePresentationReportRepresentation(
            $Id, 
            $IPAddressRangeList)
        {   
            $PresentationReportRepresentation = new PresentationReportRepresentation();
            $PresentationReportRepresentation->Id = $Id;
            $PresentationReportRepresentation->IPAddressRangeList = $IPAddressRangeList;
            return $PresentationReportRepresentation;
        }

       /**
        * Constructor for PresentationReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ReportRecurrence'] = 'ReportRecurrence';
            $this->_entityKey[] = 'Id';
            $this->ReportRecurrence = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresenterReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PresenterReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DateRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomStartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomEndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeItemsWithZeroViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeManagementPortalViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeMyMediasiteViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresenterList;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresenterReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner
        * @FromRole:ReportRecurrencePartner
        * @ToRole:ReportRecurrence
        */
        public $ReportRecurrence;
    

       /**
        * Function to create an instance of PresenterReportRepresentation
        * @param Edm.String $Id
        */
        public static function CreatePresenterReportRepresentation(
            $Id)
        {   
            $PresenterReportRepresentation = new PresenterReportRepresentation();
            $PresenterReportRepresentation->Id = $Id;
            return $PresenterReportRepresentation;
        }

       /**
        * Constructor for PresenterReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ReportRecurrence'] = 'ReportRecurrence';
            $this->_entityKey[] = 'Id';
            $this->ReportRecurrence = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:UserReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class UserReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DateRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomStartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomEndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeItemsWithZeroViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeManagementPortalViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeMyMediasiteViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeSubFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresentationIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $FolderIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $CatalogIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresenterList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $UserList;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.IPAddressRangeForReport)
        */
        public $IPAddressRangeList;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner
        * @FromRole:ReportRecurrencePartner
        * @ToRole:ReportRecurrence
        */
        public $ReportRecurrence;
    

       /**
        * Function to create an instance of UserReportRepresentation
        * @param Edm.String $Id
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.IPAddressRangeForReport) $IPAddressRangeList
        */
        public static function CreateUserReportRepresentation(
            $Id, 
            $IPAddressRangeList)
        {   
            $UserReportRepresentation = new UserReportRepresentation();
            $UserReportRepresentation->Id = $Id;
            $UserReportRepresentation->IPAddressRangeList = $IPAddressRangeList;
            return $UserReportRepresentation;
        }

       /**
        * Constructor for UserReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ReportRecurrence'] = 'ReportRecurrence';
            $this->_entityKey[] = 'Id';
            $this->ReportRecurrence = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CatalogReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class CatalogReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DateRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomStartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomEndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeItemsWithZeroViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $CatalogIdList;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_CatalogReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner
        * @FromRole:ReportRecurrencePartner
        * @ToRole:ReportRecurrence
        */
        public $ReportRecurrence;
    

       /**
        * Function to create an instance of CatalogReportRepresentation
        * @param Edm.String $Id
        */
        public static function CreateCatalogReportRepresentation(
            $Id)
        {   
            $CatalogReportRepresentation = new CatalogReportRepresentation();
            $CatalogReportRepresentation->Id = $Id;
            return $CatalogReportRepresentation;
        }

       /**
        * Constructor for CatalogReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ReportRecurrence'] = 'ReportRecurrence';
            $this->_entityKey[] = 'Id';
            $this->ReportRecurrence = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:DownloadReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class DownloadReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DateRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomStartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomEndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeItemsWithZeroDownloads;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeSubFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresentationIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $FolderIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $CatalogIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresenterList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $UserList;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_DownloadReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner
        * @FromRole:ReportRecurrencePartner
        * @ToRole:ReportRecurrence
        */
        public $ReportRecurrence;
    

       /**
        * Function to create an instance of DownloadReportRepresentation
        * @param Edm.String $Id
        */
        public static function CreateDownloadReportRepresentation(
            $Id)
        {   
            $DownloadReportRepresentation = new DownloadReportRepresentation();
            $DownloadReportRepresentation->Id = $Id;
            return $DownloadReportRepresentation;
        }

       /**
        * Constructor for DownloadReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ReportRecurrence'] = 'ReportRecurrence';
            $this->_entityKey[] = 'Id';
            $this->ReportRecurrence = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:AuthoringReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class AuthoringReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DateRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomStartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $DateRangeCustomEndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeSubFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $FolderIdList;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $PresenterList;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_AuthoringReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner
        * @FromRole:ReportRecurrencePartner
        * @ToRole:ReportRecurrence
        */
        public $ReportRecurrence;
    

       /**
        * Function to create an instance of AuthoringReportRepresentation
        * @param Edm.String $Id
        */
        public static function CreateAuthoringReportRepresentation(
            $Id)
        {   
            $AuthoringReportRepresentation = new AuthoringReportRepresentation();
            $AuthoringReportRepresentation->Id = $Id;
            return $AuthoringReportRepresentation;
        }

       /**
        * Constructor for AuthoringReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ReportRecurrence'] = 'ReportRecurrence';
            $this->_entityKey[] = 'Id';
            $this->ReportRecurrence = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PlayerRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PlayerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Recycled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LayoutId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LayoutOptions;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlayerOptionsFolderUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlayerUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $AlternateName;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PresentationsPartner
        * @FromRole:PresentationsPartner
        * @ToRole:Presentations
        */
        public $Presentations;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_Schedules_SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_SchedulesPartner
        * @FromRole:SchedulesPartner
        * @ToRole:Schedules
        */
        public $Schedules;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_Templates_SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_TemplatesPartner
        * @FromRole:TemplatesPartner
        * @ToRole:Templates
        */
        public $Templates;
    

       /**
        * Function to create an instance of PlayerRepresentation
        * @param Edm.String $Id
        */
        public static function CreatePlayerRepresentation(
            $Id)
        {   
            $PlayerRepresentation = new PlayerRepresentation();
            $PlayerRepresentation->Id = $Id;
            return $PlayerRepresentation;
        }

       /**
        * Constructor for PlayerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Presentations'] = 'Presentations';
            $this->_entityMap['Schedules'] = 'Schedules';
            $this->_entityMap['Templates'] = 'Templates';
            $this->_entityKey[] = 'Id';
            $this->Presentations = array();
            $this->Schedules = array();
            $this->Templates = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:Home
    * @type:EntityType
    * @key:ApiVersion
    */
    class Home extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ApiVersion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ApiPublishedDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteDescription;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteVersion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteBuildNumber;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteOwner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteOwnerContact;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteOwnerEmail;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteRootUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ServiceRootUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ServerTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LoggedInUserName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RootFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $ActiveCustomMetadata;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $MaximumConnections;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $PerUserConnectionLimit;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_Home_NowPlaying_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_NowPlayingPartner
        * @FromRole:NowPlayingPartner
        * @ToRole:NowPlaying
        */
        public $NowPlaying;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_Home_RecentlyViewed_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_RecentlyViewedPartner
        * @FromRole:RecentlyViewedPartner
        * @ToRole:RecentlyViewed
        */
        public $RecentlyViewed;
    

       /**
        * Function to create an instance of Home
        * @param Edm.String $ApiVersion
        */
        public static function CreateHome(
            $ApiVersion)
        {   
            $Home = new Home();
            $Home->ApiVersion = $ApiVersion;
            return $Home;
        }

       /**
        * Constructor for Home
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['NowPlaying'] = 'NowPlaying';
            $this->_entityMap['RecentlyViewed'] = 'RecentlyViewed';
            $this->_entityKey[] = 'ApiVersion';
            $this->NowPlaying = array();
            $this->RecentlyViewed = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ShowcaseSettingsRepresentation
    * @type:EntityType
    * @key:SiteId
    */
    class ShowcaseSettingsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ShowcaseName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LogoImageName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RightLogoImageName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Theme;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HtmlHeaderBlock;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HtmlFooterBlock;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ShowcaseContentRepresentation)
        */
        public $UserDefinedContent;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $RecentVideoLimit;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DefaultSortSpotlightChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DefaultSortRecentVideos;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DefaultSortRecentChannels;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DefaultSortVideoSearch;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchScope;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecentChannelsCustomText;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LogoImageLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RightLogoImageLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchScopeQueryParameter;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchScopeFolderIds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableShowcaseRegistration;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseMediasiteRegistration;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ShowcaseRegistrationPageUrl;
    

       /**
        * Function to create an instance of ShowcaseSettingsRepresentation
        * @param Edm.String $SiteId
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ShowcaseContentRepresentation) $UserDefinedContent
        * @param Edm.Int32 $RecentVideoLimit
        * @param Edm.Boolean $EnableShowcaseRegistration
        * @param Edm.Boolean $UseMediasiteRegistration
        */
        public static function CreateShowcaseSettingsRepresentation(
            $SiteId, 
            $UserDefinedContent, 
            $RecentVideoLimit, 
            $EnableShowcaseRegistration, 
            $UseMediasiteRegistration)
        {   
            $ShowcaseSettingsRepresentation = new ShowcaseSettingsRepresentation();
            $ShowcaseSettingsRepresentation->SiteId = $SiteId;
            $ShowcaseSettingsRepresentation->UserDefinedContent = $UserDefinedContent;
            $ShowcaseSettingsRepresentation->RecentVideoLimit = $RecentVideoLimit;
            $ShowcaseSettingsRepresentation->EnableShowcaseRegistration = $EnableShowcaseRegistration;
            $ShowcaseSettingsRepresentation->UseMediasiteRegistration = $UseMediasiteRegistration;
            return $ShowcaseSettingsRepresentation;
        }

       /**
        * Constructor for ShowcaseSettingsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'SiteId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CategoryRepresentation
    * @type:EntityType
    * @key:Id
    */
    class CategoryRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    

       /**
        * Function to create an instance of CategoryRepresentation
        * @param Edm.String $Id
        */
        public static function CreateCategoryRepresentation(
            $Id)
        {   
            $CategoryRepresentation = new CategoryRepresentation();
            $CategoryRepresentation->Id = $Id;
            return $CategoryRepresentation;
        }

       /**
        * Constructor for CategoryRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:QuotaPolicyRepresentation
    * @type:EntityType
    * @key:Id
    */
    class QuotaPolicyRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Double
        */
        public $AssignedQuota;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Double
        */
        public $ThresholdQuota;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Double
        */
        public $CurrentStorageUsage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $QuotaStatus;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $OnQuotaExceeded;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnThresholdCrossed;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnLimitCrossed;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnBackWithinLimits;
    

       /**
        * Function to create an instance of QuotaPolicyRepresentation
        * @param Edm.String $Id
        * @param Edm.Double $AssignedQuota
        * @param Edm.Double $ThresholdQuota
        * @param Edm.Double $CurrentStorageUsage
        */
        public static function CreateQuotaPolicyRepresentation(
            $Id, 
            $AssignedQuota, 
            $ThresholdQuota, 
            $CurrentStorageUsage)
        {   
            $QuotaPolicyRepresentation = new QuotaPolicyRepresentation();
            $QuotaPolicyRepresentation->Id = $Id;
            $QuotaPolicyRepresentation->AssignedQuota = $AssignedQuota;
            $QuotaPolicyRepresentation->ThresholdQuota = $ThresholdQuota;
            $QuotaPolicyRepresentation->CurrentStorageUsage = $CurrentStorageUsage;
            return $QuotaPolicyRepresentation;
        }

       /**
        * Constructor for QuotaPolicyRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:QuotaLevelRepresentation
    * @type:EntityType
    * @key:Id
    */
    class QuotaLevelRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Double
        */
        public $AssignedQuota;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Double
        */
        public $ThresholdQuota;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $OnQuotaExceeded;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnThresholdCrossed;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnLimitCrossed;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnBackWithinLimits;
    

       /**
        * Function to create an instance of QuotaLevelRepresentation
        * @param Edm.String $Id
        * @param Edm.Double $AssignedQuota
        * @param Edm.Double $ThresholdQuota
        */
        public static function CreateQuotaLevelRepresentation(
            $Id, 
            $AssignedQuota, 
            $ThresholdQuota)
        {   
            $QuotaLevelRepresentation = new QuotaLevelRepresentation();
            $QuotaLevelRepresentation->Id = $Id;
            $QuotaLevelRepresentation->AssignedQuota = $AssignedQuota;
            $QuotaLevelRepresentation->ThresholdQuota = $ThresholdQuota;
            return $QuotaLevelRepresentation;
        }

       /**
        * Constructor for QuotaLevelRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:TermsAndConditionsRepresentation
    * @type:EntityType
    * @key:Id
    */
    class TermsAndConditionsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsActive;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Text;
    

       /**
        * Function to create an instance of TermsAndConditionsRepresentation
        * @param Edm.String $Id
        */
        public static function CreateTermsAndConditionsRepresentation(
            $Id)
        {   
            $TermsAndConditionsRepresentation = new TermsAndConditionsRepresentation();
            $TermsAndConditionsRepresentation->Id = $Id;
            return $TermsAndConditionsRepresentation;
        }

       /**
        * Constructor for TermsAndConditionsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:TagRepresentation
    * @type:EntityType
    * @key:Id
    */
    class TagRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediasiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Tag;
    

       /**
        * Function to create an instance of TagRepresentation
        * @param Edm.Int32 $Id
        */
        public static function CreateTagRepresentation(
            $Id)
        {   
            $TagRepresentation = new TagRepresentation();
            $TagRepresentation->Id = $Id;
            return $TagRepresentation;
        }

       /**
        * Constructor for TagRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationCardRepresentation
    * @type:EntityType
    */
    class PresentationCardRepresentation extends PresentationDefaultRepresentation
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $RecordDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $RecordDateLocal;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Duration;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $NumberOfViews;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Creator;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PrimaryPresenter;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ThumbnailUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsLive;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    

       /**
        * Function to create an instance of PresentationCardRepresentation
        * @param Edm.Int32 $Duration
        * @param Edm.Int32 $NumberOfViews
        * @param Edm.Boolean $IsLive
        * @param Edm.DateTime $CreationDate
        */
        public static function CreatePresentationCardRepresentation(
            $Duration, 
            $NumberOfViews, 
            $IsLive, 
            $CreationDate)
        {   
            $PresentationCardRepresentation = new PresentationCardRepresentation();
            $PresentationCardRepresentation->Duration = $Duration;
            $PresentationCardRepresentation->NumberOfViews = $NumberOfViews;
            $PresentationCardRepresentation->IsLive = $IsLive;
            $PresentationCardRepresentation->CreationDate = $CreationDate;
            return $PresentationCardRepresentation;
        }

       /**
        * Constructor for PresentationCardRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationFullRepresentation
    * @type:EntityType
    */
    class PresentationFullRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RootId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlayerId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationTemplateId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $AlternateName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $CopyrightNotice;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $MaximumConnections;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PublishingPointName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsUploadAutomatic;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TimeZone;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $PollsEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ForumsEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $SharingEnabled;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $PlayerLocked;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $PollsInternal;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Private;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnMetadataChanged;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ApprovalState;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ApprovalRequiredChangeTypes;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsApproved;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PollLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $DisplayRecordDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsLiveEnabled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlayStatus;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue)
        */
        public $CustomFieldValues;
    

       /**
        * Function to create an instance of PresentationFullRepresentation
        * @param Edm.Int32 $MaximumConnections
        * @param Edm.Boolean $IsUploadAutomatic
        * @param Edm.Boolean $PollsEnabled
        * @param Edm.Boolean $ForumsEnabled
        * @param Edm.Boolean $SharingEnabled
        * @param Edm.Boolean $PlayerLocked
        * @param Edm.Boolean $PollsInternal
        * @param Edm.Boolean $Private
        * @param Edm.Boolean $NotifyOnMetadataChanged
        * @param Edm.Boolean $IsApproved
        * @param Edm.Int32 $ContentRevision
        * @param Edm.DateTime $DisplayRecordDate
        * @param Edm.Boolean $IsLiveEnabled
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue) $CustomFieldValues
        */
        public static function CreatePresentationFullRepresentation(
            $MaximumConnections, 
            $IsUploadAutomatic, 
            $PollsEnabled, 
            $ForumsEnabled, 
            $SharingEnabled, 
            $PlayerLocked, 
            $PollsInternal, 
            $Private, 
            $NotifyOnMetadataChanged, 
            $IsApproved, 
            $ContentRevision, 
            $DisplayRecordDate, 
            $IsLiveEnabled, 
            $CustomFieldValues)
        {   
            $PresentationFullRepresentation = new PresentationFullRepresentation();
            $PresentationFullRepresentation->MaximumConnections = $MaximumConnections;
            $PresentationFullRepresentation->IsUploadAutomatic = $IsUploadAutomatic;
            $PresentationFullRepresentation->PollsEnabled = $PollsEnabled;
            $PresentationFullRepresentation->ForumsEnabled = $ForumsEnabled;
            $PresentationFullRepresentation->SharingEnabled = $SharingEnabled;
            $PresentationFullRepresentation->PlayerLocked = $PlayerLocked;
            $PresentationFullRepresentation->PollsInternal = $PollsInternal;
            $PresentationFullRepresentation->Private = $Private;
            $PresentationFullRepresentation->NotifyOnMetadataChanged = $NotifyOnMetadataChanged;
            $PresentationFullRepresentation->IsApproved = $IsApproved;
            $PresentationFullRepresentation->ContentRevision = $ContentRevision;
            $PresentationFullRepresentation->DisplayRecordDate = $DisplayRecordDate;
            $PresentationFullRepresentation->IsLiveEnabled = $IsLiveEnabled;
            $PresentationFullRepresentation->CustomFieldValues = $CustomFieldValues;
            return $PresentationFullRepresentation;
        }

       /**
        * Constructor for PresentationFullRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationQuestionRepresentation
    * @type:EntityType
    * @key:QuestionId
    */
    class PresentationQuestionRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $QuestionId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Accepted;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Subject;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Question;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $SubmittedTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Submitter;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SubmitterEmailAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $IPAddress;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TimeInPresentation;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Label;
    

       /**
        * Function to create an instance of PresentationQuestionRepresentation
        * @param Edm.Int32 $QuestionId
        * @param Edm.Boolean $Accepted
        * @param Edm.DateTime $SubmittedTime
        * @param Edm.Int32 $TimeInPresentation
        */
        public static function CreatePresentationQuestionRepresentation(
            $QuestionId, 
            $Accepted, 
            $SubmittedTime, 
            $TimeInPresentation)
        {   
            $PresentationQuestionRepresentation = new PresentationQuestionRepresentation();
            $PresentationQuestionRepresentation->QuestionId = $QuestionId;
            $PresentationQuestionRepresentation->Accepted = $Accepted;
            $PresentationQuestionRepresentation->SubmittedTime = $SubmittedTime;
            $PresentationQuestionRepresentation->TimeInPresentation = $TimeInPresentation;
            return $PresentationQuestionRepresentation;
        }

       /**
        * Constructor for PresentationQuestionRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'QuestionId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PlayerLayoutOptionsRepresentation
    * @type:EntityType
    * @key:MediasiteId
    */
    class PlayerLayoutOptionsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediasiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.OptionWithOverride
        */
        public $EnablePresentationInfo;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.OptionWithOverride
        */
        public $ShowDateTime;
    

       /**
        * Function to create an instance of PlayerLayoutOptionsRepresentation
        * @param Edm.String $MediasiteId
        */
        public static function CreatePlayerLayoutOptionsRepresentation(
            $MediasiteId)
        {   
            $PlayerLayoutOptionsRepresentation = new PlayerLayoutOptionsRepresentation();
            $PlayerLayoutOptionsRepresentation->MediasiteId = $MediasiteId;
            return $PlayerLayoutOptionsRepresentation;
        }

       /**
        * Constructor for PlayerLayoutOptionsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'MediasiteId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:EmailInvitationRepresentation
    * @type:EntityType
    * @key:ParentResourceId
    */
    class EmailInvitationRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FromAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ToAddresses;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Subject;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Body;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Mailto;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsEmailEnabled;
    

       /**
        * Function to create an instance of EmailInvitationRepresentation
        * @param Edm.String $ParentResourceId
        * @param Edm.Boolean $IsEmailEnabled
        */
        public static function CreateEmailInvitationRepresentation(
            $ParentResourceId, 
            $IsEmailEnabled)
        {   
            $EmailInvitationRepresentation = new EmailInvitationRepresentation();
            $EmailInvitationRepresentation->ParentResourceId = $ParentResourceId;
            $EmailInvitationRepresentation->IsEmailEnabled = $IsEmailEnabled;
            return $EmailInvitationRepresentation;
        }

       /**
        * Constructor for EmailInvitationRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'ParentResourceId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:TimedEventRepresentation
    * @type:EntityType
    * @key:Id
    */
    class TimedEventRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Type;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Payload;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Position;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Options;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationId;
    

       /**
        * Function to create an instance of TimedEventRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $Position
        * @param Edm.String $Options
        */
        public static function CreateTimedEventRepresentation(
            $Id, 
            $Position, 
            $Options)
        {   
            $TimedEventRepresentation = new TimedEventRepresentation();
            $TimedEventRepresentation->Id = $Id;
            $TimedEventRepresentation->Position = $Position;
            $TimedEventRepresentation->Options = $Options;
            return $TimedEventRepresentation;
        }

       /**
        * Constructor for TimedEventRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:DistributionContentServerEndpointRepresentation
    * @type:EntityType
    * @key:ContentServerId
    */
    class DistributionContentServerEndpointRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EndpointType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    

       /**
        * Function to create an instance of DistributionContentServerEndpointRepresentation
        * @param Edm.String $ContentServerId
        */
        public static function CreateDistributionContentServerEndpointRepresentation(
            $ContentServerId)
        {   
            $DistributionContentServerEndpointRepresentation = new DistributionContentServerEndpointRepresentation();
            $DistributionContentServerEndpointRepresentation->ContentServerId = $ContentServerId;
            return $DistributionContentServerEndpointRepresentation;
        }

       /**
        * Constructor for DistributionContentServerEndpointRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'ContentServerId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:StorageContentServerEndpointRepresentation
    * @type:EntityType
    * @key:ContentServerId
    */
    class StorageContentServerEndpointRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EndpointType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseMediasiteFileServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableFileServerSecurity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LocalUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Url;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Username;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Password;
    

       /**
        * Function to create an instance of StorageContentServerEndpointRepresentation
        * @param Edm.String $ContentServerId
        * @param Edm.Boolean $UseMediasiteFileServer
        * @param Edm.Boolean $EnableFileServerSecurity
        */
        public static function CreateStorageContentServerEndpointRepresentation(
            $ContentServerId, 
            $UseMediasiteFileServer, 
            $EnableFileServerSecurity)
        {   
            $StorageContentServerEndpointRepresentation = new StorageContentServerEndpointRepresentation();
            $StorageContentServerEndpointRepresentation->ContentServerId = $ContentServerId;
            $StorageContentServerEndpointRepresentation->UseMediasiteFileServer = $UseMediasiteFileServer;
            $StorageContentServerEndpointRepresentation->EnableFileServerSecurity = $EnableFileServerSecurity;
            return $StorageContentServerEndpointRepresentation;
        }

       /**
        * Constructor for StorageContentServerEndpointRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'ContentServerId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ContentServerRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ServerType;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_StorageEndpoint_SonicFoundry_Mediasite_WebApi_Model_StorageContentServerEndpointRepresentation_StorageEndpointPartner
        * @FromRole:StorageEndpointPartner
        * @ToRole:StorageEndpoint
        */
        public $StorageEndpoint;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_DistributionEndpoint_SonicFoundry_Mediasite_WebApi_Model_DistributionContentServerEndpointRepresentation_DistributionEndpointPartner
        * @FromRole:DistributionEndpointPartner
        * @ToRole:DistributionEndpoint
        */
        public $DistributionEndpoint;
    

       /**
        * Function to create an instance of ContentServerRepresentation
        * @param Edm.String $Id
        */
        public static function CreateContentServerRepresentation(
            $Id)
        {   
            $ContentServerRepresentation = new ContentServerRepresentation();
            $ContentServerRepresentation->Id = $Id;
            return $ContentServerRepresentation;
        }

       /**
        * Constructor for ContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['StorageEndpoint'] = 'StorageEndpoint';
            $this->_entityMap['DistributionEndpoint'] = 'DistributionEndpoint';
            $this->_entityKey[] = 'Id';
            $this->StorageEndpoint = array();
            $this->DistributionEndpoint = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresenterRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PresenterRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediasiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Prefix;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FirstName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MiddleName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LastName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Suffix;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ImageUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ImageName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Email;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $BioUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $AdditionalInfo;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DisplayName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Order;
    

       /**
        * Function to create an instance of PresenterRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $Order
        */
        public static function CreatePresenterRepresentation(
            $Id, 
            $Order)
        {   
            $PresenterRepresentation = new PresenterRepresentation();
            $PresenterRepresentation->Id = $Id;
            $PresenterRepresentation->Order = $Order;
            return $PresenterRepresentation;
        }

       /**
        * Constructor for PresenterRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ContentEncodingSettingRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ContentEncodingSettingRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Recycled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MimeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SerializedSettings;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_EncodingSettingsFilters_SonicFoundry_Mediasite_WebApi_Model_EncodingSettingsFilterRepresentation_EncodingSettingsFiltersPartner
        * @FromRole:EncodingSettingsFiltersPartner
        * @ToRole:EncodingSettingsFilters
        */
        public $EncodingSettingsFilters;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_EncodingStreamDescriptions_SonicFoundry_Mediasite_WebApi_Model_EncodingStreamDescriptionRepresentation_EncodingStreamDescriptionsPartner
        * @FromRole:EncodingStreamDescriptionsPartner
        * @ToRole:EncodingStreamDescriptions
        */
        public $EncodingStreamDescriptions;
    

       /**
        * Function to create an instance of ContentEncodingSettingRepresentation
        * @param Edm.String $Id
        * @param Edm.DateTime $CreationDate
        * @param Edm.DateTime $LastModified
        * @param Edm.Boolean $Recycled
        */
        public static function CreateContentEncodingSettingRepresentation(
            $Id, 
            $CreationDate, 
            $LastModified, 
            $Recycled)
        {   
            $ContentEncodingSettingRepresentation = new ContentEncodingSettingRepresentation();
            $ContentEncodingSettingRepresentation->Id = $Id;
            $ContentEncodingSettingRepresentation->CreationDate = $CreationDate;
            $ContentEncodingSettingRepresentation->LastModified = $LastModified;
            $ContentEncodingSettingRepresentation->Recycled = $Recycled;
            return $ContentEncodingSettingRepresentation;
        }

       /**
        * Constructor for ContentEncodingSettingRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['EncodingSettingsFilters'] = 'EncodingSettingsFilters';
            $this->_entityMap['EncodingStreamDescriptions'] = 'EncodingStreamDescriptions';
            $this->_entityKey[] = 'Id';
            $this->EncodingSettingsFilters = array();
            $this->EncodingStreamDescriptions = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:EncodingSettingsFilterRepresentation
    * @type:EntityType
    * @key:FilterType
    */
    class EncodingSettingsFilterRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FilterType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediasiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FilterValue;
    

       /**
        * Function to create an instance of EncodingSettingsFilterRepresentation
        * @param Edm.String $FilterType
        */
        public static function CreateEncodingSettingsFilterRepresentation(
            $FilterType)
        {   
            $EncodingSettingsFilterRepresentation = new EncodingSettingsFilterRepresentation();
            $EncodingSettingsFilterRepresentation->FilterType = $FilterType;
            return $EncodingSettingsFilterRepresentation;
        }

       /**
        * Constructor for EncodingSettingsFilterRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'FilterType';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:EncodingStreamDescriptionRepresentation
    * @type:EntityType
    * @key:Number
    */
    class EncodingStreamDescriptionRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Number;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediasiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $DeviceClass;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    

       /**
        * Function to create an instance of EncodingStreamDescriptionRepresentation
        * @param Edm.Int32 $Number
        * @param Edm.Int32 $DeviceClass
        */
        public static function CreateEncodingStreamDescriptionRepresentation(
            $Number, 
            $DeviceClass)
        {   
            $EncodingStreamDescriptionRepresentation = new EncodingStreamDescriptionRepresentation();
            $EncodingStreamDescriptionRepresentation->Number = $Number;
            $EncodingStreamDescriptionRepresentation->DeviceClass = $DeviceClass;
            return $EncodingStreamDescriptionRepresentation;
        }

       /**
        * Constructor for EncodingStreamDescriptionRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Number';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:AuthorizationTicketRepresentation
    * @type:EntityType
    * @key:TicketId
    */
    class AuthorizationTicketRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TicketId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Username;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ClientIpAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $CreationTime;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $ExpirationTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ResourceId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $MinutesToLive;
    

       /**
        * Function to create an instance of AuthorizationTicketRepresentation
        * @param Edm.String $TicketId
        * @param Edm.DateTime $CreationTime
        * @param Edm.DateTime $ExpirationTime
        * @param Edm.Int32 $MinutesToLive
        */
        public static function CreateAuthorizationTicketRepresentation(
            $TicketId, 
            $CreationTime, 
            $ExpirationTime, 
            $MinutesToLive)
        {   
            $AuthorizationTicketRepresentation = new AuthorizationTicketRepresentation();
            $AuthorizationTicketRepresentation->TicketId = $TicketId;
            $AuthorizationTicketRepresentation->CreationTime = $CreationTime;
            $AuthorizationTicketRepresentation->ExpirationTime = $ExpirationTime;
            $AuthorizationTicketRepresentation->MinutesToLive = $MinutesToLive;
            return $AuthorizationTicketRepresentation;
        }

       /**
        * Constructor for AuthorizationTicketRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'TicketId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ShowcaseChannelRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ShowcaseChannelRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LinkedFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FriendlyName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $CatalogUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Recycled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsListedInShowcase;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsMyMediasiteChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsSearchBased;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $LimitSearchToCatalog;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsPublishingTabCatalog;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ShowInPublishingTab;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SearchTerm;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsSpotlightChannel;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ThumbnailUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastPresentationPublishedUtc;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalPresentationCount;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalViewCount;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IncludeSubFolders;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $UseShowcaseRegistration;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TermsAndConditionsId;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ShowcaseChannelRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PresentationsPartner
        * @FromRole:PresentationsPartner
        * @ToRole:Presentations
        */
        public $Presentations;
    

       /**
        * Function to create an instance of ShowcaseChannelRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $TotalPresentationCount
        * @param Edm.Int32 $TotalViewCount
        */
        public static function CreateShowcaseChannelRepresentation(
            $Id, 
            $TotalPresentationCount, 
            $TotalViewCount)
        {   
            $ShowcaseChannelRepresentation = new ShowcaseChannelRepresentation();
            $ShowcaseChannelRepresentation->Id = $Id;
            $ShowcaseChannelRepresentation->TotalPresentationCount = $TotalPresentationCount;
            $ShowcaseChannelRepresentation->TotalViewCount = $TotalViewCount;
            return $ShowcaseChannelRepresentation;
        }

       /**
        * Constructor for ShowcaseChannelRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Presentations'] = 'Presentations';
            $this->_entityKey[] = 'Id';
            $this->Presentations = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ScheduleRecurrenceRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ScheduleRecurrenceRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediasiteId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $RecordDuration;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $StartRecordDateTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $EndRecordDateTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RecurrencePattern;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $NextScheduleTime;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $RecurrencePatternType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $RecurrenceFrequency;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $WeekDayOnly;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DaysOfTheWeek;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $WeekOfTheMonth;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $DayOfTheMonth;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MonthOfTheYear;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ExcludeHolidays;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ExcludeDateRangeRepresentation)
        */
        public $ExcludeDateRangeList;
    

       /**
        * Function to create an instance of ScheduleRecurrenceRepresentation
        * @param Edm.Int32 $Id
        * @param Edm.Int32 $RecordDuration
        * @param Edm.DateTime $StartRecordDateTime
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ExcludeDateRangeRepresentation) $ExcludeDateRangeList
        */
        public static function CreateScheduleRecurrenceRepresentation(
            $Id, 
            $RecordDuration, 
            $StartRecordDateTime, 
            $ExcludeDateRangeList)
        {   
            $ScheduleRecurrenceRepresentation = new ScheduleRecurrenceRepresentation();
            $ScheduleRecurrenceRepresentation->Id = $Id;
            $ScheduleRecurrenceRepresentation->RecordDuration = $RecordDuration;
            $ScheduleRecurrenceRepresentation->StartRecordDateTime = $StartRecordDateTime;
            $ScheduleRecurrenceRepresentation->ExcludeDateRangeList = $ExcludeDateRangeList;
            return $ScheduleRecurrenceRepresentation;
        }

       /**
        * Constructor for ScheduleRecurrenceRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationAnalyticsRepresentation
    * @type:EntityType
    * @key:PresentationId
    */
    class PresentationAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Title;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $MinViewLength;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LiveViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalUsers;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalIPAddresses;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $PeakConnections;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $FirstWatched;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $TotalTimeWatchedSeconds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(Edm.DateTime)
        */
        public $DatesWatched;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_Presentation_SonicFoundry_Mediasite_WebApi_Model_PresentationFullRepresentation_PresentationPartner
        * @FromRole:PresentationPartner
        * @ToRole:Presentation
        */
        public $Presentation;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_Users_SonicFoundry_Mediasite_WebApi_Model_PresentationUserAnalyticsRepresentation_UsersPartner
        * @FromRole:UsersPartner
        * @ToRole:Users
        */
        public $Users;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_IPAddresses_SonicFoundry_Mediasite_WebApi_Model_PresentationIPAddressAnalyticsRepresentation_IPAddressesPartner
        * @FromRole:IPAddressesPartner
        * @ToRole:IPAddresses
        */
        public $IPAddresses;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_ViewingTrends_SonicFoundry_Mediasite_WebApi_Model_ViewingTrendsSegmentRepresentation_ViewingTrendsPartner
        * @FromRole:ViewingTrendsPartner
        * @ToRole:ViewingTrends
        */
        public $ViewingTrends;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_ViewingSessions_SonicFoundry_Mediasite_WebApi_Model_ViewingSessionRepresentation_ViewingSessionsPartner
        * @FromRole:ViewingSessionsPartner
        * @ToRole:ViewingSessions
        */
        public $ViewingSessions;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_BrowserTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_BrowserTotalsPartner
        * @FromRole:BrowserTotalsPartner
        * @ToRole:BrowserTotals
        */
        public $BrowserTotals;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_MediaPluginTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_MediaPluginTotalsPartner
        * @FromRole:MediaPluginTotalsPartner
        * @ToRole:MediaPluginTotals
        */
        public $MediaPluginTotals;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_SystemTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_SystemTotalsPartner
        * @FromRole:SystemTotalsPartner
        * @ToRole:SystemTotals
        */
        public $SystemTotals;
    

       /**
        * Function to create an instance of PresentationAnalyticsRepresentation
        * @param Edm.String $PresentationId
        * @param Edm.Int32 $TotalViews
        * @param Edm.Int32 $LiveViews
        * @param Edm.Int32 $OnDemandViews
        * @param Edm.Int32 $TotalUsers
        * @param Edm.Int32 $TotalIPAddresses
        * @param Edm.Int32 $PeakConnections
        * @param Edm.Int64 $TotalTimeWatchedSeconds
        * @param Collection(Edm.DateTime) $DatesWatched
        */
        public static function CreatePresentationAnalyticsRepresentation(
            $PresentationId, 
            $TotalViews, 
            $LiveViews, 
            $OnDemandViews, 
            $TotalUsers, 
            $TotalIPAddresses, 
            $PeakConnections, 
            $TotalTimeWatchedSeconds, 
            $DatesWatched)
        {   
            $PresentationAnalyticsRepresentation = new PresentationAnalyticsRepresentation();
            $PresentationAnalyticsRepresentation->PresentationId = $PresentationId;
            $PresentationAnalyticsRepresentation->TotalViews = $TotalViews;
            $PresentationAnalyticsRepresentation->LiveViews = $LiveViews;
            $PresentationAnalyticsRepresentation->OnDemandViews = $OnDemandViews;
            $PresentationAnalyticsRepresentation->TotalUsers = $TotalUsers;
            $PresentationAnalyticsRepresentation->TotalIPAddresses = $TotalIPAddresses;
            $PresentationAnalyticsRepresentation->PeakConnections = $PeakConnections;
            $PresentationAnalyticsRepresentation->TotalTimeWatchedSeconds = $TotalTimeWatchedSeconds;
            $PresentationAnalyticsRepresentation->DatesWatched = $DatesWatched;
            return $PresentationAnalyticsRepresentation;
        }

       /**
        * Constructor for PresentationAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Presentation'] = 'Presentation';
            $this->_entityMap['Users'] = 'Users';
            $this->_entityMap['IPAddresses'] = 'IPAddresses';
            $this->_entityMap['ViewingTrends'] = 'ViewingTrends';
            $this->_entityMap['ViewingSessions'] = 'ViewingSessions';
            $this->_entityMap['BrowserTotals'] = 'BrowserTotals';
            $this->_entityMap['MediaPluginTotals'] = 'MediaPluginTotals';
            $this->_entityMap['SystemTotals'] = 'SystemTotals';
            $this->_entityKey[] = 'PresentationId';
            $this->Presentation = array();
            $this->Users = array();
            $this->IPAddresses = array();
            $this->ViewingTrends = array();
            $this->ViewingSessions = array();
            $this->BrowserTotals = array();
            $this->MediaPluginTotals = array();
            $this->SystemTotals = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationClientAnalyticsRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PresentationClientAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LiveViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $FirstWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Double
        */
        public $PercentWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $CoverageWatchedSeconds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $TotalTimeWatchedSeconds;
    

       /**
        * Function to create an instance of PresentationClientAnalyticsRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $TotalViews
        * @param Edm.Int32 $LiveViews
        * @param Edm.Int32 $OnDemandViews
        * @param Edm.DateTime $FirstWatched
        * @param Edm.DateTime $LastWatched
        * @param Edm.Double $PercentWatched
        * @param Edm.Int32 $CoverageWatchedSeconds
        * @param Edm.Int64 $TotalTimeWatchedSeconds
        */
        public static function CreatePresentationClientAnalyticsRepresentation(
            $Id, 
            $TotalViews, 
            $LiveViews, 
            $OnDemandViews, 
            $FirstWatched, 
            $LastWatched, 
            $PercentWatched, 
            $CoverageWatchedSeconds, 
            $TotalTimeWatchedSeconds)
        {   
            $PresentationClientAnalyticsRepresentation = new PresentationClientAnalyticsRepresentation();
            $PresentationClientAnalyticsRepresentation->Id = $Id;
            $PresentationClientAnalyticsRepresentation->TotalViews = $TotalViews;
            $PresentationClientAnalyticsRepresentation->LiveViews = $LiveViews;
            $PresentationClientAnalyticsRepresentation->OnDemandViews = $OnDemandViews;
            $PresentationClientAnalyticsRepresentation->FirstWatched = $FirstWatched;
            $PresentationClientAnalyticsRepresentation->LastWatched = $LastWatched;
            $PresentationClientAnalyticsRepresentation->PercentWatched = $PercentWatched;
            $PresentationClientAnalyticsRepresentation->CoverageWatchedSeconds = $CoverageWatchedSeconds;
            $PresentationClientAnalyticsRepresentation->TotalTimeWatchedSeconds = $TotalTimeWatchedSeconds;
            return $PresentationClientAnalyticsRepresentation;
        }

       /**
        * Constructor for PresentationClientAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationUserAnalyticsRepresentation
    * @type:EntityType
    */
    class PresentationUserAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    

       /**
        * Function to create an instance of PresentationUserAnalyticsRepresentation
        */
        public static function CreatePresentationUserAnalyticsRepresentation()
        {   
            $PresentationUserAnalyticsRepresentation = new PresentationUserAnalyticsRepresentation();
            return $PresentationUserAnalyticsRepresentation;
        }

       /**
        * Constructor for PresentationUserAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationIPAddressAnalyticsRepresentation
    * @type:EntityType
    */
    class PresentationIPAddressAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $IPAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HostName;
    

       /**
        * Function to create an instance of PresentationIPAddressAnalyticsRepresentation
        */
        public static function CreatePresentationIPAddressAnalyticsRepresentation()
        {   
            $PresentationIPAddressAnalyticsRepresentation = new PresentationIPAddressAnalyticsRepresentation();
            return $PresentationIPAddressAnalyticsRepresentation;
        }

       /**
        * Constructor for PresentationIPAddressAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ViewingTrendsSegmentRepresentation
    * @type:EntityType
    * @key:StartTime
    */
    class ViewingTrendsSegmentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $StartTime;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Duration;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Views;
    

       /**
        * Function to create an instance of ViewingTrendsSegmentRepresentation
        * @param Edm.Int32 $StartTime
        * @param Edm.Int32 $Duration
        * @param Edm.Int32 $Views
        */
        public static function CreateViewingTrendsSegmentRepresentation(
            $StartTime, 
            $Duration, 
            $Views)
        {   
            $ViewingTrendsSegmentRepresentation = new ViewingTrendsSegmentRepresentation();
            $ViewingTrendsSegmentRepresentation->StartTime = $StartTime;
            $ViewingTrendsSegmentRepresentation->Duration = $Duration;
            $ViewingTrendsSegmentRepresentation->Views = $Views;
            return $ViewingTrendsSegmentRepresentation;
        }

       /**
        * Constructor for ViewingTrendsSegmentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'StartTime';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ViewingSessionRepresentation
    * @type:EntityType
    * @key:PlaybackTicket
    */
    class ViewingSessionRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlaybackTicket;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $IPAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HostName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SessionType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $Opened;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastActive;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TimeWatchedSeconds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $CoverageWatchedSeconds;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Referrer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $System;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Browser;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediaPlugin;
    

       /**
        * Function to create an instance of ViewingSessionRepresentation
        * @param Edm.String $PlaybackTicket
        * @param Edm.DateTime $Opened
        * @param Edm.DateTime $LastActive
        * @param Edm.Int32 $TimeWatchedSeconds
        * @param Edm.Int32 $CoverageWatchedSeconds
        */
        public static function CreateViewingSessionRepresentation(
            $PlaybackTicket, 
            $Opened, 
            $LastActive, 
            $TimeWatchedSeconds, 
            $CoverageWatchedSeconds)
        {   
            $ViewingSessionRepresentation = new ViewingSessionRepresentation();
            $ViewingSessionRepresentation->PlaybackTicket = $PlaybackTicket;
            $ViewingSessionRepresentation->Opened = $Opened;
            $ViewingSessionRepresentation->LastActive = $LastActive;
            $ViewingSessionRepresentation->TimeWatchedSeconds = $TimeWatchedSeconds;
            $ViewingSessionRepresentation->CoverageWatchedSeconds = $CoverageWatchedSeconds;
            return $ViewingSessionRepresentation;
        }

       /**
        * Constructor for ViewingSessionRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'PlaybackTicket';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ActiveSessionRepresentation
    * @type:EntityType
    * @key:PlaybackTicket
    */
    class ActiveSessionRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PlaybackTicket;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $IPAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HostName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SessionType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $Opened;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastActive;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Referrer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $System;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Browser;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MediaPlugin;
    

       /**
        * Function to create an instance of ActiveSessionRepresentation
        * @param Edm.String $PlaybackTicket
        * @param Edm.DateTime $Opened
        * @param Edm.DateTime $LastActive
        */
        public static function CreateActiveSessionRepresentation(
            $PlaybackTicket, 
            $Opened, 
            $LastActive)
        {   
            $ActiveSessionRepresentation = new ActiveSessionRepresentation();
            $ActiveSessionRepresentation->PlaybackTicket = $PlaybackTicket;
            $ActiveSessionRepresentation->Opened = $Opened;
            $ActiveSessionRepresentation->LastActive = $LastActive;
            return $ActiveSessionRepresentation;
        }

       /**
        * Constructor for ActiveSessionRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'PlaybackTicket';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ViewingPlatformTotalRepresentation
    * @type:EntityType
    * @key:Platform
    */
    class ViewingPlatformTotalRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Platform;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Total;
    

       /**
        * Function to create an instance of ViewingPlatformTotalRepresentation
        * @param Edm.String $Platform
        * @param Edm.Int32 $Total
        */
        public static function CreateViewingPlatformTotalRepresentation(
            $Platform, 
            $Total)
        {   
            $ViewingPlatformTotalRepresentation = new ViewingPlatformTotalRepresentation();
            $ViewingPlatformTotalRepresentation->Platform = $Platform;
            $ViewingPlatformTotalRepresentation->Total = $Total;
            return $ViewingPlatformTotalRepresentation;
        }

       /**
        * Constructor for ViewingPlatformTotalRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Platform';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:UserAnalyticsRepresentation
    * @type:EntityType
    * @key:UserName
    */
    class UserAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LiveViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $PresentationsWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LivePresentationsWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandPresentationsWatched;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $FirstWatched;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $TotalTimeWatchedSeconds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(Edm.DateTime)
        */
        public $DatesWatched;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_UserPresentationAnalyticsRepresentation_PresentationsPartner
        * @FromRole:PresentationsPartner
        * @ToRole:Presentations
        */
        public $Presentations;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_ViewingSessions_SonicFoundry_Mediasite_WebApi_Model_ViewingSessionRepresentation_ViewingSessionsPartner
        * @FromRole:ViewingSessionsPartner
        * @ToRole:ViewingSessions
        */
        public $ViewingSessions;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_BrowserTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_BrowserTotalsPartner
        * @FromRole:BrowserTotalsPartner
        * @ToRole:BrowserTotals
        */
        public $BrowserTotals;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_MediaPluginTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_MediaPluginTotalsPartner
        * @FromRole:MediaPluginTotalsPartner
        * @ToRole:MediaPluginTotals
        */
        public $MediaPluginTotals;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_SystemTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_SystemTotalsPartner
        * @FromRole:SystemTotalsPartner
        * @ToRole:SystemTotals
        */
        public $SystemTotals;
    

       /**
        * Function to create an instance of UserAnalyticsRepresentation
        * @param Edm.String $UserName
        * @param Edm.Int32 $TotalViews
        * @param Edm.Int32 $LiveViews
        * @param Edm.Int32 $OnDemandViews
        * @param Edm.Int32 $PresentationsWatched
        * @param Edm.Int32 $LivePresentationsWatched
        * @param Edm.Int32 $OnDemandPresentationsWatched
        * @param Edm.Int64 $TotalTimeWatchedSeconds
        * @param Collection(Edm.DateTime) $DatesWatched
        */
        public static function CreateUserAnalyticsRepresentation(
            $UserName, 
            $TotalViews, 
            $LiveViews, 
            $OnDemandViews, 
            $PresentationsWatched, 
            $LivePresentationsWatched, 
            $OnDemandPresentationsWatched, 
            $TotalTimeWatchedSeconds, 
            $DatesWatched)
        {   
            $UserAnalyticsRepresentation = new UserAnalyticsRepresentation();
            $UserAnalyticsRepresentation->UserName = $UserName;
            $UserAnalyticsRepresentation->TotalViews = $TotalViews;
            $UserAnalyticsRepresentation->LiveViews = $LiveViews;
            $UserAnalyticsRepresentation->OnDemandViews = $OnDemandViews;
            $UserAnalyticsRepresentation->PresentationsWatched = $PresentationsWatched;
            $UserAnalyticsRepresentation->LivePresentationsWatched = $LivePresentationsWatched;
            $UserAnalyticsRepresentation->OnDemandPresentationsWatched = $OnDemandPresentationsWatched;
            $UserAnalyticsRepresentation->TotalTimeWatchedSeconds = $TotalTimeWatchedSeconds;
            $UserAnalyticsRepresentation->DatesWatched = $DatesWatched;
            return $UserAnalyticsRepresentation;
        }

       /**
        * Constructor for UserAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['Presentations'] = 'Presentations';
            $this->_entityMap['ViewingSessions'] = 'ViewingSessions';
            $this->_entityMap['BrowserTotals'] = 'BrowserTotals';
            $this->_entityMap['MediaPluginTotals'] = 'MediaPluginTotals';
            $this->_entityMap['SystemTotals'] = 'SystemTotals';
            $this->_entityKey[] = 'UserName';
            $this->Presentations = array();
            $this->ViewingSessions = array();
            $this->BrowserTotals = array();
            $this->MediaPluginTotals = array();
            $this->SystemTotals = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:UserPresentationAnalyticsRepresentation
    * @type:EntityType
    */
    class UserPresentationAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Title;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderName;
    

       /**
        * Function to create an instance of UserPresentationAnalyticsRepresentation
        */
        public static function CreateUserPresentationAnalyticsRepresentation()
        {   
            $UserPresentationAnalyticsRepresentation = new UserPresentationAnalyticsRepresentation();
            return $UserPresentationAnalyticsRepresentation;
        }

       /**
        * Constructor for UserPresentationAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ServerAnalyticsRepresentation
    * @type:EntityType
    * @key:SiteId
    */
    class ServerAnalyticsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LiveViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalPresentationsWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LivePresentationsWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandPresentationsWatched;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $TotalTimeWatchedSeconds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalUsers;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalIPAddresses;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalAnonymousViews;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalAnonymousIPAddress;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalAvailablePresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LiveBroadcastPresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ScheduleRecordedPresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $TotalPresentationDurationSeconds;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalRegisteredRecorders;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_PresentationSources_SonicFoundry_Mediasite_WebApi_Model_PresentationSourceTotalRepresentation_PresentationSourcesPartner
        * @FromRole:PresentationSourcesPartner
        * @ToRole:PresentationSources
        */
        public $PresentationSources;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_BrowserTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_BrowserTotalsPartner
        * @FromRole:BrowserTotalsPartner
        * @ToRole:BrowserTotals
        */
        public $BrowserTotals;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_MediaPluginTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_MediaPluginTotalsPartner
        * @FromRole:MediaPluginTotalsPartner
        * @ToRole:MediaPluginTotals
        */
        public $MediaPluginTotals;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_SystemTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_SystemTotalsPartner
        * @FromRole:SystemTotalsPartner
        * @ToRole:SystemTotals
        */
        public $SystemTotals;
    

       /**
        * Function to create an instance of ServerAnalyticsRepresentation
        * @param Edm.String $SiteId
        * @param Edm.Int32 $TotalViews
        * @param Edm.Int32 $LiveViews
        * @param Edm.Int32 $OnDemandViews
        * @param Edm.Int32 $TotalPresentationsWatched
        * @param Edm.Int32 $LivePresentationsWatched
        * @param Edm.Int32 $OnDemandPresentationsWatched
        * @param Edm.Int64 $TotalTimeWatchedSeconds
        * @param Edm.Int32 $TotalUsers
        * @param Edm.Int32 $TotalIPAddresses
        * @param Edm.Int32 $TotalAnonymousViews
        * @param Edm.Int32 $TotalAnonymousIPAddress
        * @param Edm.Int32 $TotalAvailablePresentations
        * @param Edm.Int32 $LiveBroadcastPresentations
        * @param Edm.Int32 $ScheduleRecordedPresentations
        * @param Edm.Int64 $TotalPresentationDurationSeconds
        * @param Edm.Int32 $TotalRegisteredRecorders
        */
        public static function CreateServerAnalyticsRepresentation(
            $SiteId, 
            $TotalViews, 
            $LiveViews, 
            $OnDemandViews, 
            $TotalPresentationsWatched, 
            $LivePresentationsWatched, 
            $OnDemandPresentationsWatched, 
            $TotalTimeWatchedSeconds, 
            $TotalUsers, 
            $TotalIPAddresses, 
            $TotalAnonymousViews, 
            $TotalAnonymousIPAddress, 
            $TotalAvailablePresentations, 
            $LiveBroadcastPresentations, 
            $ScheduleRecordedPresentations, 
            $TotalPresentationDurationSeconds, 
            $TotalRegisteredRecorders)
        {   
            $ServerAnalyticsRepresentation = new ServerAnalyticsRepresentation();
            $ServerAnalyticsRepresentation->SiteId = $SiteId;
            $ServerAnalyticsRepresentation->TotalViews = $TotalViews;
            $ServerAnalyticsRepresentation->LiveViews = $LiveViews;
            $ServerAnalyticsRepresentation->OnDemandViews = $OnDemandViews;
            $ServerAnalyticsRepresentation->TotalPresentationsWatched = $TotalPresentationsWatched;
            $ServerAnalyticsRepresentation->LivePresentationsWatched = $LivePresentationsWatched;
            $ServerAnalyticsRepresentation->OnDemandPresentationsWatched = $OnDemandPresentationsWatched;
            $ServerAnalyticsRepresentation->TotalTimeWatchedSeconds = $TotalTimeWatchedSeconds;
            $ServerAnalyticsRepresentation->TotalUsers = $TotalUsers;
            $ServerAnalyticsRepresentation->TotalIPAddresses = $TotalIPAddresses;
            $ServerAnalyticsRepresentation->TotalAnonymousViews = $TotalAnonymousViews;
            $ServerAnalyticsRepresentation->TotalAnonymousIPAddress = $TotalAnonymousIPAddress;
            $ServerAnalyticsRepresentation->TotalAvailablePresentations = $TotalAvailablePresentations;
            $ServerAnalyticsRepresentation->LiveBroadcastPresentations = $LiveBroadcastPresentations;
            $ServerAnalyticsRepresentation->ScheduleRecordedPresentations = $ScheduleRecordedPresentations;
            $ServerAnalyticsRepresentation->TotalPresentationDurationSeconds = $TotalPresentationDurationSeconds;
            $ServerAnalyticsRepresentation->TotalRegisteredRecorders = $TotalRegisteredRecorders;
            return $ServerAnalyticsRepresentation;
        }

       /**
        * Constructor for ServerAnalyticsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['PresentationSources'] = 'PresentationSources';
            $this->_entityMap['BrowserTotals'] = 'BrowserTotals';
            $this->_entityMap['MediaPluginTotals'] = 'MediaPluginTotals';
            $this->_entityMap['SystemTotals'] = 'SystemTotals';
            $this->_entityKey[] = 'SiteId';
            $this->PresentationSources = array();
            $this->BrowserTotals = array();
            $this->MediaPluginTotals = array();
            $this->SystemTotals = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationSourceTotalRepresentation
    * @type:EntityType
    * @key:Source
    */
    class PresentationSourceTotalRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Source;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalPresentations;
    

       /**
        * Function to create an instance of PresentationSourceTotalRepresentation
        * @param Edm.String $Source
        * @param Edm.Int32 $TotalPresentations
        */
        public static function CreatePresentationSourceTotalRepresentation(
            $Source, 
            $TotalPresentations)
        {   
            $PresentationSourceTotalRepresentation = new PresentationSourceTotalRepresentation();
            $PresentationSourceTotalRepresentation->Source = $Source;
            $PresentationSourceTotalRepresentation->TotalPresentations = $TotalPresentations;
            return $PresentationSourceTotalRepresentation;
        }

       /**
        * Constructor for PresentationSourceTotalRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Source';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ActiveConnectionsRepresentation
    * @type:EntityType
    * @key:SiteId
    */
    class ActiveConnectionsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalConnections;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LiveConnections;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandConnections;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalPresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LivePresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $OnDemandPresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalUsers;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalIPAddresses;
    

       /**
        * Function to create an instance of ActiveConnectionsRepresentation
        * @param Edm.String $SiteId
        * @param Edm.Int32 $TotalConnections
        * @param Edm.Int32 $LiveConnections
        * @param Edm.Int32 $OnDemandConnections
        * @param Edm.Int32 $TotalPresentations
        * @param Edm.Int32 $LivePresentations
        * @param Edm.Int32 $OnDemandPresentations
        * @param Edm.Int32 $TotalUsers
        * @param Edm.Int32 $TotalIPAddresses
        */
        public static function CreateActiveConnectionsRepresentation(
            $SiteId, 
            $TotalConnections, 
            $LiveConnections, 
            $OnDemandConnections, 
            $TotalPresentations, 
            $LivePresentations, 
            $OnDemandPresentations, 
            $TotalUsers, 
            $TotalIPAddresses)
        {   
            $ActiveConnectionsRepresentation = new ActiveConnectionsRepresentation();
            $ActiveConnectionsRepresentation->SiteId = $SiteId;
            $ActiveConnectionsRepresentation->TotalConnections = $TotalConnections;
            $ActiveConnectionsRepresentation->LiveConnections = $LiveConnections;
            $ActiveConnectionsRepresentation->OnDemandConnections = $OnDemandConnections;
            $ActiveConnectionsRepresentation->TotalPresentations = $TotalPresentations;
            $ActiveConnectionsRepresentation->LivePresentations = $LivePresentations;
            $ActiveConnectionsRepresentation->OnDemandPresentations = $OnDemandPresentations;
            $ActiveConnectionsRepresentation->TotalUsers = $TotalUsers;
            $ActiveConnectionsRepresentation->TotalIPAddresses = $TotalIPAddresses;
            return $ActiveConnectionsRepresentation;
        }

       /**
        * Constructor for ActiveConnectionsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'SiteId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ActivePresentationRepresentation
    * @type:EntityType
    * @key:PresentationId
    */
    class ActivePresentationRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresentationId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Title;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentFolderName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalConnections;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalUsers;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TotalIPAddresses;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ActivePresentationRepresentation_ActiveSessions_SonicFoundry_Mediasite_WebApi_Model_ActiveSessionRepresentation_ActiveSessionsPartner
        * @FromRole:ActiveSessionsPartner
        * @ToRole:ActiveSessions
        */
        public $ActiveSessions;
    

       /**
        * Function to create an instance of ActivePresentationRepresentation
        * @param Edm.String $PresentationId
        * @param Edm.Int32 $TotalConnections
        * @param Edm.Int32 $TotalUsers
        * @param Edm.Int32 $TotalIPAddresses
        */
        public static function CreateActivePresentationRepresentation(
            $PresentationId, 
            $TotalConnections, 
            $TotalUsers, 
            $TotalIPAddresses)
        {   
            $ActivePresentationRepresentation = new ActivePresentationRepresentation();
            $ActivePresentationRepresentation->PresentationId = $PresentationId;
            $ActivePresentationRepresentation->TotalConnections = $TotalConnections;
            $ActivePresentationRepresentation->TotalUsers = $TotalUsers;
            $ActivePresentationRepresentation->TotalIPAddresses = $TotalIPAddresses;
            return $ActivePresentationRepresentation;
        }

       /**
        * Constructor for ActivePresentationRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ActiveSessions'] = 'ActiveSessions';
            $this->_entityKey[] = 'PresentationId';
            $this->ActiveSessions = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:UserProfileRepresentation
    * @type:EntityType
    * @key:Id
    */
    class UserProfileRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DisplayName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Email;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Activated;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $HomeFolderId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ModeratorEmail;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $ModeratorEmailOptOut;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DisablePresentationContentCompleteEmails;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DisablePresentationContentFailedEmails;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DisablePresentationChangeOwnerEmails;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZone;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterFirstName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterMiddleName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterLastName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterEmail;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterPrefix;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterSuffix;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterAdditionalInfo;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PresenterBio;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_UserProfileRepresentation_QuotaPolicy_SonicFoundry_Mediasite_WebApi_Model_QuotaPolicyRepresentation_QuotaPolicyPartner
        * @FromRole:QuotaPolicyPartner
        * @ToRole:QuotaPolicy
        */
        public $QuotaPolicy;
    

       /**
        * Function to create an instance of UserProfileRepresentation
        * @param Edm.String $Id
        * @param Edm.Boolean $Activated
        */
        public static function CreateUserProfileRepresentation(
            $Id, 
            $Activated)
        {   
            $UserProfileRepresentation = new UserProfileRepresentation();
            $UserProfileRepresentation->Id = $Id;
            $UserProfileRepresentation->Activated = $Activated;
            return $UserProfileRepresentation;
        }

       /**
        * Constructor for UserProfileRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['QuotaPolicy'] = 'QuotaPolicy';
            $this->_entityKey[] = 'Id';
            $this->QuotaPolicy = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:MediasiteTimeZoneRepresentation
    * @type:EntityType
    * @key:Id
    */
    class MediasiteTimeZoneRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DisplayName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RegistryKey;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsDisplayed;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DaylightAbbreviation;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StandardAbbreviation;
    

       /**
        * Function to create an instance of MediasiteTimeZoneRepresentation
        * @param Edm.Int32 $Id
        * @param Edm.Boolean $IsDisplayed
        */
        public static function CreateMediasiteTimeZoneRepresentation(
            $Id, 
            $IsDisplayed)
        {   
            $MediasiteTimeZoneRepresentation = new MediasiteTimeZoneRepresentation();
            $MediasiteTimeZoneRepresentation->Id = $Id;
            $MediasiteTimeZoneRepresentation->IsDisplayed = $IsDisplayed;
            return $MediasiteTimeZoneRepresentation;
        }

       /**
        * Constructor for MediasiteTimeZoneRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ApiKeyDefaultRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ApiKeyDefaultRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $TimeoutInMinutes;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsDefault;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $CreateAuthTicketsForResources;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ReportAuthFailureAsError;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ExcludePrivatePresentations;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Internal;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $ViewOnlyAccessContext;
    

       /**
        * Function to create an instance of ApiKeyDefaultRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $TimeoutInMinutes
        * @param Edm.Boolean $IsDefault
        * @param Edm.Boolean $CreateAuthTicketsForResources
        * @param Edm.Boolean $ReportAuthFailureAsError
        * @param Edm.Boolean $ExcludePrivatePresentations
        * @param Edm.Boolean $Internal
        * @param Edm.Boolean $ViewOnlyAccessContext
        */
        public static function CreateApiKeyDefaultRepresentation(
            $Id, 
            $TimeoutInMinutes, 
            $IsDefault, 
            $CreateAuthTicketsForResources, 
            $ReportAuthFailureAsError, 
            $ExcludePrivatePresentations, 
            $Internal, 
            $ViewOnlyAccessContext)
        {   
            $ApiKeyDefaultRepresentation = new ApiKeyDefaultRepresentation();
            $ApiKeyDefaultRepresentation->Id = $Id;
            $ApiKeyDefaultRepresentation->TimeoutInMinutes = $TimeoutInMinutes;
            $ApiKeyDefaultRepresentation->IsDefault = $IsDefault;
            $ApiKeyDefaultRepresentation->CreateAuthTicketsForResources = $CreateAuthTicketsForResources;
            $ApiKeyDefaultRepresentation->ReportAuthFailureAsError = $ReportAuthFailureAsError;
            $ApiKeyDefaultRepresentation->ExcludePrivatePresentations = $ExcludePrivatePresentations;
            $ApiKeyDefaultRepresentation->Internal = $Internal;
            $ApiKeyDefaultRepresentation->ViewOnlyAccessContext = $ViewOnlyAccessContext;
            return $ApiKeyDefaultRepresentation;
        }

       /**
        * Constructor for ApiKeyDefaultRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PresentationThumbnailRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PresentationThumbnailRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ThumbnailUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationThumbnailRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PresentationThumbnailRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of PresentationThumbnailRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreatePresentationThumbnailRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $PresentationThumbnailRepresentation = new PresentationThumbnailRepresentation();
            $PresentationThumbnailRepresentation->Id = $Id;
            $PresentationThumbnailRepresentation->EncodingOrder = $EncodingOrder;
            $PresentationThumbnailRepresentation->Length = $Length;
            $PresentationThumbnailRepresentation->ArchiveType = $ArchiveType;
            $PresentationThumbnailRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $PresentationThumbnailRepresentation->ContentRevision = $ContentRevision;
            $PresentationThumbnailRepresentation->FileLength = $FileLength;
            $PresentationThumbnailRepresentation->LastModified = $LastModified;
            return $PresentationThumbnailRepresentation;
        }

       /**
        * Constructor for PresentationThumbnailRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PodcastContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PodcastContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of PodcastContentRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreatePodcastContentRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $PodcastContentRepresentation = new PodcastContentRepresentation();
            $PodcastContentRepresentation->Id = $Id;
            $PodcastContentRepresentation->EncodingOrder = $EncodingOrder;
            $PodcastContentRepresentation->Length = $Length;
            $PodcastContentRepresentation->ArchiveType = $ArchiveType;
            $PodcastContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $PodcastContentRepresentation->ContentRevision = $ContentRevision;
            $PodcastContentRepresentation->FileLength = $FileLength;
            $PodcastContentRepresentation->LastModified = $LastModified;
            return $PodcastContentRepresentation;
        }

       /**
        * Constructor for PodcastContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:VideoPodcastContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class VideoPodcastContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DownloadUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastProject_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastProjectRepresentation_VideoPodcastProjectPartner
        * @FromRole:VideoPodcastProjectPartner
        * @ToRole:VideoPodcastProject
        */
        public $VideoPodcastProject;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of VideoPodcastContentRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateVideoPodcastContentRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $VideoPodcastContentRepresentation = new VideoPodcastContentRepresentation();
            $VideoPodcastContentRepresentation->Id = $Id;
            $VideoPodcastContentRepresentation->EncodingOrder = $EncodingOrder;
            $VideoPodcastContentRepresentation->Length = $Length;
            $VideoPodcastContentRepresentation->ArchiveType = $ArchiveType;
            $VideoPodcastContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $VideoPodcastContentRepresentation->ContentRevision = $ContentRevision;
            $VideoPodcastContentRepresentation->FileLength = $FileLength;
            $VideoPodcastContentRepresentation->LastModified = $LastModified;
            return $VideoPodcastContentRepresentation;
        }

       /**
        * Constructor for VideoPodcastContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['VideoPodcastProject'] = 'VideoPodcastProject';
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->VideoPodcastProject = array();
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CaptionContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class CaptionContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $ProviderSubmissionDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsRushJob;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SecurityToken;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of CaptionContentRepresentation
        * @param Edm.Boolean $IsRushJob
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateCaptionContentRepresentation(
            $IsRushJob, 
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $CaptionContentRepresentation = new CaptionContentRepresentation();
            $CaptionContentRepresentation->IsRushJob = $IsRushJob;
            $CaptionContentRepresentation->Id = $Id;
            $CaptionContentRepresentation->EncodingOrder = $EncodingOrder;
            $CaptionContentRepresentation->Length = $Length;
            $CaptionContentRepresentation->ArchiveType = $ArchiveType;
            $CaptionContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $CaptionContentRepresentation->ContentRevision = $ContentRevision;
            $CaptionContentRepresentation->FileLength = $FileLength;
            $CaptionContentRepresentation->LastModified = $LastModified;
            return $CaptionContentRepresentation;
        }

       /**
        * Constructor for CaptionContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:SlideContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class SlideContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsGeneratedFromVideoStream;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of SlideContentRepresentation
        * @param Edm.Boolean $IsGeneratedFromVideoStream
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateSlideContentRepresentation(
            $IsGeneratedFromVideoStream, 
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $SlideContentRepresentation = new SlideContentRepresentation();
            $SlideContentRepresentation->IsGeneratedFromVideoStream = $IsGeneratedFromVideoStream;
            $SlideContentRepresentation->Id = $Id;
            $SlideContentRepresentation->EncodingOrder = $EncodingOrder;
            $SlideContentRepresentation->Length = $Length;
            $SlideContentRepresentation->ArchiveType = $ArchiveType;
            $SlideContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $SlideContentRepresentation->ContentRevision = $ContentRevision;
            $SlideContentRepresentation->FileLength = $FileLength;
            $SlideContentRepresentation->LastModified = $LastModified;
            return $SlideContentRepresentation;
        }

       /**
        * Constructor for SlideContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:OcrContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class OcrContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastOcrDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of OcrContentRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateOcrContentRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $OcrContentRepresentation = new OcrContentRepresentation();
            $OcrContentRepresentation->Id = $Id;
            $OcrContentRepresentation->EncodingOrder = $EncodingOrder;
            $OcrContentRepresentation->Length = $Length;
            $OcrContentRepresentation->ArchiveType = $ArchiveType;
            $OcrContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $OcrContentRepresentation->ContentRevision = $ContentRevision;
            $OcrContentRepresentation->FileLength = $FileLength;
            $OcrContentRepresentation->LastModified = $LastModified;
            return $OcrContentRepresentation;
        }

       /**
        * Constructor for OcrContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:OnDemandContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class OnDemandContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of OnDemandContentRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateOnDemandContentRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $OnDemandContentRepresentation = new OnDemandContentRepresentation();
            $OnDemandContentRepresentation->Id = $Id;
            $OnDemandContentRepresentation->EncodingOrder = $EncodingOrder;
            $OnDemandContentRepresentation->Length = $Length;
            $OnDemandContentRepresentation->ArchiveType = $ArchiveType;
            $OnDemandContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $OnDemandContentRepresentation->ContentRevision = $ContentRevision;
            $OnDemandContentRepresentation->FileLength = $FileLength;
            $OnDemandContentRepresentation->LastModified = $LastModified;
            return $OnDemandContentRepresentation;
        }

       /**
        * Constructor for OnDemandContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:BroadcastContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class BroadcastContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of BroadcastContentRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateBroadcastContentRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $BroadcastContentRepresentation = new BroadcastContentRepresentation();
            $BroadcastContentRepresentation->Id = $Id;
            $BroadcastContentRepresentation->EncodingOrder = $EncodingOrder;
            $BroadcastContentRepresentation->Length = $Length;
            $BroadcastContentRepresentation->ArchiveType = $ArchiveType;
            $BroadcastContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $BroadcastContentRepresentation->ContentRevision = $ContentRevision;
            $BroadcastContentRepresentation->FileLength = $FileLength;
            $BroadcastContentRepresentation->LastModified = $LastModified;
            return $BroadcastContentRepresentation;
        }

       /**
        * Constructor for BroadcastContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:AudioPeaksRepresentation
    * @type:EntityType
    * @key:Id
    */
    class AudioPeaksRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $BytesPerSample;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Channels;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $PeakCount;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $PeaksPerPixel;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $PixelsPerRow;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $Rows;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $SampleRate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $SamplesPerBlock;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_AudioPeaksRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_AudioPeaksRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of AudioPeaksRepresentation
        * @param Edm.Int32 $BytesPerSample
        * @param Edm.Int32 $Channels
        * @param Edm.Int64 $PeakCount
        * @param Edm.Int32 $PeaksPerPixel
        * @param Edm.Int32 $PixelsPerRow
        * @param Edm.Int32 $Rows
        * @param Edm.Int32 $SampleRate
        * @param Edm.Int32 $SamplesPerBlock
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateAudioPeaksRepresentation(
            $BytesPerSample, 
            $Channels, 
            $PeakCount, 
            $PeaksPerPixel, 
            $PixelsPerRow, 
            $Rows, 
            $SampleRate, 
            $SamplesPerBlock, 
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $AudioPeaksRepresentation = new AudioPeaksRepresentation();
            $AudioPeaksRepresentation->BytesPerSample = $BytesPerSample;
            $AudioPeaksRepresentation->Channels = $Channels;
            $AudioPeaksRepresentation->PeakCount = $PeakCount;
            $AudioPeaksRepresentation->PeaksPerPixel = $PeaksPerPixel;
            $AudioPeaksRepresentation->PixelsPerRow = $PixelsPerRow;
            $AudioPeaksRepresentation->Rows = $Rows;
            $AudioPeaksRepresentation->SampleRate = $SampleRate;
            $AudioPeaksRepresentation->SamplesPerBlock = $SamplesPerBlock;
            $AudioPeaksRepresentation->Id = $Id;
            $AudioPeaksRepresentation->EncodingOrder = $EncodingOrder;
            $AudioPeaksRepresentation->Length = $Length;
            $AudioPeaksRepresentation->ArchiveType = $ArchiveType;
            $AudioPeaksRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $AudioPeaksRepresentation->ContentRevision = $ContentRevision;
            $AudioPeaksRepresentation->FileLength = $FileLength;
            $AudioPeaksRepresentation->LastModified = $LastModified;
            return $AudioPeaksRepresentation;
        }

       /**
        * Constructor for AudioPeaksRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ExternalPublishingContentRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ExternalPublishingContentRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ExternalUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ParentResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Status;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentMimeType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $EncodingOrder;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $Length;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FileNameWithExtension;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentEncodingSettingsId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ContentServerId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsTranscodeSource;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ContentRevision;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int64
        */
        public $FileLength;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $StreamType;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingPoint_SonicFoundry_Mediasite_WebApi_Model_ExternalPubPointRepresentation_ExternalPublishingPointPartner
        * @FromRole:ExternalPublishingPointPartner
        * @ToRole:ExternalPublishingPoint
        */
        public $ExternalPublishingPoint;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingProject_SonicFoundry_Mediasite_WebApi_Model_ExternalPubPointRepresentation_ExternalPublishingProjectPartner
        * @FromRole:ExternalPublishingProjectPartner
        * @ToRole:ExternalPublishingProject
        */
        public $ExternalPublishingProject;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner
        * @FromRole:ContentServerPartner
        * @ToRole:ContentServer
        */
        public $ContentServer;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner
        * @FromRole:ContentEncodingSettingsPartner
        * @ToRole:ContentEncodingSettings
        */
        public $ContentEncodingSettings;
    

       /**
        * Function to create an instance of ExternalPublishingContentRepresentation
        * @param Edm.String $Id
        * @param Edm.Int32 $EncodingOrder
        * @param Edm.Int64 $Length
        * @param Edm.Int32 $ArchiveType
        * @param Edm.Boolean $IsTranscodeSource
        * @param Edm.Int32 $ContentRevision
        * @param Edm.Int64 $FileLength
        * @param Edm.DateTime $LastModified
        */
        public static function CreateExternalPublishingContentRepresentation(
            $Id, 
            $EncodingOrder, 
            $Length, 
            $ArchiveType, 
            $IsTranscodeSource, 
            $ContentRevision, 
            $FileLength, 
            $LastModified)
        {   
            $ExternalPublishingContentRepresentation = new ExternalPublishingContentRepresentation();
            $ExternalPublishingContentRepresentation->Id = $Id;
            $ExternalPublishingContentRepresentation->EncodingOrder = $EncodingOrder;
            $ExternalPublishingContentRepresentation->Length = $Length;
            $ExternalPublishingContentRepresentation->ArchiveType = $ArchiveType;
            $ExternalPublishingContentRepresentation->IsTranscodeSource = $IsTranscodeSource;
            $ExternalPublishingContentRepresentation->ContentRevision = $ContentRevision;
            $ExternalPublishingContentRepresentation->FileLength = $FileLength;
            $ExternalPublishingContentRepresentation->LastModified = $LastModified;
            return $ExternalPublishingContentRepresentation;
        }

       /**
        * Constructor for ExternalPublishingContentRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ExternalPublishingPoint'] = 'ExternalPublishingPoint';
            $this->_entityMap['ExternalPublishingProject'] = 'ExternalPublishingProject';
            $this->_entityMap['ContentServer'] = 'ContentServer';
            $this->_entityMap['ContentEncodingSettings'] = 'ContentEncodingSettings';
            $this->_entityKey[] = 'Id';
            $this->ExternalPublishingPoint = array();
            $this->ExternalPublishingProject = array();
            $this->ContentServer = array();
            $this->ContentEncodingSettings = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ExternalPubPointRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ExternalPubPointRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Type;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EmailAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Username;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Copyright;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Author;
    

       /**
        * Function to create an instance of ExternalPubPointRepresentation
        * @param Edm.String $Id
        */
        public static function CreateExternalPubPointRepresentation(
            $Id)
        {   
            $ExternalPubPointRepresentation = new ExternalPubPointRepresentation();
            $ExternalPubPointRepresentation->Id = $Id;
            return $ExternalPubPointRepresentation;
        }

       /**
        * Constructor for ExternalPubPointRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:RoleRepresentation
    * @type:EntityType
    * @key:Id
    */
    class RoleRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsBuiltInRole;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DirectoryEntry;
    

       /**
        * Function to create an instance of RoleRepresentation
        * @param Edm.String $Id
        * @param Edm.Boolean $IsBuiltInRole
        */
        public static function CreateRoleRepresentation(
            $Id, 
            $IsBuiltInRole)
        {   
            $RoleRepresentation = new RoleRepresentation();
            $RoleRepresentation->Id = $Id;
            $RoleRepresentation->IsBuiltInRole = $IsBuiltInRole;
            return $RoleRepresentation;
        }

       /**
        * Constructor for RoleRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ResourcePermissionsRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ResourcePermissionsRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $InheritPermissions;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.AccessControlEntry)
        */
        public $AccessControlList;
    

       /**
        * Function to create an instance of ResourcePermissionsRepresentation
        * @param Edm.String $Id
        * @param Edm.Boolean $InheritPermissions
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.AccessControlEntry) $AccessControlList
        */
        public static function CreateResourcePermissionsRepresentation(
            $Id, 
            $InheritPermissions, 
            $AccessControlList)
        {   
            $ResourcePermissionsRepresentation = new ResourcePermissionsRepresentation();
            $ResourcePermissionsRepresentation->Id = $Id;
            $ResourcePermissionsRepresentation->InheritPermissions = $InheritPermissions;
            $ResourcePermissionsRepresentation->AccessControlList = $AccessControlList;
            return $ResourcePermissionsRepresentation;
        }

       /**
        * Constructor for ResourcePermissionsRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:SsoRoleCacheRepresentation
    * @type:EntityType
    * @key:SiteId
    */
    class SsoRoleCacheRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SiteId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $RoleList;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $OldestLastModified;
    

       /**
        * Function to create an instance of SsoRoleCacheRepresentation
        * @param Edm.String $SiteId
        * @param Edm.DateTime $OldestLastModified
        */
        public static function CreateSsoRoleCacheRepresentation(
            $SiteId, 
            $OldestLastModified)
        {   
            $SsoRoleCacheRepresentation = new SsoRoleCacheRepresentation();
            $SsoRoleCacheRepresentation->SiteId = $SiteId;
            $SsoRoleCacheRepresentation->OldestLastModified = $OldestLastModified;
            return $SsoRoleCacheRepresentation;
        }

       /**
        * Constructor for SsoRoleCacheRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'SiteId';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:EmailTemplateRepresentation
    * @type:EntityType
    * @key:Id
    */
    class EmailTemplateRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Subject;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Body;
    

       /**
        * Function to create an instance of EmailTemplateRepresentation
        * @param Edm.String $Id
        */
        public static function CreateEmailTemplateRepresentation(
            $Id)
        {   
            $EmailTemplateRepresentation = new EmailTemplateRepresentation();
            $EmailTemplateRepresentation->Id = $Id;
            return $EmailTemplateRepresentation;
        }

       /**
        * Constructor for EmailTemplateRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:RegistrationRepresentation
    * @type:EntityType
    * @key:ResourceId
    */
    class RegistrationRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ResourceId;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.RegistrationCustomFieldRepresentation)
        */
        public $CustomFields;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $HideLoginForm;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LoginMessage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Passcode;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RegistrationMessage;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $RegistrationEnabled;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $BannerBackColor;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $BannerImage;
    
       /**
        * @Type:NavigationProperty
        * @Relationship:SonicFoundry_Mediasite_WebApi_Model_RegistrationRepresentation_ResourceRegistrations_SonicFoundry_Mediasite_WebApi_Model_ResourceRegistrationRepresentation_ResourceRegistrationsPartner
        * @FromRole:ResourceRegistrationsPartner
        * @ToRole:ResourceRegistrations
        */
        public $ResourceRegistrations;
    

       /**
        * Function to create an instance of RegistrationRepresentation
        * @param Edm.String $ResourceId
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.RegistrationCustomFieldRepresentation) $CustomFields
        * @param Edm.Boolean $HideLoginForm
        * @param Edm.Boolean $RegistrationEnabled
        */
        public static function CreateRegistrationRepresentation(
            $ResourceId, 
            $CustomFields, 
            $HideLoginForm, 
            $RegistrationEnabled)
        {   
            $RegistrationRepresentation = new RegistrationRepresentation();
            $RegistrationRepresentation->ResourceId = $ResourceId;
            $RegistrationRepresentation->CustomFields = $CustomFields;
            $RegistrationRepresentation->HideLoginForm = $HideLoginForm;
            $RegistrationRepresentation->RegistrationEnabled = $RegistrationEnabled;
            return $RegistrationRepresentation;
        }

       /**
        * Constructor for RegistrationRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityMap['ResourceRegistrations'] = 'ResourceRegistrations';
            $this->_entityKey[] = 'ResourceId';
            $this->ResourceRegistrations = array();
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ResourceRegistrationRepresentation
    * @type:EntityType
    * @key:EmailAddress
    */
    class ResourceRegistrationRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EmailAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FirstName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LastName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ResourceId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $IPAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $RegisterDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ResourceRegistrationCustomField)
        */
        public $CustomFieldValues;
    

       /**
        * Function to create an instance of ResourceRegistrationRepresentation
        * @param Edm.String $EmailAddress
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ResourceRegistrationCustomField) $CustomFieldValues
        */
        public static function CreateResourceRegistrationRepresentation(
            $EmailAddress, 
            $CustomFieldValues)
        {   
            $ResourceRegistrationRepresentation = new ResourceRegistrationRepresentation();
            $ResourceRegistrationRepresentation->EmailAddress = $EmailAddress;
            $ResourceRegistrationRepresentation->CustomFieldValues = $CustomFieldValues;
            return $ResourceRegistrationRepresentation;
        }

       /**
        * Constructor for ResourceRegistrationRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'EmailAddress';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:VideoPodcastProjectRepresentation
    * @type:EntityType
    * @key:Id
    */
    class VideoPodcastProjectRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $BackgroundImageFileName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $WatermarkImageFileName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $WatermarkPosition;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LeaderVideoFileName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TrailerVideoFileName;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableBanner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Layout;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Bitrate;
    

       /**
        * Function to create an instance of VideoPodcastProjectRepresentation
        * @param Edm.String $Id
        * @param Edm.Boolean $EnableBanner
        */
        public static function CreateVideoPodcastProjectRepresentation(
            $Id, 
            $EnableBanner)
        {   
            $VideoPodcastProjectRepresentation = new VideoPodcastProjectRepresentation();
            $VideoPodcastProjectRepresentation->Id = $Id;
            $VideoPodcastProjectRepresentation->EnableBanner = $EnableBanner;
            return $VideoPodcastProjectRepresentation;
        }

       /**
        * Constructor for VideoPodcastProjectRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ModuleRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ModuleRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ModuleId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Description;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $CreationDate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $LastModified;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Owner;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $Associations;
    

       /**
        * Function to create an instance of ModuleRepresentation
        * @param Edm.String $Id
        * @param Edm.DateTime $CreationDate
        * @param Edm.DateTime $LastModified
        */
        public static function CreateModuleRepresentation(
            $Id, 
            $CreationDate, 
            $LastModified)
        {   
            $ModuleRepresentation = new ModuleRepresentation();
            $ModuleRepresentation->Id = $Id;
            $ModuleRepresentation->CreationDate = $CreationDate;
            $ModuleRepresentation->LastModified = $LastModified;
            return $ModuleRepresentation;
        }

       /**
        * Constructor for ModuleRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CustomFieldDefRepresentation
    * @type:EntityType
    * @key:Id
    */
    class CustomFieldDefRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Format;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ErrorMessage;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RegularExpression;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FieldType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsSearchable;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsRegexRequired;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsRequired;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsSecured;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsHidden;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $IsDomainUnique;
    

       /**
        * Function to create an instance of CustomFieldDefRepresentation
        * @param Edm.String $Id
        */
        public static function CreateCustomFieldDefRepresentation(
            $Id)
        {   
            $CustomFieldDefRepresentation = new CustomFieldDefRepresentation();
            $CustomFieldDefRepresentation->Id = $Id;
            return $CustomFieldDefRepresentation;
        }

       /**
        * Constructor for CustomFieldDefRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CustomFieldValuesRepresentation
    * @type:EntityType
    * @key:Id
    */
    class CustomFieldValuesRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue)
        */
        public $CustomFieldValueCollection;
    

       /**
        * Function to create an instance of CustomFieldValuesRepresentation
        * @param Edm.String $Id
        * @param Collection(SonicFoundry.Mediasite.WebApi.Model.ApiCustomFieldValue) $CustomFieldValueCollection
        */
        public static function CreateCustomFieldValuesRepresentation(
            $Id, 
            $CustomFieldValueCollection)
        {   
            $CustomFieldValuesRepresentation = new CustomFieldValuesRepresentation();
            $CustomFieldValuesRepresentation->Id = $Id;
            $CustomFieldValuesRepresentation->CustomFieldValueCollection = $CustomFieldValueCollection;
            return $CustomFieldValuesRepresentation;
        }

       /**
        * Constructor for CustomFieldValuesRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ReportRecurrenceRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ReportRecurrenceRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $StartDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $EndDate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $TimeZoneId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $SaveResults;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $ResultExpirationInDays;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ReportRecurrenceType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.DailyReportRecurrenceSettings
        */
        public $DailySettings;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.WeeklyReportRecurrenceSettings
        */
        public $WeeklySettings;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.MonthlyReportRecurrenceSettings
        */
        public $MonthlySettings;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.YearlyReportRecurrenceSettings
        */
        public $YearlySettings;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $NotifyOnCompletion;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SenderEmailAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Collection(Edm.String)
        */
        public $RecipientMailingList;
    

       /**
        * Function to create an instance of ReportRecurrenceRepresentation
        * @param Edm.String $Id
        */
        public static function CreateReportRecurrenceRepresentation(
            $Id)
        {   
            $ReportRecurrenceRepresentation = new ReportRecurrenceRepresentation();
            $ReportRecurrenceRepresentation->Id = $Id;
            return $ReportRecurrenceRepresentation;
        }

       /**
        * Constructor for ReportRecurrenceRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PodcastRepresentation
    * @type:EntityType
    * @key:Id
    */
    class PodcastRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    

       /**
        * Function to create an instance of PodcastRepresentation
        * @param Edm.String $Id
        */
        public static function CreatePodcastRepresentation(
            $Id)
        {   
            $PodcastRepresentation = new PodcastRepresentation();
            $PodcastRepresentation->Id = $Id;
            return $PodcastRepresentation;
        }

       /**
        * Constructor for PodcastRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ServerReportRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ServerReportRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    

       /**
        * Function to create an instance of ServerReportRepresentation
        * @param Edm.String $Id
        */
        public static function CreateServerReportRepresentation(
            $Id)
        {   
            $ServerReportRepresentation = new ServerReportRepresentation();
            $ServerReportRepresentation->Id = $Id;
            return $ServerReportRepresentation;
        }

       /**
        * Constructor for ServerReportRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:ApplicationTicketRepresentation
    * @type:EntityType
    * @key:Id
    */
    class ApplicationTicketRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Id;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserProfileId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UserName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $CreationDateUtc;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.DateTime
        */
        public $LastUsedUtc;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Revoked;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MachineName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ApiKey;
    

       /**
        * Function to create an instance of ApplicationTicketRepresentation
        * @param Edm.String $Id
        */
        public static function CreateApplicationTicketRepresentation(
            $Id)
        {   
            $ApplicationTicketRepresentation = new ApplicationTicketRepresentation();
            $ApplicationTicketRepresentation->Id = $Id;
            return $ApplicationTicketRepresentation;
        }

       /**
        * Constructor for ApplicationTicketRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
            $this->_entityKey[] = 'Id';
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:WmsOnDemandContentServerRepresentation
    * @type:EntityType
    */
    class WmsOnDemandContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    

       /**
        * Function to create an instance of WmsOnDemandContentServerRepresentation
        */
        public static function CreateWmsOnDemandContentServerRepresentation()
        {   
            $WmsOnDemandContentServerRepresentation = new WmsOnDemandContentServerRepresentation();
            return $WmsOnDemandContentServerRepresentation;
        }

       /**
        * Constructor for WmsOnDemandContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:SlideContentServerRepresentation
    * @type:EntityType
    */
    class SlideContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionMode;
    

       /**
        * Function to create an instance of SlideContentServerRepresentation
        */
        public static function CreateSlideContentServerRepresentation()
        {   
            $SlideContentServerRepresentation = new SlideContentServerRepresentation();
            return $SlideContentServerRepresentation;
        }

       /**
        * Constructor for SlideContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:IIsMediaOnDemandContentServerRepresentation
    * @type:EntityType
    */
    class IIsMediaOnDemandContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseMediasiteFileServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableFileServerSecurity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LocalUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $StorageServer;
    

       /**
        * Function to create an instance of IIsMediaOnDemandContentServerRepresentation
        * @param Edm.Boolean $UseMediasiteFileServer
        * @param Edm.Boolean $EnableFileServerSecurity
        */
        public static function CreateIIsMediaOnDemandContentServerRepresentation(
            $UseMediasiteFileServer, 
            $EnableFileServerSecurity)
        {   
            $IIsMediaOnDemandContentServerRepresentation = new IIsMediaOnDemandContentServerRepresentation();
            $IIsMediaOnDemandContentServerRepresentation->UseMediasiteFileServer = $UseMediasiteFileServer;
            $IIsMediaOnDemandContentServerRepresentation->EnableFileServerSecurity = $EnableFileServerSecurity;
            return $IIsMediaOnDemandContentServerRepresentation;
        }

       /**
        * Constructor for IIsMediaOnDemandContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:SmoothStreamingCustomPushContentServerRepresentation
    * @type:EntityType
    */
    class SmoothStreamingCustomPushContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $PushMediaServerLocation;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableAppleOutput;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $MediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $SecondaryMediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    

       /**
        * Function to create an instance of SmoothStreamingCustomPushContentServerRepresentation
        * @param Edm.Boolean $EnableAppleOutput
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        */
        public static function CreateSmoothStreamingCustomPushContentServerRepresentation(
            $EnableAppleOutput, 
            $EnableSecondaryMediaServer, 
            $UseSecurity)
        {   
            $SmoothStreamingCustomPushContentServerRepresentation = new SmoothStreamingCustomPushContentServerRepresentation();
            $SmoothStreamingCustomPushContentServerRepresentation->EnableAppleOutput = $EnableAppleOutput;
            $SmoothStreamingCustomPushContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $SmoothStreamingCustomPushContentServerRepresentation->UseSecurity = $UseSecurity;
            return $SmoothStreamingCustomPushContentServerRepresentation;
        }

       /**
        * Constructor for SmoothStreamingCustomPushContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:PublishToGoContentServerRepresentation
    * @type:EntityType
    */
    class PublishToGoContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseMediasiteFileServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableFileServerSecurity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LocalUrl;
    

       /**
        * Function to create an instance of PublishToGoContentServerRepresentation
        * @param Edm.Boolean $UseMediasiteFileServer
        * @param Edm.Boolean $EnableFileServerSecurity
        */
        public static function CreatePublishToGoContentServerRepresentation(
            $UseMediasiteFileServer, 
            $EnableFileServerSecurity)
        {   
            $PublishToGoContentServerRepresentation = new PublishToGoContentServerRepresentation();
            $PublishToGoContentServerRepresentation->UseMediasiteFileServer = $UseMediasiteFileServer;
            $PublishToGoContentServerRepresentation->EnableFileServerSecurity = $EnableFileServerSecurity;
            return $PublishToGoContentServerRepresentation;
        }

       /**
        * Constructor for PublishToGoContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:IIsMediaPushContentServerRepresentation
    * @type:EntityType
    */
    class IIsMediaPushContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $PushMediaServerUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $SecondaryPushMediaServerUrl;
    

       /**
        * Function to create an instance of IIsMediaPushContentServerRepresentation
        */
        public static function CreateIIsMediaPushContentServerRepresentation()
        {   
            $IIsMediaPushContentServerRepresentation = new IIsMediaPushContentServerRepresentation();
            return $IIsMediaPushContentServerRepresentation;
        }

       /**
        * Constructor for IIsMediaPushContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:IIsProgressiveContentServerRepresentation
    * @type:EntityType
    */
    class IIsProgressiveContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    

       /**
        * Function to create an instance of IIsProgressiveContentServerRepresentation
        */
        public static function CreateIIsProgressiveContentServerRepresentation()
        {   
            $IIsProgressiveContentServerRepresentation = new IIsProgressiveContentServerRepresentation();
            return $IIsProgressiveContentServerRepresentation;
        }

       /**
        * Constructor for IIsProgressiveContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CustomPullServerContentServerRepresentation
    * @type:EntityType
    */
    class CustomPullServerContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $MediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $SecondaryMediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    

       /**
        * Function to create an instance of CustomPullServerContentServerRepresentation
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        */
        public static function CreateCustomPullServerContentServerRepresentation(
            $EnableSecondaryMediaServer, 
            $UseSecurity)
        {   
            $CustomPullServerContentServerRepresentation = new CustomPullServerContentServerRepresentation();
            $CustomPullServerContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $CustomPullServerContentServerRepresentation->UseSecurity = $UseSecurity;
            return $CustomPullServerContentServerRepresentation;
        }

       /**
        * Constructor for CustomPullServerContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:WmsPushContentServerRepresentation
    * @type:EntityType
    */
    class WmsPushContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    

       /**
        * Function to create an instance of WmsPushContentServerRepresentation
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        */
        public static function CreateWmsPushContentServerRepresentation(
            $EnableSecondaryMediaServer, 
            $UseSecurity)
        {   
            $WmsPushContentServerRepresentation = new WmsPushContentServerRepresentation();
            $WmsPushContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $WmsPushContentServerRepresentation->UseSecurity = $UseSecurity;
            return $WmsPushContentServerRepresentation;
        }

       /**
        * Constructor for WmsPushContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:SmoothStreamingCustomPullContentServerRepresentation
    * @type:EntityType
    */
    class SmoothStreamingCustomPullContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableAppleOutput;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $MediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $SecondaryMediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    

       /**
        * Function to create an instance of SmoothStreamingCustomPullContentServerRepresentation
        * @param Edm.Boolean $EnableAppleOutput
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        */
        public static function CreateSmoothStreamingCustomPullContentServerRepresentation(
            $EnableAppleOutput, 
            $EnableSecondaryMediaServer, 
            $UseSecurity)
        {   
            $SmoothStreamingCustomPullContentServerRepresentation = new SmoothStreamingCustomPullContentServerRepresentation();
            $SmoothStreamingCustomPullContentServerRepresentation->EnableAppleOutput = $EnableAppleOutput;
            $SmoothStreamingCustomPullContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $SmoothStreamingCustomPullContentServerRepresentation->UseSecurity = $UseSecurity;
            return $SmoothStreamingCustomPullContentServerRepresentation;
        }

       /**
        * Constructor for SmoothStreamingCustomPullContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:IIsMediaPullContentServerRepresentation
    * @type:EntityType
    */
    class IIsMediaPullContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $MediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $SecondaryMediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableArchive;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ArchiveSegmentLength;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AllowClientConnections;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $DVRLength;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AllowServerConnections;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AutoStart;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $LookAheadFragments;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.IIsMediaBroadcastAppleDeviceSettingsRepresentation
        */
        public $AppleDeviceSettings;
    

       /**
        * Function to create an instance of IIsMediaPullContentServerRepresentation
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        * @param Edm.Boolean $EnableArchive
        * @param Edm.Int32 $ArchiveSegmentLength
        * @param Edm.Boolean $AllowClientConnections
        * @param Edm.Int32 $DVRLength
        * @param Edm.Boolean $AllowServerConnections
        * @param Edm.Boolean $AutoStart
        * @param Edm.Int32 $LookAheadFragments
        */
        public static function CreateIIsMediaPullContentServerRepresentation(
            $EnableSecondaryMediaServer, 
            $UseSecurity, 
            $EnableArchive, 
            $ArchiveSegmentLength, 
            $AllowClientConnections, 
            $DVRLength, 
            $AllowServerConnections, 
            $AutoStart, 
            $LookAheadFragments)
        {   
            $IIsMediaPullContentServerRepresentation = new IIsMediaPullContentServerRepresentation();
            $IIsMediaPullContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $IIsMediaPullContentServerRepresentation->UseSecurity = $UseSecurity;
            $IIsMediaPullContentServerRepresentation->EnableArchive = $EnableArchive;
            $IIsMediaPullContentServerRepresentation->ArchiveSegmentLength = $ArchiveSegmentLength;
            $IIsMediaPullContentServerRepresentation->AllowClientConnections = $AllowClientConnections;
            $IIsMediaPullContentServerRepresentation->DVRLength = $DVRLength;
            $IIsMediaPullContentServerRepresentation->AllowServerConnections = $AllowServerConnections;
            $IIsMediaPullContentServerRepresentation->AutoStart = $AutoStart;
            $IIsMediaPullContentServerRepresentation->LookAheadFragments = $LookAheadFragments;
            return $IIsMediaPullContentServerRepresentation;
        }

       /**
        * Constructor for IIsMediaPullContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:WmsMulticastPullContentServerRepresentation
    * @type:EntityType
    */
    class WmsMulticastPullContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableUnicastDistributionRollover;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $UnicastRolloverUrl;
    

       /**
        * Function to create an instance of WmsMulticastPullContentServerRepresentation
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        * @param Edm.Boolean $EnableUnicastDistributionRollover
        */
        public static function CreateWmsMulticastPullContentServerRepresentation(
            $EnableSecondaryMediaServer, 
            $UseSecurity, 
            $EnableUnicastDistributionRollover)
        {   
            $WmsMulticastPullContentServerRepresentation = new WmsMulticastPullContentServerRepresentation();
            $WmsMulticastPullContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $WmsMulticastPullContentServerRepresentation->UseSecurity = $UseSecurity;
            $WmsMulticastPullContentServerRepresentation->EnableUnicastDistributionRollover = $EnableUnicastDistributionRollover;
            return $WmsMulticastPullContentServerRepresentation;
        }

       /**
        * Constructor for WmsMulticastPullContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:WmsUnicastPullContentServerRepresentation
    * @type:EntityType
    */
    class WmsUnicastPullContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    

       /**
        * Function to create an instance of WmsUnicastPullContentServerRepresentation
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        */
        public static function CreateWmsUnicastPullContentServerRepresentation(
            $EnableSecondaryMediaServer, 
            $UseSecurity)
        {   
            $WmsUnicastPullContentServerRepresentation = new WmsUnicastPullContentServerRepresentation();
            $WmsUnicastPullContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $WmsUnicastPullContentServerRepresentation->UseSecurity = $UseSecurity;
            return $WmsUnicastPullContentServerRepresentation;
        }

       /**
        * Constructor for WmsUnicastPullContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:CustomPushServerContentServerRepresentation
    * @type:EntityType
    */
    class CustomPushServerContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DistributionUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $PushMediaServerLocation;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $MediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableSecondaryMediaServer;
    
       /**
        * @Type:EntityProperty
        * @EdmType:SonicFoundry.Mediasite.WebApi.Model.ServerEndpointRepresentation
        */
        public $SecondaryMediaControlService;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseSecurity;
    

       /**
        * Function to create an instance of CustomPushServerContentServerRepresentation
        * @param Edm.Boolean $EnableSecondaryMediaServer
        * @param Edm.Boolean $UseSecurity
        */
        public static function CreateCustomPushServerContentServerRepresentation(
            $EnableSecondaryMediaServer, 
            $UseSecurity)
        {   
            $CustomPushServerContentServerRepresentation = new CustomPushServerContentServerRepresentation();
            $CustomPushServerContentServerRepresentation->EnableSecondaryMediaServer = $EnableSecondaryMediaServer;
            $CustomPushServerContentServerRepresentation->UseSecurity = $UseSecurity;
            return $CustomPushServerContentServerRepresentation;
        }

       /**
        * Constructor for CustomPushServerContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
   /**
    * @class:MediasiteDataContentServerRepresentation
    * @type:EntityType
    */
    class MediasiteDataContentServerRepresentation extends Object
    {
        protected $_entityMap = array();
        protected $_entityKey = array();
        protected $_relLinks  = array();
        protected $_baseURI;

    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseMediasiteFileServer;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableFileServerSecurity;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $LocalUrl;
    

       /**
        * Function to create an instance of MediasiteDataContentServerRepresentation
        * @param Edm.Boolean $UseMediasiteFileServer
        * @param Edm.Boolean $EnableFileServerSecurity
        */
        public static function CreateMediasiteDataContentServerRepresentation(
            $UseMediasiteFileServer, 
            $EnableFileServerSecurity)
        {   
            $MediasiteDataContentServerRepresentation = new MediasiteDataContentServerRepresentation();
            $MediasiteDataContentServerRepresentation->UseMediasiteFileServer = $UseMediasiteFileServer;
            $MediasiteDataContentServerRepresentation->EnableFileServerSecurity = $EnableFileServerSecurity;
            return $MediasiteDataContentServerRepresentation;
        }

       /**
        * Constructor for MediasiteDataContentServerRepresentation
        */
        public function __construct($uri = "")
        {
            $this->_objectID = Guid::NewGuid();
            $this->_baseURI = $uri;
    
        }

       /**
        * overring getObjectID() functon of Object class
        */
        public function getObjectID()
        {
            return $this->_objectID;
        }

       /**
        * This function returns the entity keys of this entity.
        */
        public function getEntityKeys()
        {
            return $this->_entityKey;
        }

       /**
        * This function set the entity keys of this entity.
        */
        public function setEntityKeys($entityKey)
        {
            $this->_entityKey = $entityKey;
        }

       /**
        * This function returns the related links of this entity.
        */
        public function getRelatedLinks()
        {
            return $this->_relLinks;
        }

       /**
        * This function set the related links of this entity.
        */
        public function setRelatedLinks($relLinks)
        {
            $this->_relLinks = $relLinks;
        }

       /**
        * Function for getting Entity Type Name corrosponding to navigation Name
        */
        public function getActualEntityTypeName($key)
        {
            if (array_key_exists($key, $this->_entityMap))
            {
                return ($this->_entityMap[$key]);
            }
            return $key;
        }
    }
  
    /**
    * @class:AccessControlEntry
    * @type:ComplexType
    */
    class AccessControlEntry
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $RoleId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $PermissionMask;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Read;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Write;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Execute;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Moderate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Approve;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DenyRead;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DenyWrite;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DenyExecute;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DenyModerate;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $DenyApprove;
    
    }
  
    /**
    * @class:ReportExecuteResult
    * @type:ComplexType
    */
    class ReportExecuteResult
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ResultLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ResultId;
    
    }
  
    /**
    * @class:ReportExportResult
    * @type:ComplexType
    */
    class ReportExportResult
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DownloadFilename;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DownloadLink;
    
    }
  
    /**
    * @class:RefreshReportDataResult
    * @type:ComplexType
    */
    class RefreshReportDataResult
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobLink;
    
    }
  
    /**
    * @class:CreateCopyPresentationResponse
    * @type:ComplexType
    */
    class CreateCopyPresentationResponse
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $JobLink;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TargetPresentationId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $TargetPresentationLink;
    
    }
  
    /**
    * @class:ServerEndpointRepresentation
    * @type:ComplexType
    */
    class ServerEndpointRepresentation
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EndpointType;
    
    }
  
    /**
    * @class:IIsMediaBroadcastAppleDeviceSettingsRepresentation
    * @type:ComplexType
    */
    class IIsMediaBroadcastAppleDeviceSettingsRepresentation
    {
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableOutput;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AllowCaching;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $SegmentLength;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $MaxBitrate;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableBackwardsCompatibility;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $EnableEncryption;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $EncryptionKey;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $UseCustomEncryptionKeyUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $CustomEncryptionKeyUrl;
    
    }
  
    /**
    * @class:OptionWithOverride
    * @type:ComplexType
    */
    class OptionWithOverride
    {
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $AllowOverride;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $Value;
    
    }
  
    /**
    * @class:ApiCustomFieldValue
    * @type:ComplexType
    */
    class ApiCustomFieldValue
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FieldName;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FieldDefinitionId;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DataType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Value;
    
    }
  
    /**
    * @class:ExcludeDateRangeRepresentation
    * @type:ComplexType
    */
    class ExcludeDateRangeRepresentation
    {
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $Start;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.DateTime
        */
        public $End;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $ExcludeId;
    
    }
  
    /**
    * @class:DailyReportRecurrenceSettings
    * @type:ComplexType
    */
    class DailyReportRecurrenceSettings
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $FrequencyInDays;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $EveryWeekDays;
    
    }
  
    /**
    * @class:WeeklyReportRecurrenceSettings
    * @type:ComplexType
    */
    class WeeklyReportRecurrenceSettings
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $FrequencyInWeeks;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Sunday;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Monday;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Tuesday;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Wednesday;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Thursday;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Friday;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Boolean
        */
        public $Saturday;
    
    }
  
    /**
    * @class:MonthlyReportRecurrenceSettings
    * @type:ComplexType
    */
    class MonthlyReportRecurrenceSettings
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MonthlyRecurrenceType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $FrequencyInMonths;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $DayOfMonth;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $WeekOfMonth;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DayOfWeek;
    
    }
  
    /**
    * @class:YearlyReportRecurrenceSettings
    * @type:ComplexType
    */
    class YearlyReportRecurrenceSettings
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $YearlyRecurrenceType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MonthOfYear;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.Int32
        */
        public $DayOfMonth;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $WeekOfMonth;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $DayOfWeek;
    
    }
  
    /**
    * @class:IPAddressRangeForReport
    * @type:ComplexType
    */
    class IPAddressRangeForReport
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $IPAddressRangeType;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $FromIPAddress;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ToIPAddress;
    
    }
  
    /**
    * @class:ShowcaseContentRepresentation
    * @type:ComplexType
    */
    class ShowcaseContentRepresentation
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Name;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Type;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Int32
        */
        public $DisplayOrder;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ExternalLinkUrl;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $MarkDownContent;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $ImageUrl;
    
    }
  
    /**
    * @class:RegistrationCustomFieldRepresentation
    * @type:ComplexType
    */
    class RegistrationCustomFieldRepresentation
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Label;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsRequired;
    
    }
  
    /**
    * @class:ResourceRegistrationCustomField
    * @type:ComplexType
    */
    class ResourceRegistrationCustomField
    {
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Label;
    
       /**
        * @Type:EntityProperty
        * NotNullable
        * @EdmType:Edm.Boolean
        */
        public $IsRequired;
    
       /**
        * @Type:EntityProperty
        * @EdmType:Edm.String
        * @MaxLength:
        * @FixedLength:
        */
        public $Value;
    
    }
  
   /**
    * Container class Container, Namespace: SonicFoundry.Mediasite.WebApi.Model
    */
    class Container extends ObjectContext
    {
    
        protected $_Folders;
        protected $_Jobs;
        protected $_Templates;
        protected $_Presentations;
        protected $_Catalogs;
        protected $_CatalogSettings;
        protected $_Schedules;
        protected $_Recorders;
        protected $_RecorderStatus;
        protected $_RecorderLicenseStatus;
        protected $_ScheduledRecordingTimes;
        protected $_PresentationReports;
        protected $_PresenterReports;
        protected $_UserReports;
        protected $_CatalogReports;
        protected $_DownloadReports;
        protected $_AuthoringReports;
        protected $_Players;
        protected $_Home;
        protected $_ShowcaseSettings;
        protected $_Categories;
        protected $_QuotaPolicies;
        protected $_QuotaLevels;
        protected $_TermsAndConditions;
        protected $_Tags;
        protected $_PresentationQuestions;
        protected $_PlayerLayoutOptions;
        protected $_EmailInvitations;
        protected $_TimedEvents;
        protected $_DistributionContentServerEndpoints;
        protected $_StorageContentServerEndpoints;
        protected $_ContentServers;
        protected $_Presenters;
        protected $_ContentEncodingSettings;
        protected $_EncodingSettingsFilters;
        protected $_EncodingStreamDescriptions;
        protected $_AuthorizationTickets;
        protected $_ShowcaseChannels;
        protected $_Recurrences;
        protected $_PresentationAnalytics;
        protected $_PresentationClientAnalytics;
        protected $_PresentationUserAnalytics;
        protected $_PresentationIPAnalytics;
        protected $_ViewingTrendsSegments;
        protected $_ViewingSessions;
        protected $_ActiveSessions;
        protected $_ViewingPlatformTotals;
        protected $_UserAnalytics;
        protected $_UserPresentationAnalytics;
        protected $_ServerAnalytics;
        protected $_PresentationSources;
        protected $_ActiveConnections;
        protected $_ActivePresentations;
        protected $_UserProfiles;
        protected $_MediasiteTimeZones;
        protected $_ApiKeys;
        protected $_PresentationThumbnailContent;
        protected $_PodcastContent;
        protected $_VideoPodcastContent;
        protected $_CaptionContent;
        protected $_SlideContent;
        protected $_OcrContent;
        protected $_OnDemandContent;
        protected $_BroadcastContent;
        protected $_AudioPeaksContent;
        protected $_ExternalPublishingContent;
        protected $_ExternalPublishingProjects;
        protected $_Roles;
        protected $_ResourcePermissions;
        protected $_SsoRoleCache;
        protected $_EmailTemplates;
        protected $_Registrations;
        protected $_ResourceRegistrations;
        protected $_VideoPodcastProjects;
        protected $_Modules;
        protected $_CustomFieldDefinitions;
        protected $_CustomFieldValues;
        protected $_ReportRecurrences;
        protected $_ExternalPublishingPoints;
        protected $_Podcasts;
        protected $_ServerReports;
        protected $_ApplicationTickets;
        
       /**
        * The constructor for Container accepting service URI
        */
        public function __construct($uri = "")
        {
            if(strlen($uri) == 0)
            {
                $uri = DEFAULT_ODATA_SERVICE_URL;
            }

            if (Utility::reverseFind($uri, '/') != strlen($uri) - 1)
            {
                $uri = $uri . '/';
            }

            $this->_baseURI = $uri;
            parent::__construct($this->_baseURI);
            $this->_entities = array(
                                "Folders",
                                "Jobs",
                                "Templates",
                                "Presentations",
                                "Catalogs",
                                "CatalogSettings",
                                "Schedules",
                                "Recorders",
                                "RecorderStatus",
                                "RecorderLicenseStatus",
                                "ScheduledRecordingTimes",
                                "PresentationReports",
                                "PresenterReports",
                                "UserReports",
                                "CatalogReports",
                                "DownloadReports",
                                "AuthoringReports",
                                "Players",
                                "Home",
                                "ShowcaseSettings",
                                "Categories",
                                "QuotaPolicies",
                                "QuotaLevels",
                                "TermsAndConditions",
                                "Tags",
                                "PresentationQuestions",
                                "PlayerLayoutOptions",
                                "EmailInvitations",
                                "TimedEvents",
                                "DistributionContentServerEndpoints",
                                "StorageContentServerEndpoints",
                                "ContentServers",
                                "Presenters",
                                "ContentEncodingSettings",
                                "EncodingSettingsFilters",
                                "EncodingStreamDescriptions",
                                "AuthorizationTickets",
                                "ShowcaseChannels",
                                "Recurrences",
                                "PresentationAnalytics",
                                "PresentationClientAnalytics",
                                "PresentationUserAnalytics",
                                "PresentationIPAnalytics",
                                "ViewingTrendsSegments",
                                "ViewingSessions",
                                "ActiveSessions",
                                "ViewingPlatformTotals",
                                "UserAnalytics",
                                "UserPresentationAnalytics",
                                "ServerAnalytics",
                                "PresentationSources",
                                "ActiveConnections",
                                "ActivePresentations",
                                "UserProfiles",
                                "MediasiteTimeZones",
                                "ApiKeys",
                                "PresentationThumbnailContent",
                                "PodcastContent",
                                "VideoPodcastContent",
                                "CaptionContent",
                                "SlideContent",
                                "OcrContent",
                                "OnDemandContent",
                                "BroadcastContent",
                                "AudioPeaksContent",
                                "ExternalPublishingContent",
                                "ExternalPublishingProjects",
                                "Roles",
                                "ResourcePermissions",
                                "SsoRoleCache",
                                "EmailTemplates",
                                "Registrations",
                                "ResourceRegistrations",
                                "VideoPodcastProjects",
                                "Modules",
                                "CustomFieldDefinitions",
                                "CustomFieldValues",
                                "ReportRecurrences",
                                "ExternalPublishingPoints",
                                "Podcasts",
                                "ServerReports",
                                "ApplicationTickets");
            $this->_entitySet2Type = array(
                                            DEFAULT_ODATA_SERVICE_URL . "/folders" => "FolderRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/jobs" => "JobRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/templates" => "TemplateRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentations" => "PresentationCardRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/catalogs" => "CatalogRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/catalogsettings" => "CatalogSettingsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/schedules" => "ScheduleRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/recorders" => "RecorderRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/recorderstatus" => "RecorderStatusRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/recorderlicensestatus" => "RecorderLicenseStatusRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/scheduledrecordingtimes" => "ScheduledRecordingTime", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationreports" => "PresentationReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presenterreports" => "PresenterReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/userreports" => "UserReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/catalogreports" => "CatalogReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/downloadreports" => "DownloadReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/authoringreports" => "AuthoringReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/players" => "PlayerRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/home" => "Home", 
                                            DEFAULT_ODATA_SERVICE_URL . "/showcasesettings" => "ShowcaseSettingsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/categories" => "CategoryRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/quotapolicies" => "QuotaPolicyRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/quotalevels" => "QuotaLevelRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/termsandconditions" => "TermsAndConditionsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/tags" => "TagRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationquestions" => "PresentationQuestionRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/playerlayoutoptions" => "PlayerLayoutOptionsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/emailinvitations" => "EmailInvitationRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/timedevents" => "TimedEventRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/distributioncontentserverendpoints" => "DistributionContentServerEndpointRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/storagecontentserverendpoints" => "StorageContentServerEndpointRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/contentservers" => "ContentServerRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presenters" => "PresenterRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/contentencodingsettings" => "ContentEncodingSettingRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/encodingsettingsfilters" => "EncodingSettingsFilterRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/encodingstreamdescriptions" => "EncodingStreamDescriptionRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/authorizationtickets" => "AuthorizationTicketRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/showcasechannels" => "ShowcaseChannelRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/recurrences" => "ScheduleRecurrenceRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationanalytics" => "PresentationAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationclientanalytics" => "PresentationClientAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationuseranalytics" => "PresentationUserAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationipanalytics" => "PresentationIPAddressAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/viewingtrendssegments" => "ViewingTrendsSegmentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/viewingsessions" => "ViewingSessionRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/activesessions" => "ActiveSessionRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/viewingplatformtotals" => "ViewingPlatformTotalRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/useranalytics" => "UserAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/userpresentationanalytics" => "UserPresentationAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/serveranalytics" => "ServerAnalyticsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationsources" => "PresentationSourceTotalRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/activeconnections" => "ActiveConnectionsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/activepresentations" => "ActivePresentationRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/userprofiles" => "UserProfileRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/mediasitetimezones" => "MediasiteTimeZoneRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/apikeys" => "ApiKeyDefaultRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/presentationthumbnailcontent" => "PresentationThumbnailRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/podcastcontent" => "PodcastContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/videopodcastcontent" => "VideoPodcastContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/captioncontent" => "CaptionContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/slidecontent" => "SlideContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/ocrcontent" => "OcrContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/ondemandcontent" => "OnDemandContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/broadcastcontent" => "BroadcastContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/audiopeakscontent" => "AudioPeaksRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/externalpublishingcontent" => "ExternalPublishingContentRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/externalpublishingprojects" => "ExternalPubPointRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/roles" => "RoleRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/resourcepermissions" => "ResourcePermissionsRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/ssorolecache" => "SsoRoleCacheRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/emailtemplates" => "EmailTemplateRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/registrations" => "RegistrationRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/resourceregistrations" => "ResourceRegistrationRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/videopodcastprojects" => "VideoPodcastProjectRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/modules" => "ModuleRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/customfielddefinitions" => "CustomFieldDefRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/customfieldvalues" => "CustomFieldValuesRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/reportrecurrences" => "ReportRecurrenceRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/externalpublishingpoints" => "ExternalPubPointRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/podcasts" => "PodcastRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/serverreports" => "ServerReportRepresentation", 
                                            DEFAULT_ODATA_SERVICE_URL . "/applicationtickets" => "ApplicationTicketRepresentation");
            $this->_entityType2Set = array(
                                            "folderrepresentation" => "Folders", 
                                            "jobrepresentation" => "Jobs", 
                                            "templaterepresentation" => "Templates", 
                                            "presentationcardrepresentation" => "Presentations", 
                                            "catalogrepresentation" => "Catalogs", 
                                            "catalogsettingsrepresentation" => "CatalogSettings", 
                                            "schedulerepresentation" => "Schedules", 
                                            "recorderrepresentation" => "Recorders", 
                                            "recorderstatusrepresentation" => "RecorderStatus", 
                                            "recorderlicensestatusrepresentation" => "RecorderLicenseStatus", 
                                            "scheduledrecordingtime" => "ScheduledRecordingTimes", 
                                            "presentationreportrepresentation" => "PresentationReports", 
                                            "presenterreportrepresentation" => "PresenterReports", 
                                            "userreportrepresentation" => "UserReports", 
                                            "catalogreportrepresentation" => "CatalogReports", 
                                            "downloadreportrepresentation" => "DownloadReports", 
                                            "authoringreportrepresentation" => "AuthoringReports", 
                                            "playerrepresentation" => "Players", 
                                            "home" => "Home", 
                                            "showcasesettingsrepresentation" => "ShowcaseSettings", 
                                            "categoryrepresentation" => "Categories", 
                                            "quotapolicyrepresentation" => "QuotaPolicies", 
                                            "quotalevelrepresentation" => "QuotaLevels", 
                                            "termsandconditionsrepresentation" => "TermsAndConditions", 
                                            "tagrepresentation" => "Tags", 
                                            "presentationquestionrepresentation" => "PresentationQuestions", 
                                            "playerlayoutoptionsrepresentation" => "PlayerLayoutOptions", 
                                            "emailinvitationrepresentation" => "EmailInvitations", 
                                            "timedeventrepresentation" => "TimedEvents", 
                                            "distributioncontentserverendpointrepresentation" => "DistributionContentServerEndpoints", 
                                            "storagecontentserverendpointrepresentation" => "StorageContentServerEndpoints", 
                                            "contentserverrepresentation" => "ContentServers", 
                                            "presenterrepresentation" => "Presenters", 
                                            "contentencodingsettingrepresentation" => "ContentEncodingSettings", 
                                            "encodingsettingsfilterrepresentation" => "EncodingSettingsFilters", 
                                            "encodingstreamdescriptionrepresentation" => "EncodingStreamDescriptions", 
                                            "authorizationticketrepresentation" => "AuthorizationTickets", 
                                            "showcasechannelrepresentation" => "ShowcaseChannels", 
                                            "schedulerecurrencerepresentation" => "Recurrences", 
                                            "presentationanalyticsrepresentation" => "PresentationAnalytics", 
                                            "presentationclientanalyticsrepresentation" => "PresentationClientAnalytics", 
                                            "presentationuseranalyticsrepresentation" => "PresentationUserAnalytics", 
                                            "presentationipaddressanalyticsrepresentation" => "PresentationIPAnalytics", 
                                            "viewingtrendssegmentrepresentation" => "ViewingTrendsSegments", 
                                            "viewingsessionrepresentation" => "ViewingSessions", 
                                            "activesessionrepresentation" => "ActiveSessions", 
                                            "viewingplatformtotalrepresentation" => "ViewingPlatformTotals", 
                                            "useranalyticsrepresentation" => "UserAnalytics", 
                                            "userpresentationanalyticsrepresentation" => "UserPresentationAnalytics", 
                                            "serveranalyticsrepresentation" => "ServerAnalytics", 
                                            "presentationsourcetotalrepresentation" => "PresentationSources", 
                                            "activeconnectionsrepresentation" => "ActiveConnections", 
                                            "activepresentationrepresentation" => "ActivePresentations", 
                                            "userprofilerepresentation" => "UserProfiles", 
                                            "mediasitetimezonerepresentation" => "MediasiteTimeZones", 
                                            "apikeydefaultrepresentation" => "ApiKeys", 
                                            "presentationthumbnailrepresentation" => "PresentationThumbnailContent", 
                                            "podcastcontentrepresentation" => "PodcastContent", 
                                            "videopodcastcontentrepresentation" => "VideoPodcastContent", 
                                            "captioncontentrepresentation" => "CaptionContent", 
                                            "slidecontentrepresentation" => "SlideContent", 
                                            "ocrcontentrepresentation" => "OcrContent", 
                                            "ondemandcontentrepresentation" => "OnDemandContent", 
                                            "broadcastcontentrepresentation" => "BroadcastContent", 
                                            "audiopeaksrepresentation" => "AudioPeaksContent", 
                                            "externalpublishingcontentrepresentation" => "ExternalPublishingContent", 
                                            "externalpubpointrepresentation" => "ExternalPublishingProjects", 
                                            "rolerepresentation" => "Roles", 
                                            "resourcepermissionsrepresentation" => "ResourcePermissions", 
                                            "ssorolecacherepresentation" => "SsoRoleCache", 
                                            "emailtemplaterepresentation" => "EmailTemplates", 
                                            "registrationrepresentation" => "Registrations", 
                                            "resourceregistrationrepresentation" => "ResourceRegistrations", 
                                            "videopodcastprojectrepresentation" => "VideoPodcastProjects", 
                                            "modulerepresentation" => "Modules", 
                                            "customfielddefrepresentation" => "CustomFieldDefinitions", 
                                            "customfieldvaluesrepresentation" => "CustomFieldValues", 
                                            "reportrecurrencerepresentation" => "ReportRecurrences", 
                                            "externalpubpointrepresentation" => "ExternalPublishingPoints", 
                                            "podcastrepresentation" => "Podcasts", 
                                            "serverreportrepresentation" => "ServerReports", 
                                            "applicationticketrepresentation" => "ApplicationTickets");

            $this->_association = array(
                                         "SonicFoundry_Mediasite_WebApi_Model_FolderRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PresentationsPartner" => array(
                                                                         "Presentations" => "*" ,
                                                                         "PresentationsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Player_SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_PlayerPartner" => array(
                                                                         "Player" => "0..1" ,
                                                                         "PlayerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Presenters_SonicFoundry_Mediasite_WebApi_Model_PresenterRepresentation_PresentersPartner" => array(
                                                                         "Presenters" => "*" ,
                                                                         "PresentersPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Tags_SonicFoundry_Mediasite_WebApi_Model_TagRepresentation_TagsPartner" => array(
                                                                         "Tags" => "*" ,
                                                                         "TagsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_SlideContent_SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_SlideContentPartner" => array(
                                                                         "SlideContent" => "*" ,
                                                                         "SlideContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_OnDemandContent_SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_OnDemandContentPartner" => array(
                                                                         "OnDemandContent" => "*" ,
                                                                         "OnDemandContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_BroadcastContent_SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_BroadcastContentPartner" => array(
                                                                         "BroadcastContent" => "*" ,
                                                                         "BroadcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_PodcastContent_SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_PodcastContentPartner" => array(
                                                                         "PodcastContent" => "*" ,
                                                                         "PodcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_OcrContent_SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_OcrContentPartner" => array(
                                                                         "OcrContent" => "*" ,
                                                                         "OcrContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_CaptionContent_SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_CaptionContentPartner" => array(
                                                                         "CaptionContent" => "*" ,
                                                                         "CaptionContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_VideoPodcastContent_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastContentPartner" => array(
                                                                         "VideoPodcastContent" => "*" ,
                                                                         "VideoPodcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_ExternalPublishingContent_SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingContentPartner" => array(
                                                                         "ExternalPublishingContent" => "*" ,
                                                                         "ExternalPublishingContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner" => array(
                                                                         "Modules" => "*" ,
                                                                         "ModulesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_RelatedPresentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_RelatedPresentationsPartner" => array(
                                                                         "RelatedPresentations" => "*" ,
                                                                         "RelatedPresentationsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Tags_SonicFoundry_Mediasite_WebApi_Model_TagRepresentation_TagsPartner" => array(
                                                                         "Tags" => "*" ,
                                                                         "TagsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_TimedEvents_SonicFoundry_Mediasite_WebApi_Model_TimedEventRepresentation_TimedEventsPartner" => array(
                                                                         "TimedEvents" => "*" ,
                                                                         "TimedEventsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Presenters_SonicFoundry_Mediasite_WebApi_Model_PresenterRepresentation_PresentersPartner" => array(
                                                                         "Presenters" => "*" ,
                                                                         "PresentersPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Questions_SonicFoundry_Mediasite_WebApi_Model_PresentationQuestionRepresentation_QuestionsPartner" => array(
                                                                         "Questions" => "*" ,
                                                                         "QuestionsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_ThumbnailContent_SonicFoundry_Mediasite_WebApi_Model_PresentationThumbnailRepresentation_ThumbnailContentPartner" => array(
                                                                         "ThumbnailContent" => "*" ,
                                                                         "ThumbnailContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_SlideContent_SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_SlideContentPartner" => array(
                                                                         "SlideContent" => "*" ,
                                                                         "SlideContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_OnDemandContent_SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_OnDemandContentPartner" => array(
                                                                         "OnDemandContent" => "*" ,
                                                                         "OnDemandContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_BroadcastContent_SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_BroadcastContentPartner" => array(
                                                                         "BroadcastContent" => "*" ,
                                                                         "BroadcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PodcastContent_SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_PodcastContentPartner" => array(
                                                                         "PodcastContent" => "*" ,
                                                                         "PodcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_OcrContent_SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_OcrContentPartner" => array(
                                                                         "OcrContent" => "*" ,
                                                                         "OcrContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_CaptionContent_SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_CaptionContentPartner" => array(
                                                                         "CaptionContent" => "*" ,
                                                                         "CaptionContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_AudioPeaksContent_SonicFoundry_Mediasite_WebApi_Model_AudioPeaksRepresentation_AudioPeaksContentPartner" => array(
                                                                         "AudioPeaksContent" => "*" ,
                                                                         "AudioPeaksContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_LayoutOptions_SonicFoundry_Mediasite_WebApi_Model_PlayerLayoutOptionsRepresentation_LayoutOptionsPartner" => array(
                                                                         "LayoutOptions" => "0..1" ,
                                                                         "LayoutOptionsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_EmailInvitation_SonicFoundry_Mediasite_WebApi_Model_EmailInvitationRepresentation_EmailInvitationPartner" => array(
                                                                         "EmailInvitation" => "0..1" ,
                                                                         "EmailInvitationPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_ShowcaseChannels_SonicFoundry_Mediasite_WebApi_Model_ShowcaseChannelRepresentation_ShowcaseChannelsPartner" => array(
                                                                         "ShowcaseChannels" => "*" ,
                                                                         "ShowcaseChannelsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_VideoPodcastContent_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastContentPartner" => array(
                                                                         "VideoPodcastContent" => "*" ,
                                                                         "VideoPodcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner" => array(
                                                                         "Modules" => "*" ,
                                                                         "ModulesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_Categories_SonicFoundry_Mediasite_WebApi_Model_CategoryRepresentation_CategoriesPartner" => array(
                                                                         "Categories" => "*" ,
                                                                         "CategoriesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_ExternalPublishingContent_SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingContentPartner" => array(
                                                                         "ExternalPublishingContent" => "*" ,
                                                                         "ExternalPublishingContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_CatalogRepresentation_Settings_SonicFoundry_Mediasite_WebApi_Model_CatalogSettingsRepresentation_SettingsPartner" => array(
                                                                         "Settings" => "0..1" ,
                                                                         "SettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_CatalogRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner" => array(
                                                                         "Modules" => "*" ,
                                                                         "ModulesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Presenters_SonicFoundry_Mediasite_WebApi_Model_PresenterRepresentation_PresentersPartner" => array(
                                                                         "Presenters" => "*" ,
                                                                         "PresentersPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Recurrences_SonicFoundry_Mediasite_WebApi_Model_ScheduleRecurrenceRepresentation_RecurrencesPartner" => array(
                                                                         "Recurrences" => "*" ,
                                                                         "RecurrencesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Tags_SonicFoundry_Mediasite_WebApi_Model_TagRepresentation_TagsPartner" => array(
                                                                         "Tags" => "*" ,
                                                                         "TagsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Recorder_SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_RecorderPartner" => array(
                                                                         "Recorder" => "0..1" ,
                                                                         "RecorderPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Player_SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_PlayerPartner" => array(
                                                                         "Player" => "0..1" ,
                                                                         "PlayerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Folder_SonicFoundry_Mediasite_WebApi_Model_FolderRepresentation_FolderPartner" => array(
                                                                         "Folder" => "0..1" ,
                                                                         "FolderPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_SlideContent_SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_SlideContentPartner" => array(
                                                                         "SlideContent" => "*" ,
                                                                         "SlideContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_OnDemandContent_SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_OnDemandContentPartner" => array(
                                                                         "OnDemandContent" => "*" ,
                                                                         "OnDemandContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_BroadcastContent_SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_BroadcastContentPartner" => array(
                                                                         "BroadcastContent" => "*" ,
                                                                         "BroadcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_PodcastContent_SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_PodcastContentPartner" => array(
                                                                         "PodcastContent" => "*" ,
                                                                         "PodcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_OcrContent_SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_OcrContentPartner" => array(
                                                                         "OcrContent" => "*" ,
                                                                         "OcrContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_CaptionContent_SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_CaptionContentPartner" => array(
                                                                         "CaptionContent" => "*" ,
                                                                         "CaptionContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_VideoPodcastContent_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastContentPartner" => array(
                                                                         "VideoPodcastContent" => "*" ,
                                                                         "VideoPodcastContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_ExternalPublishingContent_SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingContentPartner" => array(
                                                                         "ExternalPublishingContent" => "*" ,
                                                                         "ExternalPublishingContentPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_Modules_SonicFoundry_Mediasite_WebApi_Model_ModuleRepresentation_ModulesPartner" => array(
                                                                         "Modules" => "*" ,
                                                                         "ModulesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_LicenseStatus_SonicFoundry_Mediasite_WebApi_Model_RecorderLicenseStatusRepresentation_LicenseStatusPartner" => array(
                                                                         "LicenseStatus" => "0..1" ,
                                                                         "LicenseStatusPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_Status_SonicFoundry_Mediasite_WebApi_Model_RecorderStatusRepresentation_StatusPartner" => array(
                                                                         "Status" => "0..1" ,
                                                                         "StatusPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_RecorderRepresentation_ScheduledRecordingTimes_SonicFoundry_Mediasite_WebApi_Model_ScheduledRecordingTime_ScheduledRecordingTimesPartner" => array(
                                                                         "ScheduledRecordingTimes" => "*" ,
                                                                         "ScheduledRecordingTimesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner" => array(
                                                                         "ReportRecurrence" => "0..1" ,
                                                                         "ReportRecurrencePartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresenterReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner" => array(
                                                                         "ReportRecurrence" => "0..1" ,
                                                                         "ReportRecurrencePartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner" => array(
                                                                         "ReportRecurrence" => "0..1" ,
                                                                         "ReportRecurrencePartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_CatalogReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner" => array(
                                                                         "ReportRecurrence" => "0..1" ,
                                                                         "ReportRecurrencePartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_DownloadReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner" => array(
                                                                         "ReportRecurrence" => "0..1" ,
                                                                         "ReportRecurrencePartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_AuthoringReportRepresentation_ReportRecurrence_SonicFoundry_Mediasite_WebApi_Model_ReportRecurrenceRepresentation_ReportRecurrencePartner" => array(
                                                                         "ReportRecurrence" => "0..1" ,
                                                                         "ReportRecurrencePartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PresentationsPartner" => array(
                                                                         "Presentations" => "*" ,
                                                                         "PresentationsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_Schedules_SonicFoundry_Mediasite_WebApi_Model_ScheduleRepresentation_SchedulesPartner" => array(
                                                                         "Schedules" => "*" ,
                                                                         "SchedulesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PlayerRepresentation_Templates_SonicFoundry_Mediasite_WebApi_Model_TemplateRepresentation_TemplatesPartner" => array(
                                                                         "Templates" => "*" ,
                                                                         "TemplatesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_Home_NowPlaying_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_NowPlayingPartner" => array(
                                                                         "NowPlaying" => "*" ,
                                                                         "NowPlayingPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_Home_RecentlyViewed_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_RecentlyViewedPartner" => array(
                                                                         "RecentlyViewed" => "*" ,
                                                                         "RecentlyViewedPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_StorageEndpoint_SonicFoundry_Mediasite_WebApi_Model_StorageContentServerEndpointRepresentation_StorageEndpointPartner" => array(
                                                                         "StorageEndpoint" => "0..1" ,
                                                                         "StorageEndpointPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_DistributionEndpoint_SonicFoundry_Mediasite_WebApi_Model_DistributionContentServerEndpointRepresentation_DistributionEndpointPartner" => array(
                                                                         "DistributionEndpoint" => "0..1" ,
                                                                         "DistributionEndpointPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_EncodingSettingsFilters_SonicFoundry_Mediasite_WebApi_Model_EncodingSettingsFilterRepresentation_EncodingSettingsFiltersPartner" => array(
                                                                         "EncodingSettingsFilters" => "*" ,
                                                                         "EncodingSettingsFiltersPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_EncodingStreamDescriptions_SonicFoundry_Mediasite_WebApi_Model_EncodingStreamDescriptionRepresentation_EncodingStreamDescriptionsPartner" => array(
                                                                         "EncodingStreamDescriptions" => "*" ,
                                                                         "EncodingStreamDescriptionsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ShowcaseChannelRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_PresentationDefaultRepresentation_PresentationsPartner" => array(
                                                                         "Presentations" => "*" ,
                                                                         "PresentationsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_Presentation_SonicFoundry_Mediasite_WebApi_Model_PresentationFullRepresentation_PresentationPartner" => array(
                                                                         "Presentation" => "0..1" ,
                                                                         "PresentationPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_Users_SonicFoundry_Mediasite_WebApi_Model_PresentationUserAnalyticsRepresentation_UsersPartner" => array(
                                                                         "Users" => "*" ,
                                                                         "UsersPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_IPAddresses_SonicFoundry_Mediasite_WebApi_Model_PresentationIPAddressAnalyticsRepresentation_IPAddressesPartner" => array(
                                                                         "IPAddresses" => "*" ,
                                                                         "IPAddressesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_ViewingTrends_SonicFoundry_Mediasite_WebApi_Model_ViewingTrendsSegmentRepresentation_ViewingTrendsPartner" => array(
                                                                         "ViewingTrends" => "*" ,
                                                                         "ViewingTrendsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_ViewingSessions_SonicFoundry_Mediasite_WebApi_Model_ViewingSessionRepresentation_ViewingSessionsPartner" => array(
                                                                         "ViewingSessions" => "*" ,
                                                                         "ViewingSessionsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_BrowserTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_BrowserTotalsPartner" => array(
                                                                         "BrowserTotals" => "*" ,
                                                                         "BrowserTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_MediaPluginTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_MediaPluginTotalsPartner" => array(
                                                                         "MediaPluginTotals" => "*" ,
                                                                         "MediaPluginTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationAnalyticsRepresentation_SystemTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_SystemTotalsPartner" => array(
                                                                         "SystemTotals" => "*" ,
                                                                         "SystemTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_Presentations_SonicFoundry_Mediasite_WebApi_Model_UserPresentationAnalyticsRepresentation_PresentationsPartner" => array(
                                                                         "Presentations" => "*" ,
                                                                         "PresentationsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_ViewingSessions_SonicFoundry_Mediasite_WebApi_Model_ViewingSessionRepresentation_ViewingSessionsPartner" => array(
                                                                         "ViewingSessions" => "*" ,
                                                                         "ViewingSessionsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_BrowserTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_BrowserTotalsPartner" => array(
                                                                         "BrowserTotals" => "*" ,
                                                                         "BrowserTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_MediaPluginTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_MediaPluginTotalsPartner" => array(
                                                                         "MediaPluginTotals" => "*" ,
                                                                         "MediaPluginTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserAnalyticsRepresentation_SystemTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_SystemTotalsPartner" => array(
                                                                         "SystemTotals" => "*" ,
                                                                         "SystemTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_PresentationSources_SonicFoundry_Mediasite_WebApi_Model_PresentationSourceTotalRepresentation_PresentationSourcesPartner" => array(
                                                                         "PresentationSources" => "*" ,
                                                                         "PresentationSourcesPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_BrowserTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_BrowserTotalsPartner" => array(
                                                                         "BrowserTotals" => "*" ,
                                                                         "BrowserTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_MediaPluginTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_MediaPluginTotalsPartner" => array(
                                                                         "MediaPluginTotals" => "*" ,
                                                                         "MediaPluginTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ServerAnalyticsRepresentation_SystemTotals_SonicFoundry_Mediasite_WebApi_Model_ViewingPlatformTotalRepresentation_SystemTotalsPartner" => array(
                                                                         "SystemTotals" => "*" ,
                                                                         "SystemTotalsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ActivePresentationRepresentation_ActiveSessions_SonicFoundry_Mediasite_WebApi_Model_ActiveSessionRepresentation_ActiveSessionsPartner" => array(
                                                                         "ActiveSessions" => "*" ,
                                                                         "ActiveSessionsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_UserProfileRepresentation_QuotaPolicy_SonicFoundry_Mediasite_WebApi_Model_QuotaPolicyRepresentation_QuotaPolicyPartner" => array(
                                                                         "QuotaPolicy" => "0..1" ,
                                                                         "QuotaPolicyPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationThumbnailRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PresentationThumbnailRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_PodcastContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_VideoPodcastProject_SonicFoundry_Mediasite_WebApi_Model_VideoPodcastProjectRepresentation_VideoPodcastProjectPartner" => array(
                                                                         "VideoPodcastProject" => "0..1" ,
                                                                         "VideoPodcastProjectPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_VideoPodcastContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_CaptionContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_SlideContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_OcrContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_OnDemandContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_BroadcastContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_AudioPeaksRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_AudioPeaksRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingPoint_SonicFoundry_Mediasite_WebApi_Model_ExternalPubPointRepresentation_ExternalPublishingPointPartner" => array(
                                                                         "ExternalPublishingPoint" => "1" ,
                                                                         "ExternalPublishingPointPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ExternalPublishingProject_SonicFoundry_Mediasite_WebApi_Model_ExternalPubPointRepresentation_ExternalPublishingProjectPartner" => array(
                                                                         "ExternalPublishingProject" => "1" ,
                                                                         "ExternalPublishingProjectPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ContentServer_SonicFoundry_Mediasite_WebApi_Model_ContentServerRepresentation_ContentServerPartner" => array(
                                                                         "ContentServer" => "0..1" ,
                                                                         "ContentServerPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_ExternalPublishingContentRepresentation_ContentEncodingSettings_SonicFoundry_Mediasite_WebApi_Model_ContentEncodingSettingRepresentation_ContentEncodingSettingsPartner" => array(
                                                                         "ContentEncodingSettings" => "0..1" ,
                                                                         "ContentEncodingSettingsPartner" => "0..1" ), 
                                         "SonicFoundry_Mediasite_WebApi_Model_RegistrationRepresentation_ResourceRegistrations_SonicFoundry_Mediasite_WebApi_Model_ResourceRegistrationRepresentation_ResourceRegistrationsPartner" => array(
                                                                         "ResourceRegistrations" => "*" ,
                                                                         "ResourceRegistrationsPartner" => "0..1" ));

    
            $this->_Folders = new DataServiceQuery('/'.'Folders', $this);
            $this->_Jobs = new DataServiceQuery('/'.'Jobs', $this);
            $this->_Templates = new DataServiceQuery('/'.'Templates', $this);
            $this->_Presentations = new DataServiceQuery('/'.'Presentations', $this);
            $this->_Catalogs = new DataServiceQuery('/'.'Catalogs', $this);
            $this->_CatalogSettings = new DataServiceQuery('/'.'CatalogSettings', $this);
            $this->_Schedules = new DataServiceQuery('/'.'Schedules', $this);
            $this->_Recorders = new DataServiceQuery('/'.'Recorders', $this);
            $this->_RecorderStatus = new DataServiceQuery('/'.'RecorderStatus', $this);
            $this->_RecorderLicenseStatus = new DataServiceQuery('/'.'RecorderLicenseStatus', $this);
            $this->_ScheduledRecordingTimes = new DataServiceQuery('/'.'ScheduledRecordingTimes', $this);
            $this->_PresentationReports = new DataServiceQuery('/'.'PresentationReports', $this);
            $this->_PresenterReports = new DataServiceQuery('/'.'PresenterReports', $this);
            $this->_UserReports = new DataServiceQuery('/'.'UserReports', $this);
            $this->_CatalogReports = new DataServiceQuery('/'.'CatalogReports', $this);
            $this->_DownloadReports = new DataServiceQuery('/'.'DownloadReports', $this);
            $this->_AuthoringReports = new DataServiceQuery('/'.'AuthoringReports', $this);
            $this->_Players = new DataServiceQuery('/'.'Players', $this);
            $this->_Home = new DataServiceQuery('/'.'Home', $this);
            $this->_ShowcaseSettings = new DataServiceQuery('/'.'ShowcaseSettings', $this);
            $this->_Categories = new DataServiceQuery('/'.'Categories', $this);
            $this->_QuotaPolicies = new DataServiceQuery('/'.'QuotaPolicies', $this);
            $this->_QuotaLevels = new DataServiceQuery('/'.'QuotaLevels', $this);
            $this->_TermsAndConditions = new DataServiceQuery('/'.'TermsAndConditions', $this);
            $this->_Tags = new DataServiceQuery('/'.'Tags', $this);
            $this->_PresentationQuestions = new DataServiceQuery('/'.'PresentationQuestions', $this);
            $this->_PlayerLayoutOptions = new DataServiceQuery('/'.'PlayerLayoutOptions', $this);
            $this->_EmailInvitations = new DataServiceQuery('/'.'EmailInvitations', $this);
            $this->_TimedEvents = new DataServiceQuery('/'.'TimedEvents', $this);
            $this->_DistributionContentServerEndpoints = new DataServiceQuery('/'.'DistributionContentServerEndpoints', $this);
            $this->_StorageContentServerEndpoints = new DataServiceQuery('/'.'StorageContentServerEndpoints', $this);
            $this->_ContentServers = new DataServiceQuery('/'.'ContentServers', $this);
            $this->_Presenters = new DataServiceQuery('/'.'Presenters', $this);
            $this->_ContentEncodingSettings = new DataServiceQuery('/'.'ContentEncodingSettings', $this);
            $this->_EncodingSettingsFilters = new DataServiceQuery('/'.'EncodingSettingsFilters', $this);
            $this->_EncodingStreamDescriptions = new DataServiceQuery('/'.'EncodingStreamDescriptions', $this);
            $this->_AuthorizationTickets = new DataServiceQuery('/'.'AuthorizationTickets', $this);
            $this->_ShowcaseChannels = new DataServiceQuery('/'.'ShowcaseChannels', $this);
            $this->_Recurrences = new DataServiceQuery('/'.'Recurrences', $this);
            $this->_PresentationAnalytics = new DataServiceQuery('/'.'PresentationAnalytics', $this);
            $this->_PresentationClientAnalytics = new DataServiceQuery('/'.'PresentationClientAnalytics', $this);
            $this->_PresentationUserAnalytics = new DataServiceQuery('/'.'PresentationUserAnalytics', $this);
            $this->_PresentationIPAnalytics = new DataServiceQuery('/'.'PresentationIPAnalytics', $this);
            $this->_ViewingTrendsSegments = new DataServiceQuery('/'.'ViewingTrendsSegments', $this);
            $this->_ViewingSessions = new DataServiceQuery('/'.'ViewingSessions', $this);
            $this->_ActiveSessions = new DataServiceQuery('/'.'ActiveSessions', $this);
            $this->_ViewingPlatformTotals = new DataServiceQuery('/'.'ViewingPlatformTotals', $this);
            $this->_UserAnalytics = new DataServiceQuery('/'.'UserAnalytics', $this);
            $this->_UserPresentationAnalytics = new DataServiceQuery('/'.'UserPresentationAnalytics', $this);
            $this->_ServerAnalytics = new DataServiceQuery('/'.'ServerAnalytics', $this);
            $this->_PresentationSources = new DataServiceQuery('/'.'PresentationSources', $this);
            $this->_ActiveConnections = new DataServiceQuery('/'.'ActiveConnections', $this);
            $this->_ActivePresentations = new DataServiceQuery('/'.'ActivePresentations', $this);
            $this->_UserProfiles = new DataServiceQuery('/'.'UserProfiles', $this);
            $this->_MediasiteTimeZones = new DataServiceQuery('/'.'MediasiteTimeZones', $this);
            $this->_ApiKeys = new DataServiceQuery('/'.'ApiKeys', $this);
            $this->_PresentationThumbnailContent = new DataServiceQuery('/'.'PresentationThumbnailContent', $this);
            $this->_PodcastContent = new DataServiceQuery('/'.'PodcastContent', $this);
            $this->_VideoPodcastContent = new DataServiceQuery('/'.'VideoPodcastContent', $this);
            $this->_CaptionContent = new DataServiceQuery('/'.'CaptionContent', $this);
            $this->_SlideContent = new DataServiceQuery('/'.'SlideContent', $this);
            $this->_OcrContent = new DataServiceQuery('/'.'OcrContent', $this);
            $this->_OnDemandContent = new DataServiceQuery('/'.'OnDemandContent', $this);
            $this->_BroadcastContent = new DataServiceQuery('/'.'BroadcastContent', $this);
            $this->_AudioPeaksContent = new DataServiceQuery('/'.'AudioPeaksContent', $this);
            $this->_ExternalPublishingContent = new DataServiceQuery('/'.'ExternalPublishingContent', $this);
            $this->_ExternalPublishingProjects = new DataServiceQuery('/'.'ExternalPublishingProjects', $this);
            $this->_Roles = new DataServiceQuery('/'.'Roles', $this);
            $this->_ResourcePermissions = new DataServiceQuery('/'.'ResourcePermissions', $this);
            $this->_SsoRoleCache = new DataServiceQuery('/'.'SsoRoleCache', $this);
            $this->_EmailTemplates = new DataServiceQuery('/'.'EmailTemplates', $this);
            $this->_Registrations = new DataServiceQuery('/'.'Registrations', $this);
            $this->_ResourceRegistrations = new DataServiceQuery('/'.'ResourceRegistrations', $this);
            $this->_VideoPodcastProjects = new DataServiceQuery('/'.'VideoPodcastProjects', $this);
            $this->_Modules = new DataServiceQuery('/'.'Modules', $this);
            $this->_CustomFieldDefinitions = new DataServiceQuery('/'.'CustomFieldDefinitions', $this);
            $this->_CustomFieldValues = new DataServiceQuery('/'.'CustomFieldValues', $this);
            $this->_ReportRecurrences = new DataServiceQuery('/'.'ReportRecurrences', $this);
            $this->_ExternalPublishingPoints = new DataServiceQuery('/'.'ExternalPublishingPoints', $this);
            $this->_Podcasts = new DataServiceQuery('/'.'Podcasts', $this);
            $this->_ServerReports = new DataServiceQuery('/'.'ServerReports', $this);
            $this->_ApplicationTickets = new DataServiceQuery('/'.'ApplicationTickets', $this);

        }

    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Folders
         * @return DataServiceQuery
         */
        public function Folders()
        {
            $this->_Folders->ClearAllOptions();
            return $this->_Folders;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Jobs
         * @return DataServiceQuery
         */
        public function Jobs()
        {
            $this->_Jobs->ClearAllOptions();
            return $this->_Jobs;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Templates
         * @return DataServiceQuery
         */
        public function Templates()
        {
            $this->_Templates->ClearAllOptions();
            return $this->_Templates;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Presentations
         * @return DataServiceQuery
         */
        public function Presentations()
        {
            $this->_Presentations->ClearAllOptions();
            return $this->_Presentations;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Catalogs
         * @return DataServiceQuery
         */
        public function Catalogs()
        {
            $this->_Catalogs->ClearAllOptions();
            return $this->_Catalogs;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset CatalogSettings
         * @return DataServiceQuery
         */
        public function CatalogSettings()
        {
            $this->_CatalogSettings->ClearAllOptions();
            return $this->_CatalogSettings;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Schedules
         * @return DataServiceQuery
         */
        public function Schedules()
        {
            $this->_Schedules->ClearAllOptions();
            return $this->_Schedules;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Recorders
         * @return DataServiceQuery
         */
        public function Recorders()
        {
            $this->_Recorders->ClearAllOptions();
            return $this->_Recorders;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset RecorderStatus
         * @return DataServiceQuery
         */
        public function RecorderStatus()
        {
            $this->_RecorderStatus->ClearAllOptions();
            return $this->_RecorderStatus;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset RecorderLicenseStatus
         * @return DataServiceQuery
         */
        public function RecorderLicenseStatus()
        {
            $this->_RecorderLicenseStatus->ClearAllOptions();
            return $this->_RecorderLicenseStatus;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ScheduledRecordingTimes
         * @return DataServiceQuery
         */
        public function ScheduledRecordingTimes()
        {
            $this->_ScheduledRecordingTimes->ClearAllOptions();
            return $this->_ScheduledRecordingTimes;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationReports
         * @return DataServiceQuery
         */
        public function PresentationReports()
        {
            $this->_PresentationReports->ClearAllOptions();
            return $this->_PresentationReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresenterReports
         * @return DataServiceQuery
         */
        public function PresenterReports()
        {
            $this->_PresenterReports->ClearAllOptions();
            return $this->_PresenterReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset UserReports
         * @return DataServiceQuery
         */
        public function UserReports()
        {
            $this->_UserReports->ClearAllOptions();
            return $this->_UserReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset CatalogReports
         * @return DataServiceQuery
         */
        public function CatalogReports()
        {
            $this->_CatalogReports->ClearAllOptions();
            return $this->_CatalogReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset DownloadReports
         * @return DataServiceQuery
         */
        public function DownloadReports()
        {
            $this->_DownloadReports->ClearAllOptions();
            return $this->_DownloadReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset AuthoringReports
         * @return DataServiceQuery
         */
        public function AuthoringReports()
        {
            $this->_AuthoringReports->ClearAllOptions();
            return $this->_AuthoringReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Players
         * @return DataServiceQuery
         */
        public function Players()
        {
            $this->_Players->ClearAllOptions();
            return $this->_Players;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Home
         * @return DataServiceQuery
         */
        public function Home()
        {
            $this->_Home->ClearAllOptions();
            return $this->_Home;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ShowcaseSettings
         * @return DataServiceQuery
         */
        public function ShowcaseSettings()
        {
            $this->_ShowcaseSettings->ClearAllOptions();
            return $this->_ShowcaseSettings;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Categories
         * @return DataServiceQuery
         */
        public function Categories()
        {
            $this->_Categories->ClearAllOptions();
            return $this->_Categories;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset QuotaPolicies
         * @return DataServiceQuery
         */
        public function QuotaPolicies()
        {
            $this->_QuotaPolicies->ClearAllOptions();
            return $this->_QuotaPolicies;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset QuotaLevels
         * @return DataServiceQuery
         */
        public function QuotaLevels()
        {
            $this->_QuotaLevels->ClearAllOptions();
            return $this->_QuotaLevels;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset TermsAndConditions
         * @return DataServiceQuery
         */
        public function TermsAndConditions()
        {
            $this->_TermsAndConditions->ClearAllOptions();
            return $this->_TermsAndConditions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Tags
         * @return DataServiceQuery
         */
        public function Tags()
        {
            $this->_Tags->ClearAllOptions();
            return $this->_Tags;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationQuestions
         * @return DataServiceQuery
         */
        public function PresentationQuestions()
        {
            $this->_PresentationQuestions->ClearAllOptions();
            return $this->_PresentationQuestions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PlayerLayoutOptions
         * @return DataServiceQuery
         */
        public function PlayerLayoutOptions()
        {
            $this->_PlayerLayoutOptions->ClearAllOptions();
            return $this->_PlayerLayoutOptions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset EmailInvitations
         * @return DataServiceQuery
         */
        public function EmailInvitations()
        {
            $this->_EmailInvitations->ClearAllOptions();
            return $this->_EmailInvitations;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset TimedEvents
         * @return DataServiceQuery
         */
        public function TimedEvents()
        {
            $this->_TimedEvents->ClearAllOptions();
            return $this->_TimedEvents;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset DistributionContentServerEndpoints
         * @return DataServiceQuery
         */
        public function DistributionContentServerEndpoints()
        {
            $this->_DistributionContentServerEndpoints->ClearAllOptions();
            return $this->_DistributionContentServerEndpoints;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset StorageContentServerEndpoints
         * @return DataServiceQuery
         */
        public function StorageContentServerEndpoints()
        {
            $this->_StorageContentServerEndpoints->ClearAllOptions();
            return $this->_StorageContentServerEndpoints;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ContentServers
         * @return DataServiceQuery
         */
        public function ContentServers()
        {
            $this->_ContentServers->ClearAllOptions();
            return $this->_ContentServers;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Presenters
         * @return DataServiceQuery
         */
        public function Presenters()
        {
            $this->_Presenters->ClearAllOptions();
            return $this->_Presenters;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ContentEncodingSettings
         * @return DataServiceQuery
         */
        public function ContentEncodingSettings()
        {
            $this->_ContentEncodingSettings->ClearAllOptions();
            return $this->_ContentEncodingSettings;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset EncodingSettingsFilters
         * @return DataServiceQuery
         */
        public function EncodingSettingsFilters()
        {
            $this->_EncodingSettingsFilters->ClearAllOptions();
            return $this->_EncodingSettingsFilters;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset EncodingStreamDescriptions
         * @return DataServiceQuery
         */
        public function EncodingStreamDescriptions()
        {
            $this->_EncodingStreamDescriptions->ClearAllOptions();
            return $this->_EncodingStreamDescriptions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset AuthorizationTickets
         * @return DataServiceQuery
         */
        public function AuthorizationTickets()
        {
            $this->_AuthorizationTickets->ClearAllOptions();
            return $this->_AuthorizationTickets;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ShowcaseChannels
         * @return DataServiceQuery
         */
        public function ShowcaseChannels()
        {
            $this->_ShowcaseChannels->ClearAllOptions();
            return $this->_ShowcaseChannels;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Recurrences
         * @return DataServiceQuery
         */
        public function Recurrences()
        {
            $this->_Recurrences->ClearAllOptions();
            return $this->_Recurrences;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationAnalytics
         * @return DataServiceQuery
         */
        public function PresentationAnalytics()
        {
            $this->_PresentationAnalytics->ClearAllOptions();
            return $this->_PresentationAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationClientAnalytics
         * @return DataServiceQuery
         */
        public function PresentationClientAnalytics()
        {
            $this->_PresentationClientAnalytics->ClearAllOptions();
            return $this->_PresentationClientAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationUserAnalytics
         * @return DataServiceQuery
         */
        public function PresentationUserAnalytics()
        {
            $this->_PresentationUserAnalytics->ClearAllOptions();
            return $this->_PresentationUserAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationIPAnalytics
         * @return DataServiceQuery
         */
        public function PresentationIPAnalytics()
        {
            $this->_PresentationIPAnalytics->ClearAllOptions();
            return $this->_PresentationIPAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ViewingTrendsSegments
         * @return DataServiceQuery
         */
        public function ViewingTrendsSegments()
        {
            $this->_ViewingTrendsSegments->ClearAllOptions();
            return $this->_ViewingTrendsSegments;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ViewingSessions
         * @return DataServiceQuery
         */
        public function ViewingSessions()
        {
            $this->_ViewingSessions->ClearAllOptions();
            return $this->_ViewingSessions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ActiveSessions
         * @return DataServiceQuery
         */
        public function ActiveSessions()
        {
            $this->_ActiveSessions->ClearAllOptions();
            return $this->_ActiveSessions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ViewingPlatformTotals
         * @return DataServiceQuery
         */
        public function ViewingPlatformTotals()
        {
            $this->_ViewingPlatformTotals->ClearAllOptions();
            return $this->_ViewingPlatformTotals;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset UserAnalytics
         * @return DataServiceQuery
         */
        public function UserAnalytics()
        {
            $this->_UserAnalytics->ClearAllOptions();
            return $this->_UserAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset UserPresentationAnalytics
         * @return DataServiceQuery
         */
        public function UserPresentationAnalytics()
        {
            $this->_UserPresentationAnalytics->ClearAllOptions();
            return $this->_UserPresentationAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ServerAnalytics
         * @return DataServiceQuery
         */
        public function ServerAnalytics()
        {
            $this->_ServerAnalytics->ClearAllOptions();
            return $this->_ServerAnalytics;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationSources
         * @return DataServiceQuery
         */
        public function PresentationSources()
        {
            $this->_PresentationSources->ClearAllOptions();
            return $this->_PresentationSources;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ActiveConnections
         * @return DataServiceQuery
         */
        public function ActiveConnections()
        {
            $this->_ActiveConnections->ClearAllOptions();
            return $this->_ActiveConnections;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ActivePresentations
         * @return DataServiceQuery
         */
        public function ActivePresentations()
        {
            $this->_ActivePresentations->ClearAllOptions();
            return $this->_ActivePresentations;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset UserProfiles
         * @return DataServiceQuery
         */
        public function UserProfiles()
        {
            $this->_UserProfiles->ClearAllOptions();
            return $this->_UserProfiles;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset MediasiteTimeZones
         * @return DataServiceQuery
         */
        public function MediasiteTimeZones()
        {
            $this->_MediasiteTimeZones->ClearAllOptions();
            return $this->_MediasiteTimeZones;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ApiKeys
         * @return DataServiceQuery
         */
        public function ApiKeys()
        {
            $this->_ApiKeys->ClearAllOptions();
            return $this->_ApiKeys;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PresentationThumbnailContent
         * @return DataServiceQuery
         */
        public function PresentationThumbnailContent()
        {
            $this->_PresentationThumbnailContent->ClearAllOptions();
            return $this->_PresentationThumbnailContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset PodcastContent
         * @return DataServiceQuery
         */
        public function PodcastContent()
        {
            $this->_PodcastContent->ClearAllOptions();
            return $this->_PodcastContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset VideoPodcastContent
         * @return DataServiceQuery
         */
        public function VideoPodcastContent()
        {
            $this->_VideoPodcastContent->ClearAllOptions();
            return $this->_VideoPodcastContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset CaptionContent
         * @return DataServiceQuery
         */
        public function CaptionContent()
        {
            $this->_CaptionContent->ClearAllOptions();
            return $this->_CaptionContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset SlideContent
         * @return DataServiceQuery
         */
        public function SlideContent()
        {
            $this->_SlideContent->ClearAllOptions();
            return $this->_SlideContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset OcrContent
         * @return DataServiceQuery
         */
        public function OcrContent()
        {
            $this->_OcrContent->ClearAllOptions();
            return $this->_OcrContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset OnDemandContent
         * @return DataServiceQuery
         */
        public function OnDemandContent()
        {
            $this->_OnDemandContent->ClearAllOptions();
            return $this->_OnDemandContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset BroadcastContent
         * @return DataServiceQuery
         */
        public function BroadcastContent()
        {
            $this->_BroadcastContent->ClearAllOptions();
            return $this->_BroadcastContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset AudioPeaksContent
         * @return DataServiceQuery
         */
        public function AudioPeaksContent()
        {
            $this->_AudioPeaksContent->ClearAllOptions();
            return $this->_AudioPeaksContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ExternalPublishingContent
         * @return DataServiceQuery
         */
        public function ExternalPublishingContent()
        {
            $this->_ExternalPublishingContent->ClearAllOptions();
            return $this->_ExternalPublishingContent;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ExternalPublishingProjects
         * @return DataServiceQuery
         */
        public function ExternalPublishingProjects()
        {
            $this->_ExternalPublishingProjects->ClearAllOptions();
            return $this->_ExternalPublishingProjects;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Roles
         * @return DataServiceQuery
         */
        public function Roles()
        {
            $this->_Roles->ClearAllOptions();
            return $this->_Roles;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ResourcePermissions
         * @return DataServiceQuery
         */
        public function ResourcePermissions()
        {
            $this->_ResourcePermissions->ClearAllOptions();
            return $this->_ResourcePermissions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset SsoRoleCache
         * @return DataServiceQuery
         */
        public function SsoRoleCache()
        {
            $this->_SsoRoleCache->ClearAllOptions();
            return $this->_SsoRoleCache;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset EmailTemplates
         * @return DataServiceQuery
         */
        public function EmailTemplates()
        {
            $this->_EmailTemplates->ClearAllOptions();
            return $this->_EmailTemplates;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Registrations
         * @return DataServiceQuery
         */
        public function Registrations()
        {
            $this->_Registrations->ClearAllOptions();
            return $this->_Registrations;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ResourceRegistrations
         * @return DataServiceQuery
         */
        public function ResourceRegistrations()
        {
            $this->_ResourceRegistrations->ClearAllOptions();
            return $this->_ResourceRegistrations;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset VideoPodcastProjects
         * @return DataServiceQuery
         */
        public function VideoPodcastProjects()
        {
            $this->_VideoPodcastProjects->ClearAllOptions();
            return $this->_VideoPodcastProjects;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Modules
         * @return DataServiceQuery
         */
        public function Modules()
        {
            $this->_Modules->ClearAllOptions();
            return $this->_Modules;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset CustomFieldDefinitions
         * @return DataServiceQuery
         */
        public function CustomFieldDefinitions()
        {
            $this->_CustomFieldDefinitions->ClearAllOptions();
            return $this->_CustomFieldDefinitions;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset CustomFieldValues
         * @return DataServiceQuery
         */
        public function CustomFieldValues()
        {
            $this->_CustomFieldValues->ClearAllOptions();
            return $this->_CustomFieldValues;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ReportRecurrences
         * @return DataServiceQuery
         */
        public function ReportRecurrences()
        {
            $this->_ReportRecurrences->ClearAllOptions();
            return $this->_ReportRecurrences;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ExternalPublishingPoints
         * @return DataServiceQuery
         */
        public function ExternalPublishingPoints()
        {
            $this->_ExternalPublishingPoints->ClearAllOptions();
            return $this->_ExternalPublishingPoints;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset Podcasts
         * @return DataServiceQuery
         */
        public function Podcasts()
        {
            $this->_Podcasts->ClearAllOptions();
            return $this->_Podcasts;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ServerReports
         * @return DataServiceQuery
         */
        public function ServerReports()
        {
            $this->_ServerReports->ClearAllOptions();
            return $this->_ServerReports;
        }
    
        /**
         * Function returns DataServiceQuery reference for
         * the entityset ApplicationTickets
         * @return DataServiceQuery
         */
        public function ApplicationTickets()
        {
            $this->_ApplicationTickets->ClearAllOptions();
            return $this->_ApplicationTickets;
        }
    
       /**
        * Functions for adding object to the entityset/collection
        */
    
       /**
        * Add Folders
        * @param Folders $object
        */
      public function AddToFolders($object)
        {
            return parent::AddObject('Folders', $object);
        }
    
       /**
        * Add Jobs
        * @param Jobs $object
        */
      public function AddToJobs($object)
        {
            return parent::AddObject('Jobs', $object);
        }
    
       /**
        * Add Templates
        * @param Templates $object
        */
      public function AddToTemplates($object)
        {
            return parent::AddObject('Templates', $object);
        }
    
       /**
        * Add Presentations
        * @param Presentations $object
        */
      public function AddToPresentations($object)
        {
            return parent::AddObject('Presentations', $object);
        }
    
       /**
        * Add Catalogs
        * @param Catalogs $object
        */
      public function AddToCatalogs($object)
        {
            return parent::AddObject('Catalogs', $object);
        }
    
       /**
        * Add CatalogSettings
        * @param CatalogSettings $object
        */
      public function AddToCatalogSettings($object)
        {
            return parent::AddObject('CatalogSettings', $object);
        }
    
       /**
        * Add Schedules
        * @param Schedules $object
        */
      public function AddToSchedules($object)
        {
            return parent::AddObject('Schedules', $object);
        }
    
       /**
        * Add Recorders
        * @param Recorders $object
        */
      public function AddToRecorders($object)
        {
            return parent::AddObject('Recorders', $object);
        }
    
       /**
        * Add RecorderStatus
        * @param RecorderStatus $object
        */
      public function AddToRecorderStatus($object)
        {
            return parent::AddObject('RecorderStatus', $object);
        }
    
       /**
        * Add RecorderLicenseStatus
        * @param RecorderLicenseStatus $object
        */
      public function AddToRecorderLicenseStatus($object)
        {
            return parent::AddObject('RecorderLicenseStatus', $object);
        }
    
       /**
        * Add ScheduledRecordingTimes
        * @param ScheduledRecordingTimes $object
        */
      public function AddToScheduledRecordingTimes($object)
        {
            return parent::AddObject('ScheduledRecordingTimes', $object);
        }
    
       /**
        * Add PresentationReports
        * @param PresentationReports $object
        */
      public function AddToPresentationReports($object)
        {
            return parent::AddObject('PresentationReports', $object);
        }
    
       /**
        * Add PresenterReports
        * @param PresenterReports $object
        */
      public function AddToPresenterReports($object)
        {
            return parent::AddObject('PresenterReports', $object);
        }
    
       /**
        * Add UserReports
        * @param UserReports $object
        */
      public function AddToUserReports($object)
        {
            return parent::AddObject('UserReports', $object);
        }
    
       /**
        * Add CatalogReports
        * @param CatalogReports $object
        */
      public function AddToCatalogReports($object)
        {
            return parent::AddObject('CatalogReports', $object);
        }
    
       /**
        * Add DownloadReports
        * @param DownloadReports $object
        */
      public function AddToDownloadReports($object)
        {
            return parent::AddObject('DownloadReports', $object);
        }
    
       /**
        * Add AuthoringReports
        * @param AuthoringReports $object
        */
      public function AddToAuthoringReports($object)
        {
            return parent::AddObject('AuthoringReports', $object);
        }
    
       /**
        * Add Players
        * @param Players $object
        */
      public function AddToPlayers($object)
        {
            return parent::AddObject('Players', $object);
        }
    
       /**
        * Add Home
        * @param Home $object
        */
      public function AddToHome($object)
        {
            return parent::AddObject('Home', $object);
        }
    
       /**
        * Add ShowcaseSettings
        * @param ShowcaseSettings $object
        */
      public function AddToShowcaseSettings($object)
        {
            return parent::AddObject('ShowcaseSettings', $object);
        }
    
       /**
        * Add Categories
        * @param Categories $object
        */
      public function AddToCategories($object)
        {
            return parent::AddObject('Categories', $object);
        }
    
       /**
        * Add QuotaPolicies
        * @param QuotaPolicies $object
        */
      public function AddToQuotaPolicies($object)
        {
            return parent::AddObject('QuotaPolicies', $object);
        }
    
       /**
        * Add QuotaLevels
        * @param QuotaLevels $object
        */
      public function AddToQuotaLevels($object)
        {
            return parent::AddObject('QuotaLevels', $object);
        }
    
       /**
        * Add TermsAndConditions
        * @param TermsAndConditions $object
        */
      public function AddToTermsAndConditions($object)
        {
            return parent::AddObject('TermsAndConditions', $object);
        }
    
       /**
        * Add Tags
        * @param Tags $object
        */
      public function AddToTags($object)
        {
            return parent::AddObject('Tags', $object);
        }
    
       /**
        * Add PresentationQuestions
        * @param PresentationQuestions $object
        */
      public function AddToPresentationQuestions($object)
        {
            return parent::AddObject('PresentationQuestions', $object);
        }
    
       /**
        * Add PlayerLayoutOptions
        * @param PlayerLayoutOptions $object
        */
      public function AddToPlayerLayoutOptions($object)
        {
            return parent::AddObject('PlayerLayoutOptions', $object);
        }
    
       /**
        * Add EmailInvitations
        * @param EmailInvitations $object
        */
      public function AddToEmailInvitations($object)
        {
            return parent::AddObject('EmailInvitations', $object);
        }
    
       /**
        * Add TimedEvents
        * @param TimedEvents $object
        */
      public function AddToTimedEvents($object)
        {
            return parent::AddObject('TimedEvents', $object);
        }
    
       /**
        * Add DistributionContentServerEndpoints
        * @param DistributionContentServerEndpoints $object
        */
      public function AddToDistributionContentServerEndpoints($object)
        {
            return parent::AddObject('DistributionContentServerEndpoints', $object);
        }
    
       /**
        * Add StorageContentServerEndpoints
        * @param StorageContentServerEndpoints $object
        */
      public function AddToStorageContentServerEndpoints($object)
        {
            return parent::AddObject('StorageContentServerEndpoints', $object);
        }
    
       /**
        * Add ContentServers
        * @param ContentServers $object
        */
      public function AddToContentServers($object)
        {
            return parent::AddObject('ContentServers', $object);
        }
    
       /**
        * Add Presenters
        * @param Presenters $object
        */
      public function AddToPresenters($object)
        {
            return parent::AddObject('Presenters', $object);
        }
    
       /**
        * Add ContentEncodingSettings
        * @param ContentEncodingSettings $object
        */
      public function AddToContentEncodingSettings($object)
        {
            return parent::AddObject('ContentEncodingSettings', $object);
        }
    
       /**
        * Add EncodingSettingsFilters
        * @param EncodingSettingsFilters $object
        */
      public function AddToEncodingSettingsFilters($object)
        {
            return parent::AddObject('EncodingSettingsFilters', $object);
        }
    
       /**
        * Add EncodingStreamDescriptions
        * @param EncodingStreamDescriptions $object
        */
      public function AddToEncodingStreamDescriptions($object)
        {
            return parent::AddObject('EncodingStreamDescriptions', $object);
        }
    
       /**
        * Add AuthorizationTickets
        * @param AuthorizationTickets $object
        */
      public function AddToAuthorizationTickets($object)
        {
            return parent::AddObject('AuthorizationTickets', $object);
        }
    
       /**
        * Add ShowcaseChannels
        * @param ShowcaseChannels $object
        */
      public function AddToShowcaseChannels($object)
        {
            return parent::AddObject('ShowcaseChannels', $object);
        }
    
       /**
        * Add Recurrences
        * @param Recurrences $object
        */
      public function AddToRecurrences($object)
        {
            return parent::AddObject('Recurrences', $object);
        }
    
       /**
        * Add PresentationAnalytics
        * @param PresentationAnalytics $object
        */
      public function AddToPresentationAnalytics($object)
        {
            return parent::AddObject('PresentationAnalytics', $object);
        }
    
       /**
        * Add PresentationClientAnalytics
        * @param PresentationClientAnalytics $object
        */
      public function AddToPresentationClientAnalytics($object)
        {
            return parent::AddObject('PresentationClientAnalytics', $object);
        }
    
       /**
        * Add PresentationUserAnalytics
        * @param PresentationUserAnalytics $object
        */
      public function AddToPresentationUserAnalytics($object)
        {
            return parent::AddObject('PresentationUserAnalytics', $object);
        }
    
       /**
        * Add PresentationIPAnalytics
        * @param PresentationIPAnalytics $object
        */
      public function AddToPresentationIPAnalytics($object)
        {
            return parent::AddObject('PresentationIPAnalytics', $object);
        }
    
       /**
        * Add ViewingTrendsSegments
        * @param ViewingTrendsSegments $object
        */
      public function AddToViewingTrendsSegments($object)
        {
            return parent::AddObject('ViewingTrendsSegments', $object);
        }
    
       /**
        * Add ViewingSessions
        * @param ViewingSessions $object
        */
      public function AddToViewingSessions($object)
        {
            return parent::AddObject('ViewingSessions', $object);
        }
    
       /**
        * Add ActiveSessions
        * @param ActiveSessions $object
        */
      public function AddToActiveSessions($object)
        {
            return parent::AddObject('ActiveSessions', $object);
        }
    
       /**
        * Add ViewingPlatformTotals
        * @param ViewingPlatformTotals $object
        */
      public function AddToViewingPlatformTotals($object)
        {
            return parent::AddObject('ViewingPlatformTotals', $object);
        }
    
       /**
        * Add UserAnalytics
        * @param UserAnalytics $object
        */
      public function AddToUserAnalytics($object)
        {
            return parent::AddObject('UserAnalytics', $object);
        }
    
       /**
        * Add UserPresentationAnalytics
        * @param UserPresentationAnalytics $object
        */
      public function AddToUserPresentationAnalytics($object)
        {
            return parent::AddObject('UserPresentationAnalytics', $object);
        }
    
       /**
        * Add ServerAnalytics
        * @param ServerAnalytics $object
        */
      public function AddToServerAnalytics($object)
        {
            return parent::AddObject('ServerAnalytics', $object);
        }
    
       /**
        * Add PresentationSources
        * @param PresentationSources $object
        */
      public function AddToPresentationSources($object)
        {
            return parent::AddObject('PresentationSources', $object);
        }
    
       /**
        * Add ActiveConnections
        * @param ActiveConnections $object
        */
      public function AddToActiveConnections($object)
        {
            return parent::AddObject('ActiveConnections', $object);
        }
    
       /**
        * Add ActivePresentations
        * @param ActivePresentations $object
        */
      public function AddToActivePresentations($object)
        {
            return parent::AddObject('ActivePresentations', $object);
        }
    
       /**
        * Add UserProfiles
        * @param UserProfiles $object
        */
      public function AddToUserProfiles($object)
        {
            return parent::AddObject('UserProfiles', $object);
        }
    
       /**
        * Add MediasiteTimeZones
        * @param MediasiteTimeZones $object
        */
      public function AddToMediasiteTimeZones($object)
        {
            return parent::AddObject('MediasiteTimeZones', $object);
        }
    
       /**
        * Add ApiKeys
        * @param ApiKeys $object
        */
      public function AddToApiKeys($object)
        {
            return parent::AddObject('ApiKeys', $object);
        }
    
       /**
        * Add PresentationThumbnailContent
        * @param PresentationThumbnailContent $object
        */
      public function AddToPresentationThumbnailContent($object)
        {
            return parent::AddObject('PresentationThumbnailContent', $object);
        }
    
       /**
        * Add PodcastContent
        * @param PodcastContent $object
        */
      public function AddToPodcastContent($object)
        {
            return parent::AddObject('PodcastContent', $object);
        }
    
       /**
        * Add VideoPodcastContent
        * @param VideoPodcastContent $object
        */
      public function AddToVideoPodcastContent($object)
        {
            return parent::AddObject('VideoPodcastContent', $object);
        }
    
       /**
        * Add CaptionContent
        * @param CaptionContent $object
        */
      public function AddToCaptionContent($object)
        {
            return parent::AddObject('CaptionContent', $object);
        }
    
       /**
        * Add SlideContent
        * @param SlideContent $object
        */
      public function AddToSlideContent($object)
        {
            return parent::AddObject('SlideContent', $object);
        }
    
       /**
        * Add OcrContent
        * @param OcrContent $object
        */
      public function AddToOcrContent($object)
        {
            return parent::AddObject('OcrContent', $object);
        }
    
       /**
        * Add OnDemandContent
        * @param OnDemandContent $object
        */
      public function AddToOnDemandContent($object)
        {
            return parent::AddObject('OnDemandContent', $object);
        }
    
       /**
        * Add BroadcastContent
        * @param BroadcastContent $object
        */
      public function AddToBroadcastContent($object)
        {
            return parent::AddObject('BroadcastContent', $object);
        }
    
       /**
        * Add AudioPeaksContent
        * @param AudioPeaksContent $object
        */
      public function AddToAudioPeaksContent($object)
        {
            return parent::AddObject('AudioPeaksContent', $object);
        }
    
       /**
        * Add ExternalPublishingContent
        * @param ExternalPublishingContent $object
        */
      public function AddToExternalPublishingContent($object)
        {
            return parent::AddObject('ExternalPublishingContent', $object);
        }
    
       /**
        * Add ExternalPublishingProjects
        * @param ExternalPublishingProjects $object
        */
      public function AddToExternalPublishingProjects($object)
        {
            return parent::AddObject('ExternalPublishingProjects', $object);
        }
    
       /**
        * Add Roles
        * @param Roles $object
        */
      public function AddToRoles($object)
        {
            return parent::AddObject('Roles', $object);
        }
    
       /**
        * Add ResourcePermissions
        * @param ResourcePermissions $object
        */
      public function AddToResourcePermissions($object)
        {
            return parent::AddObject('ResourcePermissions', $object);
        }
    
       /**
        * Add SsoRoleCache
        * @param SsoRoleCache $object
        */
      public function AddToSsoRoleCache($object)
        {
            return parent::AddObject('SsoRoleCache', $object);
        }
    
       /**
        * Add EmailTemplates
        * @param EmailTemplates $object
        */
      public function AddToEmailTemplates($object)
        {
            return parent::AddObject('EmailTemplates', $object);
        }
    
       /**
        * Add Registrations
        * @param Registrations $object
        */
      public function AddToRegistrations($object)
        {
            return parent::AddObject('Registrations', $object);
        }
    
       /**
        * Add ResourceRegistrations
        * @param ResourceRegistrations $object
        */
      public function AddToResourceRegistrations($object)
        {
            return parent::AddObject('ResourceRegistrations', $object);
        }
    
       /**
        * Add VideoPodcastProjects
        * @param VideoPodcastProjects $object
        */
      public function AddToVideoPodcastProjects($object)
        {
            return parent::AddObject('VideoPodcastProjects', $object);
        }
    
       /**
        * Add Modules
        * @param Modules $object
        */
      public function AddToModules($object)
        {
            return parent::AddObject('Modules', $object);
        }
    
       /**
        * Add CustomFieldDefinitions
        * @param CustomFieldDefinitions $object
        */
      public function AddToCustomFieldDefinitions($object)
        {
            return parent::AddObject('CustomFieldDefinitions', $object);
        }
    
       /**
        * Add CustomFieldValues
        * @param CustomFieldValues $object
        */
      public function AddToCustomFieldValues($object)
        {
            return parent::AddObject('CustomFieldValues', $object);
        }
    
       /**
        * Add ReportRecurrences
        * @param ReportRecurrences $object
        */
      public function AddToReportRecurrences($object)
        {
            return parent::AddObject('ReportRecurrences', $object);
        }
    
       /**
        * Add ExternalPublishingPoints
        * @param ExternalPublishingPoints $object
        */
      public function AddToExternalPublishingPoints($object)
        {
            return parent::AddObject('ExternalPublishingPoints', $object);
        }
    
       /**
        * Add Podcasts
        * @param Podcasts $object
        */
      public function AddToPodcasts($object)
        {
            return parent::AddObject('Podcasts', $object);
        }
    
       /**
        * Add ServerReports
        * @param ServerReports $object
        */
      public function AddToServerReports($object)
        {
            return parent::AddObject('ServerReports', $object);
        }
    
       /**
        * Add ApplicationTickets
        * @param ApplicationTickets $object
        */
      public function AddToApplicationTickets($object)
        {
            return parent::AddObject('ApplicationTickets', $object);
        }
    

       /**
        * This function returns the entities.
        */
        public function getEntities()
        {
            return $this->_entities;
        }
    }
  
?>
  
